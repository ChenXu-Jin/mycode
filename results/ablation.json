{
  "0": "SELECT T1.\"Free Meal Count (K-12)\" * 1.0 / T1.\"Enrollment (K-12)\" FROM frpm AS T1 WHERE T1.\"County Name\" = 'Alameda' AND T1.\"Enrollment (K-12)\" IS NOT NULL AND T1.\"Enrollment (K-12)\" > 0 AND T1.\"Free Meal Count (K-12)\" IS NOT NULL ORDER BY (T1.\"Free Meal Count (K-12)\" * 1.0 / T1.\"Enrollment (K-12)\") DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "1": "SELECT T1.\"Free Meal Count (Ages 5-17)\" * 1.0 / T1.\"Enrollment (Ages 5-17)\" AS EligibleFreeRate FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsName = 'Continuation School' AND T1.\"Enrollment (Ages 5-17)\" IS NOT NULL AND T1.\"Enrollment (Ages 5-17)\" > 0 AND T1.\"Free Meal Count (Ages 5-17)\" IS NOT NULL ORDER BY EligibleFreeRate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
  "2": "SELECT T2.Zip FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Charter School (Y/N)\" = 1 AND T1.\"District Name\" = 'Fresno County Office of Education' AND T2.Zip IS NOT NULL\t----- bird -----\tcalifornia_schools",
  "3": "SELECT T2.MailStreet, T2.MailCity, T2.MailState, T2.MailZip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"FRPM Count (K-12)\" IS NOT NULL ORDER BY T1.\"FRPM Count (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "4": "SELECT T2.Phone FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Charter School (Y/N)\" = 1 AND T1.\"Charter Funding Type\" = 'Direct' AND T2.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
  "5": "SELECT COUNT(T2.CDSCode) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 400 AND T1.AvgScrMath IS NOT NULL AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
  "6": "SELECT T1.School FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 500 AND T1.Magnet = 1\t----- bird -----\tcalifornia_schools",
  "7": "SELECT T2.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "8": "SELECT T2.NumTstTakr FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.\"FRPM Count (K-12)\" IS NOT NULL ORDER BY T1.\"FRPM Count (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "9": "SELECT count(*) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T1.AvgScrMath IS NOT NULL AND T2.FundingType = 'Directly Funded Charter';\t----- bird -----\tcalifornia_schools",
  "10": "SELECT T1.\"FRPM Count (Ages 5-17)\" FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead IS NOT NULL ORDER BY T2.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "11": "SELECT CDSCode FROM frpm WHERE \"Enrollment (K-12)\" IS NOT NULL AND \"Enrollment (Ages 5-17)\" IS NOT NULL AND (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500\t----- bird -----\tcalifornia_schools",
  "12": "SELECT CAST(T2.\"Free Meal Count (Ages 5-17)\" AS REAL) / T2.\"Enrollment (Ages 5-17)\" FROM satscores AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr IS NOT NULL AND T1.NumTstTakr > 0 AND T1.NumGE1500 IS NOT NULL AND CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr > 0.3 AND T2.\"Enrollment (Ages 5-17)\" IS NOT NULL AND T2.\"Enrollment (Ages 5-17)\" > 0 AND T2.\"Free Meal Count (Ages 5-17)\" IS NOT NULL ORDER BY CAST(T2.\"Free Meal Count (Ages 5-17)\" AS REAL) / T2.\"Enrollment (Ages 5-17)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "13": "SELECT T2.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 0 AND T1.NumGE1500 IS NOT NULL ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
  "14": "SELECT T2.NCESSchool FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Enrollment (Ages 5-17)\" IS NOT NULL ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
  "15": "SELECT T1.dname FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.rtype = 'D' AND T2.StatusType = 'Active' AND T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "16": "SELECT COUNT(T2.CDSCode) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Alameda' AND T2.District = 'merged' AND T1.NumTstTakr < 100 AND T1.NumTstTakr IS NOT NULL;\t----- bird -----\tcalifornia_schools",
  "17": "SELECT T2.CharterNum FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499;\t----- bird -----\tcalifornia_schools",
  "18": "SELECT COUNT(*) FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Contra Costa' AND T1.FundingType = 'Directly Funded' AND T2.NumTstTakr <= 250 AND T2.NumTstTakr IS NOT NULL;\t----- bird -----\tcalifornia_schools",
  "19": "SELECT T1.Phone FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath IS NOT NULL ORDER BY T2.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "20": "SELECT count(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
  "21": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 WHERE T1.\"County Name\" = 'Los Angeles' AND T1.\"Free Meal Count (K-12)\" > 500 AND T1.\"FRPM Count (K-12)\" < 700 AND T1.\"Free Meal Count (K-12)\" IS NOT NULL AND T1.\"FRPM Count (K-12)\" IS NOT NULL;\t----- bird -----\tcalifornia_schools",
  "22": "SELECT T1.cds FROM satscores AS T1 WHERE T1.cname = 'Contra Costa' AND T1.NumTstTakr IS NOT NULL ORDER BY T1.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "23": "SELECT T2.School, T2.Street FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Enrollment (Ages 5-17)` IS NOT NULL AND ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
  "24": "SELECT DISTINCT T1.School FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T2.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND T3.NumGE1500 > 0 AND T2.\"Percent (%) Eligible Free (K-12)\" IS NOT NULL AND T3.NumGE1500 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
  "25": "SELECT T1.School ,  T1.FundingType FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode  =  T2.cds WHERE T1.County  =  'Riverside' AND T2.AvgScrMath  >  400 AND T2.AvgScrMath IS NOT NULL\t----- bird -----\tcalifornia_schools",
  "26": "SELECT T1.School ,  T1.Zip ,  T1.Street ,  T1.City ,  T1.State FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode  =  T2.CDSCode WHERE T1.County  =  'Monterey' AND T2.\"School Type\"  =  'High School' AND T2.\"FRPM Count (Ages 5-17)\"  >  800\t----- bird -----\tcalifornia_schools",
  "27": "SELECT T2.School, T1.AvgScrWrite, T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite IS NOT NULL AND ((T2.OpenDate IS NOT NULL AND CAST(STRFTIME('%Y', T2.OpenDate) AS INTEGER) > 1991) OR (T2.ClosedDate IS NOT NULL AND CAST(STRFTIME('%Y', T2.ClosedDate) AS INTEGER) < 2000));\t----- bird -----\tcalifornia_schools",
  "28": "SELECT T2.School ,  T2.DOCType FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode  =  T2.CDSCode WHERE T2.FundingType  =  'Locally funded' AND T1.\"Enrollment (K-12)\" IS NOT NULL AND T1.\"Enrollment (Ages 5-17)\" IS NOT NULL AND T1.\"Enrollment (K-12)\" - T1.\"Enrollment (Ages 5-17)\"  >  (SELECT avg(T1_sub.\"Enrollment (K-12)\" - T1_sub.\"Enrollment (Ages 5-17)\") FROM frpm AS T1_sub JOIN schools AS T2_sub ON T1_sub.CDSCode  =  T2_sub.CDSCode WHERE T2_sub.FundingType  =  'Locally funded' AND T1_sub.\"Enrollment (K-12)\" IS NOT NULL AND T1_sub.\"Enrollment (Ages 5-17)\" IS NOT NULL)\t----- bird -----\tcalifornia_schools",
  "29": "SELECT T2.OpenDate FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Enrollment (K-12)\" IS NOT NULL ORDER BY T1.\"Enrollment (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "30": "SELECT T2.City FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Enrollment (K-12)\" IS NOT NULL ORDER BY T1.\"Enrollment (K-12)\" ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
  "31": "SELECT CAST(T1.\"Free Meal Count (K-12)\" AS REAL) / CAST(T1.\"Enrollment (K-12)\" AS REAL) FROM frpm AS T1 WHERE T1.\"Enrollment (K-12)\" IS NOT NULL AND T1.\"Free Meal Count (K-12)\" IS NOT NULL AND T1.\"Enrollment (K-12)\" > 0 ORDER BY T1.\"Enrollment (K-12)\" DESC LIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
  "32": "SELECT T2.\"FRPM Count (K-12)\" / T2.\"Enrollment (K-12)\" FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '66' AND T2.\"FRPM Count (K-12)\" IS NOT NULL AND T2.\"Enrollment (K-12)\" > 0 ORDER BY T2.\"FRPM Count (K-12)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
  "33": "SELECT T2.School, T2.Website FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
  "34": "SELECT T1.`Free Meal Count (Ages 5-17)` * 1.0 / T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE (T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson') OR (T2.AdmFName2 = 'Kacey' AND T2.AdmLName2 = 'Gibson') OR (T2.AdmFName3 = 'Kacey' AND T2.AdmLName3 = 'Gibson') AND T1.`Enrollment (Ages 5-17)` IS NOT NULL AND T1.`Enrollment (Ages 5-17)` > 0 AND T1.`Free Meal Count (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools",
  "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "36": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "37": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL AND T1.NumTstTakr IS NOT NULL AND T1.NumTstTakr > 0 ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
  "39": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND STRFTIME('%Y', T1.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
  "40": "SELECT T1.Phone FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.dname = 'Fresno Unified' AND T2.AvgScrRead IS NOT NULL ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "41": "SELECT T1.CDSCode FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' AND T2.AvgScrRead IS NOT NULL ORDER BY T2.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
  "42": "SELECT T2.EdOpsName FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "43": "SELECT T1.AvgScrMath ,  T1.cname FROM satscores AS T1 WHERE T1.AvgScrRead IS NOT NULL AND T1.AvgScrMath IS NOT NULL AND T1.AvgScrWrite IS NOT NULL ORDER BY (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "44": "SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "45": "SELECT T1.School ,  T2.AvgScrWrite FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode  =  T2.cds WHERE T1.AdmFName1  =  'Ricci' AND T1.AdmLName1  =  'Ulrich' OR T1.AdmFName2  =  'Ricci' AND T1.AdmLName2  =  'Ulrich' OR T1.AdmFName3  =  'Ricci' AND T1.AdmLName3  =  'Ulrich' AND T2.AvgScrWrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
  "46": "SELECT T1.CDSCode FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '31' AND T2.\"Enrollment (K-12)\" IS NOT NULL ORDER BY T2.\"Enrollment (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "47": "SELECT CAST(COUNT(*) AS REAL) / 12.0 FROM schools WHERE County = 'Alameda' AND DOC = '52' AND STRFTIME('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
  "48": "SELECT CAST(SUM(CASE WHEN T1.DOC = '54' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.DOC = '52' THEN 1 ELSE 0 END) FROM schools AS T1 WHERE T1.County = 'Orange' AND T1.StatusType = 'Merged';\t----- bird -----\tcalifornia_schools",
  "49": "SELECT T1.School, T1.ClosedDate FROM schools AS T1 WHERE T1.StatusType = 'Closed' AND T1.ClosedDate IS NOT NULL AND T1.County = (SELECT T2.County FROM schools AS T2 WHERE T2.StatusType = 'Closed' AND T2.ClosedDate IS NOT NULL GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
  "50": "SELECT T2.MailStreet, T1.sname FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 5;\t----- bird -----\tcalifornia_schools",
  "51": "SELECT T2.MailStreet ,  T2.School FROM satscores AS T1 JOIN schools AS T2 ON T1.cds  =  T2.CDSCode WHERE T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "52": "SELECT COUNT(T1.cds) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead IS NOT NULL AND T1.AvgScrMath IS NOT NULL AND T1.AvgScrWrite IS NOT NULL AND (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
  "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
  "54": "SELECT T1.School, T1.MailZip FROM schools AS T1 WHERE (T1.AdmFName1 = 'Avetik' AND T1.AdmLName1 = 'Atoian') OR (T1.AdmFName2 = 'Avetik' AND T1.AdmLName2 = 'Atoian') OR (T1.AdmFName3 = 'Avetik' AND T1.AdmLName3 = 'Atoian');\t----- bird -----\tcalifornia_schools",
  "55": "SELECT CAST(COUNT(CASE WHEN T1.County = 'Colusa' THEN T1.CDSCode END) AS REAL) / COUNT(CASE WHEN T1.County = 'Humboldt' THEN T1.CDSCode END) FROM schools AS T1 WHERE T1.MailState = 'CA';\t----- bird -----\tcalifornia_schools",
  "56": "SELECT count(*) FROM schools AS T1 WHERE T1.MailState = 'CA' AND T1.County = 'San Joaquin' AND T1.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
  "57": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite IS NOT NULL ORDER BY T1.AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
  "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
  "59": "SELECT T1.Website FROM schools AS T1 WHERE (T1.AdmFName1 = 'Mike' AND T1.AdmLName1 = 'Larson') OR (T1.AdmFName2 = 'Mike' AND T1.AdmLName2 = 'Larson') OR (T1.AdmFName3 = 'Mike' AND T1.AdmLName3 = 'Larson') OR (T1.AdmFName1 = 'Dante' AND T1.AdmLName1 = 'Alvarez') OR (T1.AdmFName2 = 'Dante' AND T1.AdmLName2 = 'Alvarez') OR (T1.AdmFName3 = 'Dante' AND T1.AdmLName3 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
  "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
  "61": "SELECT count(*) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOC = '52';\t----- bird -----\tcalifornia_schools",
  "62": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.Charter = 0 AND T2.\"Enrollment (K-12)\" IS NOT NULL AND T2.\"Enrollment (K-12)\" > 0 AND T2.\"Free Meal Count (K-12)\" IS NOT NULL AND (CAST(T2.\"Free Meal Count (K-12)\" AS REAL) * 100.0 / T2.\"Enrollment (K-12)\") < 0.18\t----- bird -----\tcalifornia_schools",
  "63": "SELECT T1.School ,  T1.City ,  T1.AdmFName1 ,  T1.AdmLName1 ,  T1.AdmFName2 ,  T1.AdmLName2 ,  T1.AdmFName3 ,  T1.AdmLName3 FROM schools AS T1 WHERE T1.Charter = 1 AND T1.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
  "64": "SELECT count(*) FROM schools AS T1 WHERE T1.MailCity = 'Hickman' AND T1.CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
  "65": "SELECT CAST(COUNT(CASE WHEN T1.FundingType = 'Locally Funded' THEN 1 END) AS REAL) * 100.0 / COUNT(T1.CDSCode) FROM schools AS T1 WHERE T1.County = 'Santa Clara' AND T1.Charter = 1;\t----- bird -----\tcalifornia_schools",
  "66": "SELECT COUNT(*) FROM schools AS T1 WHERE T1.OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND T1.FundingType = 'Directly Funded' AND T1.County = 'Stanislaus';\t----- bird -----\tcalifornia_schools",
  "67": "SELECT count(*) FROM schools WHERE City = 'San Francisco' AND DOCType = 'Community College District' AND STRFTIME('%Y', ClosedDate) = '1989';\t----- bird -----\tcalifornia_schools",
  "68": "SELECT T1.County FROM schools AS T1 WHERE T1.SOC = '11' AND T1.ClosedDate IS NOT NULL AND CAST(strftime('%Y', T1.ClosedDate) AS INTEGER) BETWEEN 1980 AND 1989 GROUP BY T1.County ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "69": "SELECT NCESDist FROM schools WHERE SOC = '31'\t----- bird -----\tcalifornia_schools",
  "70": "SELECT COUNT(*) FROM schools AS T1 WHERE T1.County = 'Alpine' AND T1.DOCType = 'District Community Day Schools' AND T1.StatusType IN ('Active', 'Closed');\t----- bird -----\tcalifornia_schools",
  "71": "SELECT DISTINCT T1.\"District Code\" FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0\t----- bird -----\tcalifornia_schools",
  "72": "SELECT T1.\"Enrollment (Ages 5-17)\" FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsCode = 'SSS' AND T2.City = 'Fremont' AND T1.\"Academic Year\" = '2014-2015' AND T1.\"Enrollment (Ages 5-17)\" IS NOT NULL\t----- bird -----\tcalifornia_schools",
  "73": "SELECT T1.\"FRPM Count (Ages 5-17)\" FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOCType = 'Youth Authority School' AND T2.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
  "74": "SELECT T2.\"Low Grade\" FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EdOpsCode = 'SPECON' AND T1.NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
  "75": "SELECT T2.EILName ,  T2.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode  =  T2.CDSCode WHERE T1.`County Code`  =  '37' AND T1.`NSLP Provision Status`  =  'Breakfast Provision 2'\t----- bird -----\tcalifornia_schools",
  "76": "SELECT T1.City FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EILCode = 'HS' AND T2.\"NSLP Provision Status\" = 'Provision 2' AND T2.\"Low Grade\" = '09' AND T2.\"High Grade\" = '12' AND T1.County = 'Merced'\t----- bird -----\tcalifornia_schools",
  "77": "SELECT T1.School, T2.\"Percent (%) Eligible FRPM (Ages 5-17)\" FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.GSserved = 'KG-09';\t----- bird -----\tcalifornia_schools",
  "78": "SELECT GSserved FROM schools AS T1 WHERE T1.City = 'Adelanto' AND T1.GSserved IS NOT NULL GROUP BY T1.GSserved ORDER BY count(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "79": "SELECT T1.County ,  COUNT(*) FROM schools AS T1 WHERE T1.County IN ('San Diego', 'Santa Barbara') AND T1.Virtual  =  'F' GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "80": "SELECT T1.SOCType, T1.School, T1.Latitude FROM schools AS T1 WHERE T1.Latitude IS NOT NULL ORDER BY T1.Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "81": "SELECT T1.City, T1.School, T2.\"Low Grade\" FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' AND T1.Latitude IS NOT NULL AND T2.\"Low Grade\" IS NOT NULL ORDER BY T1.Latitude ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "82": "SELECT GSoffered FROM schools WHERE Longitude IS NOT NULL ORDER BY Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "83": "SELECT T1.City ,  COUNT(T1.CDSCode) FROM schools AS T1 WHERE T1.GSserved = 'K-8' AND T1.City IS NOT NULL GROUP BY T1.City\t----- bird -----\tcalifornia_schools",
  "84": "WITH AdminList AS ( SELECT T1.AdmFName1 AS FName, T1.District FROM schools AS T1 WHERE T1.AdmFName1 IS NOT NULL UNION ALL SELECT T1.AdmFName2 AS FName, T1.District FROM schools AS T1 WHERE T1.AdmFName2 IS NOT NULL UNION ALL SELECT T1.AdmFName3 AS FName, T1.District FROM schools AS T1 WHERE T1.AdmFName3 IS NOT NULL ), TopNames AS ( SELECT FName FROM AdminList GROUP BY FName ORDER BY COUNT(*) DESC LIMIT 2 ) SELECT T2.FName, T2.District FROM AdminList AS T2 JOIN TopNames ON T2.FName = TopNames.FName;\t----- bird -----\tcalifornia_schools",
  "85": "SELECT T1.\"Percent (%) Eligible Free (K-12)\", T1.\"District Code\" FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' OR T2.AdmFName2 = 'Alusine' OR T2.AdmFName3 = 'Alusine'\t----- bird -----\tcalifornia_schools",
  "86": "SELECT T1.AdmLName1 ,  T1.District ,  T1.County ,  T1.School FROM schools AS T1 WHERE T1.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
  "87": "SELECT T1.AdmEmail1 ,  T1.AdmEmail2 ,  T1.AdmEmail3 FROM schools AS T1 WHERE T1.County = 'San Bernardino' AND T1.District = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (T1.SOC = '62' OR T1.DOC = '54');\t----- bird -----\tcalifornia_schools",
  "88": "SELECT T2.School, T2.AdmEmail1, T2.AdmEmail2, T2.AdmEmail3 FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
  "89": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
  "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
  "91": "SELECT CASE WHEN avg(A12) > avg(A13) THEN 1995 ELSE 1996 END FROM district\t----- bird -----\tfinancial",
  "92": "SELECT count(DISTINCT T1.district_id) FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A11 > 6000 AND T1.A11 < 10000 AND T2.gender = 'F'\t----- bird -----\tfinancial",
  "93": "SELECT count(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
  "94": "SELECT T3.account_id, (SELECT A11 FROM district WHERE A11 IS NOT NULL ORDER BY A11 DESC LIMIT 1) - (SELECT A11 FROM district WHERE A11 IS NOT NULL ORDER BY A11 ASC LIMIT 1) AS salary_gap FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.client_id = T3.client_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT birth_date FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1) AND T2.A11 = (SELECT A11 FROM district WHERE A11 IS NOT NULL ORDER BY A11 ASC LIMIT 1);\t----- bird -----\tfinancial",
  "95": "SELECT T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.client_id = T3.client_id WHERE T1.birth_date IS NOT NULL AND T2.A11 IS NOT NULL ORDER BY T1.birth_date DESC, T2.A11 DESC LIMIT 1\t----- bird -----\tfinancial",
  "96": "SELECT COUNT(DISTINCT T2.client_id) FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
  "97": "SELECT DISTINCT T1.client_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
  "98": "SELECT T1.account_id FROM account AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND STRFTIME('%Y', T2.date) = '1997' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
  "99": "SELECT T1.account_id FROM account AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T2.duration > 12 ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
  "100": "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Sokolov'\t----- bird -----\tfinancial",
  "101": "SELECT T1.account_id FROM trans AS T1 WHERE strftime('%Y', T1.date) = '1995' AND T1.date = ( SELECT T2.date FROM trans AS T2 WHERE strftime('%Y', T2.date) = '1995' ORDER BY T2.date ASC LIMIT 1 );\t----- bird -----\tfinancial",
  "102": "SELECT DISTINCT T1.account_id FROM account AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.balance > 3000;\t----- bird -----\tfinancial",
  "103": "SELECT T2.client_id FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
  "104": "SELECT T2.date FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 840 AND T1.date = '1998-10-14'\t----- bird -----\tfinancial",
  "105": "SELECT T2.district_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'\t----- bird -----\tfinancial",
  "106": "SELECT T3.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.issued = '1996-10-21' ORDER BY T3.amount DESC LIMIT 1\t----- bird -----\tfinancial",
  "107": "SELECT T1.gender FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.district_id = (SELECT T5.district_id FROM district AS T5 ORDER BY T5.A11 DESC LIMIT 1) ORDER BY T1.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
  "108": "SELECT T1.amount FROM trans AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.loan_id = (SELECT T3.loan_id FROM loan AS T3 ORDER BY T3.amount DESC LIMIT 1) ORDER BY T1.date ASC, T1.trans_id ASC LIMIT 1;\t----- bird -----\tfinancial",
  "109": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A2 = 'Jesenik'\t----- bird -----\tfinancial",
  "110": "SELECT T2.disp_id FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
  "111": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
  "112": "SELECT T4.A2 FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
  "113": "SELECT T3.birth_date FROM loan AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.amount = 98832 AND T1.date = '1996-01-03'\t----- bird -----\tfinancial",
  "114": "SELECT T4.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.client_id = T3.client_id JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T2.A3 = 'Prague' ORDER BY T4.date ASC LIMIT 1\t----- bird -----\tfinancial",
  "115": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 WHERE T1.district_id = (SELECT T2.district_id FROM district AS T2 WHERE T2.A3 = 'south Bohemia' ORDER BY T2.A4 DESC LIMIT 1);\t----- bird -----\tfinancial",
  "116": "WITH TargetAccount AS (\n  SELECT T1.account_id\n  FROM loan AS T1\n  WHERE T1.date = '1993-07-05'\n  LIMIT 1\n), Balance1993 AS (\n  SELECT T2.balance AS bal93\n  FROM trans AS T2\n  WHERE T2.account_id = (SELECT account_id FROM TargetAccount)\n    AND T2.date = '1993-03-22'\n  ORDER BY T2.trans_id DESC\n  LIMIT 1\n), Balance1998 AS (\n  SELECT T3.balance AS bal98\n  FROM trans AS T3\n  WHERE T3.account_id = (SELECT account_id FROM TargetAccount)\n    AND T3.date = '1998-12-27'\n  ORDER BY T3.trans_id DESC\n  LIMIT 1\n)\nSELECT ( T2.bal98 - T1.bal93 ) * 100.0 / T1.bal93\nFROM Balance1993 AS T1, Balance1998 AS T2;\t----- bird -----\tfinancial",
  "117": "SELECT CAST(SUM(CASE WHEN T1.status = 'A' THEN T1.amount ELSE 0 END) AS REAL) * 100 / SUM(T1.amount) FROM loan AS T1\t----- bird -----\tfinancial",
  "118": "SELECT SUM(CASE WHEN T1.status = 'C' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.loan_id) FROM loan AS T1 WHERE T1.amount < 100000\t----- bird -----\tfinancial",
  "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
  "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN client AS T3 ON T2.client_id = T3.client_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
  "121": "SELECT T1.account_id, T1.date FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
  "122": "SELECT T3.A2 ,  T3.A3 FROM loan AS T1 JOIN account AS T2 ON T1.account_id  =  T2.account_id JOIN district AS T3 ON T2.district_id  =  T3.district_id WHERE T1.loan_id  =  4990\t----- bird -----\tfinancial",
  "123": "SELECT T1.account_id, T3.A2, T3.A3 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000;\t----- bird -----\tfinancial",
  "124": "SELECT T1.loan_id, T3.A3, T3.A11 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
  "125": "SELECT DISTINCT T3.A2 ,  T3.A3 ,  ( T3.A13 - T3.A12 ) * 100.0 / T3.A12 FROM loan AS T1 JOIN account AS T2 ON T1.account_id  =  T2.account_id JOIN district AS T3 ON T2.district_id  =  T3.district_id WHERE T1.status  =  'D' AND T3.A12 IS NOT NULL AND T3.A13 IS NOT NULL AND T3.A12 != 0\t----- bird -----\tfinancial",
  "126": "SELECT CAST(SUM(CASE WHEN T2.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993';\t----- bird -----\tfinancial",
  "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
  "128": "SELECT T3.A2 FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.gender = 'F' GROUP BY T3.A2 ORDER BY COUNT(DISTINCT T1.client_id) DESC LIMIT 10\t----- bird -----\tfinancial",
  "129": "SELECT T3.A2 FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
  "130": "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'South Bohemia' AND NOT EXISTS (SELECT 1 FROM disp AS T3 JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T3.client_id = T1.client_id)\t----- bird -----\tfinancial",
  "131": "SELECT T3.A3 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status IN ('C', 'D') GROUP BY T3.district_id ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
  "132": "SELECT AVG(T1.amount) FROM loan AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M'\t----- bird -----\tfinancial",
  "133": "SELECT T1.A3, T1.A2 FROM district AS T1 WHERE T1.A13 = (SELECT A13 FROM district WHERE A13 IS NOT NULL ORDER BY A13 DESC LIMIT 1)\t----- bird -----\tfinancial",
  "134": "SELECT count(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = (SELECT district_id FROM district WHERE A16 IS NOT NULL ORDER BY A16 DESC LIMIT 1)\t----- bird -----\tfinancial",
  "135": "SELECT count(DISTINCT T1.account_id) FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.balance < 0 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
  "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
  "137": "SELECT COUNT(DISTINCT T2.account_id) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.district_id = 1\t----- bird -----\tfinancial",
  "138": "SELECT count(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T1.district_id = (SELECT T3.district_id FROM district AS T3 WHERE T3.A15 IS NOT NULL ORDER BY T3.A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
  "139": "SELECT COUNT(T1.card_id) FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'DISPONENT';\t----- bird -----\tfinancial",
  "140": "SELECT count(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
  "141": "SELECT DISTINCT T3.district_id FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.date) = '1997'\t----- bird -----\tfinancial",
  "142": "SELECT T1.account_id FROM \"order\" AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
  "143": "SELECT T2.account_id FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type IN ('gold', 'junior') GROUP BY T2.account_id HAVING COUNT(DISTINCT T1.type) = 2\t----- bird -----\tfinancial",
  "144": "SELECT AVG(T2.monthly_sum) FROM (SELECT SUM(T1.amount) AS monthly_sum FROM trans AS T1 WHERE T1.operation = 'VYBER KARTOU' AND STRFTIME('%Y', T1.date) = '2021' GROUP BY STRFTIME('%Y-%m', T1.date)) AS T2;\t----- bird -----\tfinancial",
  "145": "WITH MonthlySpendingPerAccount AS ( SELECT T1.account_id, strftime('%Y-%m', T1.date) AS month_year, SUM(T1.amount) AS monthly_sum FROM trans AS T1 WHERE T1.operation = 'VYBER KARTOU' AND strftime('%Y', T1.date) = '1998' GROUP BY T1.account_id, month_year ), AvgMonthlySpendingPerAccount AS ( SELECT T2.account_id, AVG(T2.monthly_sum) AS avg_account_spending FROM MonthlySpendingPerAccount AS T2 GROUP BY T2.account_id ), MonthlyTotals AS ( SELECT strftime('%Y-%m', T3.date) AS month_year, SUM(T3.amount) AS total_monthly_amount FROM trans AS T3 WHERE T3.operation = 'VYBER KARTOU' AND strftime('%Y', T3.date) = '1998' GROUP BY month_year ), OverallAvg AS ( SELECT AVG(T4.total_monthly_amount) AS overall_avg_spending FROM MonthlyTotals AS T4 ) SELECT T5.account_id FROM AvgMonthlySpendingPerAccount AS T5 CROSS JOIN OverallAvg AS T6 WHERE T5.avg_account_spending < T6.overall_avg_spending;\t----- bird -----\tfinancial",
  "146": "SELECT DISTINCT T1.client_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN card AS T3 ON T2.disp_id = T3.disp_id JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial",
  "147": "SELECT COUNT(DISTINCT T3.account_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.client_id = T3.client_id WHERE T1.gender = 'F' AND T2.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
  "148": "SELECT DISTINCT T1.account_id FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
  "149": "SELECT DISTINCT T1.type FROM disp AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A11 > 8000 AND T3.A11 <= 9000 AND T1.type != 'OWNER'\t----- bird -----\tfinancial",
  "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB';\t----- bird -----\tfinancial",
  "151": "SELECT DISTINCT T3.A2 FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ'\t----- bird -----\tfinancial",
  "152": "SELECT avg(T1.A15) FROM district AS T1 WHERE T1.A15 > 4000 AND T1.A15 IS NOT NULL AND EXISTS (SELECT 1 FROM account AS T2 WHERE T2.district_id = T1.district_id AND STRFTIME('%Y', T2.date) >= '1997')\t----- bird -----\tfinancial",
  "153": "SELECT count(T1.card_id) FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
  "154": "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
  "155": "SELECT SUM(CASE WHEN T1.type = 'gold' AND T1.issued < '1998-01-01' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.card_id) FROM card AS T1\t----- bird -----\tfinancial",
  "156": "SELECT T2.client_id FROM loan AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
  "157": "SELECT T2.A15 FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532;\t----- bird -----\tfinancial",
  "158": "SELECT T2.district_id FROM 'order' AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 33333\t----- bird -----\tfinancial",
  "159": "SELECT T3.trans_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 3356 AND T3.operation = 'VYBER'\t----- bird -----\tfinancial",
  "160": "SELECT count(DISTINCT T1.account_id) FROM account AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
  "161": "SELECT T2.type FROM disp AS T1 JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
  "162": "SELECT T2.A3 FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
  "163": "SELECT T2.district_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'A' GROUP BY T2.district_id ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
  "164": "SELECT T2.client_id FROM `order` AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 32423\t----- bird -----\tfinancial",
  "165": "SELECT T1.* FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5;\t----- bird -----\tfinancial",
  "166": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik';\t----- bird -----\tfinancial",
  "167": "SELECT DISTINCT T1.client_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued >= '1997-01-01'\t----- bird -----\tfinancial",
  "168": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.gender = 'F' THEN T1.client_id ELSE NULL END) AS REAL) * 100.0 / COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000\t----- bird -----\tfinancial",
  "169": "SELECT ( CAST(SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) AS REAL) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) ) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M' AND STRFTIME('%Y', T1.date) IN ('1996', '1997')\t----- bird -----\tfinancial",
  "170": "SELECT count(*) FROM trans AS T1 WHERE T1.operation = 'VYBER KARTOU' AND T1.date > '1995-12-31';\t----- bird -----\tfinancial",
  "171": "SELECT SUM(CASE WHEN T1.A3 = 'north Bohemia' THEN T1.A16 ELSE 0 END) - SUM(CASE WHEN T1.A3 = 'east Bohemia' THEN T1.A16 ELSE 0 END) FROM district AS T1 WHERE T1.A3 IN ('north Bohemia', 'east Bohemia');\t----- bird -----\tfinancial",
  "172": "SELECT count(*) FROM disp WHERE type IN ('OWNER', 'DISPONENT') AND account_id BETWEEN 1 AND 10\t----- bird -----\tfinancial",
  "173": "SELECT T1.frequency ,  T2.k_symbol FROM account AS T1 JOIN trans AS T2 ON T1.account_id  =  T2.account_id WHERE T1.account_id  =  3 AND T2.type  =  'VYDAJ' AND T2.amount  =  3539\t----- bird -----\tfinancial",
  "174": "SELECT strftime('%Y', T1.birth_date) FROM client AS T1 WHERE T1.client_id = 130\t----- bird -----\tfinancial",
  "175": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'OWNER';\t----- bird -----\tfinancial",
  "176": "SELECT T3.amount ,  T3.status FROM client AS T1 JOIN disp AS T2 ON T1.client_id  =  T2.client_id JOIN loan AS T3 ON T2.account_id  =  T3.account_id WHERE T1.client_id  =  992\t----- bird -----\tfinancial",
  "177": "SELECT T1.balance, T3.gender FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T3.client_id = 4;\t----- bird -----\tfinancial",
  "178": "SELECT T3.type FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9;\t----- bird -----\tfinancial",
  "179": "SELECT SUM(T1.amount) FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 617 AND STRFTIME('%Y', T1.date) = '1998' AND T1.type = 'VYDAJ';\t----- bird -----\tfinancial",
  "180": "SELECT DISTINCT T1.client_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE CAST(strftime('%Y', T1.birth_date) AS INTEGER) BETWEEN 1983 AND 1987 AND T4.A2 = 'East Bohemia'\t----- bird -----\tfinancial",
  "181": "SELECT T1.client_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
  "182": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND CAST(strftime('%Y', T1.birth_date) AS INTEGER) BETWEEN 1974 AND 1976 AND T3.k_symbol = 'SIPO' AND T3.amount > 4000 AND T3.type = 'VYDAJ';\t----- bird -----\tfinancial",
  "183": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31';\t----- bird -----\tfinancial",
  "184": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior';\t----- bird -----\tfinancial",
  "185": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.gender = 'F' THEN T1.client_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague'\t----- bird -----\tfinancial",
  "186": "SELECT 100.0 * SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) / COUNT(T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
  "187": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'DISPONENT';\t----- bird -----\tfinancial",
  "188": "SELECT T1.account_id FROM account AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997-01-01' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
  "189": "SELECT T3.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.client_id = T3.client_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T2.A11 ASC LIMIT 1\t----- bird -----\tfinancial",
  "190": "SELECT count(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE strftime('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
  "191": "SELECT count(*) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
  "192": "SELECT AVG(T1.amount) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
  "193": "SELECT T2.client_id, T2.district_id FROM disp AS T1 JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type = 'OWNER';\t----- bird -----\tfinancial",
  "194": "SELECT T1.client_id, strftime('%Y', 'now') - strftime('%Y', T1.birth_date) - (strftime('%m-%d', 'now') < strftime('%m-%d', T1.birth_date)) AS age FROM client AS T1 WHERE EXISTS (SELECT 1 FROM disp AS T2 JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T2.client_id = T1.client_id AND T3.type = 'gold') AND EXISTS (SELECT 1 FROM disp AS T4 JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T4.client_id = T1.client_id)\t----- bird -----\tfinancial",
  "195": "SELECT T1.bond_type FROM bond AS T1 WHERE T1.bond_type IS NOT NULL GROUP BY T1.bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
  "197": "SELECT AVG(T_Sub.OxygenCountPerMolecule) FROM (SELECT SUM(CASE WHEN T2.element = 'O' THEN 1 ELSE 0 END) AS OxygenCountPerMolecule FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' GROUP BY T1.molecule_id) AS T_Sub\t----- bird -----\ttoxicology",
  "198": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / (SELECT COUNT(molecule_id) FROM molecule WHERE label = '+') FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "199": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-';\t----- bird -----\ttoxicology",
  "200": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "201": "SELECT CAST(SUM(T1.element = 'c') AS REAL) * 100.0 / COUNT(T1.atom_id) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology",
  "202": "SELECT count(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
  "203": "SELECT COUNT(*) FROM atom AS T1 WHERE T1.element != 'br';\t----- bird -----\ttoxicology",
  "204": "SELECT count(*) FROM molecule AS T1 WHERE T1.molecule_id >= 'TR000' AND T1.molecule_id <= 'TR099' AND T1.label = '+'\t----- bird -----\ttoxicology",
  "205": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'si';\t----- bird -----\ttoxicology",
  "206": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
  "207": "SELECT DISTINCT T3.element FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '=' AND T3.element IS NOT NULL\t----- bird -----\ttoxicology",
  "208": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label IS NOT NULL GROUP BY T2.label ORDER BY COUNT(DISTINCT T1.molecule_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
  "209": "SELECT DISTINCT T4.bond_type FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id JOIN bond AS T4 ON T1.bond_id = T4.bond_id WHERE T2.element = 'te' OR T3.element = 'te'\t----- bird -----\ttoxicology",
  "210": "SELECT T1.atom_id ,  T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id  =  T2.bond_id WHERE T2.bond_type  =  '-'\t----- bird -----\ttoxicology",
  "211": "SELECT T1.atom_id ,  T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id  =  T2.bond_id JOIN molecule AS T3 ON T2.molecule_id  =  T3.molecule_id WHERE T3.label  =  '-'\t----- bird -----\ttoxicology",
  "212": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element IS NOT NULL GROUP BY T1.element ORDER BY COUNT(T1.atom_id) ASC LIMIT 1\t----- bird -----\ttoxicology",
  "213": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
  "214": "SELECT DISTINCT T1.label FROM molecule AS T1 WHERE NOT EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'sn')\t----- bird -----\ttoxicology",
  "215": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
  "217": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181' UNION SELECT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
  "218": "SELECT CAST(SUM(CASE WHEN T2.molecule_id IS NULL THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.molecule_id) FROM molecule AS T1 LEFT JOIN (SELECT DISTINCT T3.molecule_id FROM atom AS T3 WHERE T3.element = 'f') AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
  "219": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
  "220": "SELECT element FROM (SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR000' GROUP BY T1.element ORDER BY COUNT(*) DESC LIMIT 3) ORDER BY element ASC;\t----- bird -----\ttoxicology",
  "221": "SELECT T1.atom_id ,  T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id  =  T2.bond_id WHERE T1.bond_id  =  'TR001_2_6' AND T2.molecule_id  =  'TR001'\t----- bird -----\ttoxicology",
  "222": "SELECT SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.label = '-' THEN 1 ELSE 0 END) FROM molecule AS T1\t----- bird -----\ttoxicology",
  "223": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 WHERE T1.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
  "224": "SELECT T1.bond_id FROM connected AS T1 WHERE T1.atom_id2 = (SELECT T2.atom_id2 FROM connected AS T2 WHERE T2.atom_id = 'TR000_2') AND T1.bond_id IS NOT NULL\t----- bird -----\ttoxicology",
  "225": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' ORDER BY T1.label ASC LIMIT 5\t----- bird -----\ttoxicology",
  "226": "SELECT SUM(T1.bond_type = ' = ') * 100.0 / COUNT(T1.bond_id) FROM bond AS T1 WHERE T1.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
  "227": "SELECT SUM(T1.label = '+') * 100.0 / COUNT(T1.molecule_id) FROM molecule AS T1;\t----- bird -----\ttoxicology",
  "228": "SELECT SUM(T1.element = 'h') * 100.0 / COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
  "229": "SELECT DISTINCT T1.bond_type FROM bond AS T1 WHERE T1.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
  "230": "SELECT DISTINCT T1.label ,  T2.element FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id  =  T2.molecule_id WHERE T1.molecule_id  =  'TR060'\t----- bird -----\ttoxicology",
  "231": "SELECT T2.bond_type, T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR018' GROUP BY T2.bond_type, T1.label ORDER BY count(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
  "232": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-' ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
  "233": "SELECT T1.bond_id FROM bond AS T1 WHERE T1.molecule_id = 'TR006' ORDER BY T1.bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
  "234": "SELECT count(*) FROM connected AS T1 WHERE T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12'\t----- bird -----\ttoxicology",
  "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br';\t----- bird -----\ttoxicology",
  "236": "SELECT T1.bond_type ,  T2.atom_id ,  T2.atom_id2 FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id  =  T2.bond_id WHERE T1.bond_id  =  'TR001_6_9'\t----- bird -----\ttoxicology",
  "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
  "238": "SELECT count(DISTINCT T1.molecule_id) FROM bond AS T1 WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
  "239": "SELECT count(*) FROM connected AS T1 WHERE T1.atom_id LIKE 'TR%_19' OR T1.atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
  "240": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
  "241": "SELECT count(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
  "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTRING(T1.atom_id, 7, 2) BETWEEN 21 AND 25 AND T2.label = '+'\t----- bird -----\ttoxicology",
  "243": "SELECT DISTINCT T1.bond_id FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE (T2.element = 'p' AND T3.element = 'n') OR (T2.element = 'n' AND T3.element = 'p');\t----- bird -----\ttoxicology",
  "244": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY count(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
  "245": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / (SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.element = 'i') FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T1.element = 'i'\t----- bird -----\ttoxicology",
  "246": "SELECT T3.bond_type ,  T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id  =  T2.atom_id OR T1.atom_id  =  T2.atom_id2 JOIN bond AS T3 ON T2.bond_id  =  T3.bond_id WHERE SUBSTR(T1.atom_id, 7, 2) + 0  =  45\t----- bird -----\ttoxicology",
  "247": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE NOT EXISTS (SELECT 1 FROM connected AS T2 WHERE T2.atom_id = T1.atom_id OR T2.atom_id2 = T1.atom_id);\t----- bird -----\ttoxicology",
  "248": "SELECT T1.atom_id ,  T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id  =  T2.bond_id WHERE T2.molecule_id  =  'TR447' AND T2.bond_type  =  '#'\t----- bird -----\ttoxicology",
  "249": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
  "250": "SELECT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY count(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
  "251": "SELECT T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element IS NOT NULL GROUP BY T2.element ORDER BY COUNT(T2.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
  "252": "SELECT T2.atom_id2 FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'pb' UNION SELECT T2.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.element = 'pb'\t----- bird -----\ttoxicology",
  "253": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#' AND T3.element IS NOT NULL UNION SELECT T4.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.bond_type = '#' AND T4.element IS NOT NULL\t----- bird -----\ttoxicology",
  "254": "SELECT CAST(COUNT(T1.bond_id) AS REAL) * 100.0 / (SELECT COUNT(T1_sub.bond_id) FROM connected AS T1_sub JOIN atom AS T2_sub ON T1_sub.atom_id = T2_sub.atom_id JOIN atom AS T3_sub ON T1_sub.atom_id2 = T3_sub.atom_id WHERE T1_sub.bond_id IS NOT NULL AND T2_sub.element IS NOT NULL AND T3_sub.element IS NOT NULL) FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id IS NOT NULL AND T2.element IS NOT NULL AND T3.element IS NOT NULL GROUP BY MIN(T2.element, T3.element), MAX(T2.element, T3.element) ORDER BY COUNT(T1.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "255": "SELECT CAST(SUM(T2.label = '+') AS REAL) / COUNT(T1.bond_id) FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
  "256": "SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.element IN ('c', 'h');\t----- bird -----\ttoxicology",
  "257": "SELECT T1.atom_id2 FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's';\t----- bird -----\ttoxicology",
  "258": "SELECT T3.bond_type FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn' UNION SELECT T3.bond_type FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
  "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.element IS NOT NULL;\t----- bird -----\ttoxicology",
  "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id IN (SELECT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '#' INTERSECT SELECT T3.molecule_id FROM atom AS T3 WHERE T3.element IN ('p', 'br'));\t----- bird -----\ttoxicology",
  "261": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
  "262": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
  "263": "SELECT SUM(CASE WHEN T1.element = 'cl' THEN 1.0 ELSE 0.0 END) * 100.0 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 WHERE T1.molecule_id IN (SELECT DISTINCT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '-');\t----- bird -----\ttoxicology",
  "264": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
  "265": "SELECT T1.molecule_id FROM molecule AS T1 WHERE T1.label = '-';\t----- bird -----\ttoxicology",
  "266": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+' AND T1.molecule_id >= 'TR000' AND T1.molecule_id <= 'TR030';\t----- bird -----\ttoxicology",
  "267": "SELECT T1.bond_type FROM bond AS T1 WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
  "268": "SELECT T2.element ,  T3.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id  =  T2.atom_id JOIN atom AS T3 ON T1.atom_id2  =  T3.atom_id WHERE T1.bond_id  =  'TR001_10_11'\t----- bird -----\ttoxicology",
  "269": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T1.element = 'i' AND T2.bond_id IS NOT NULL;\t----- bird -----\ttoxicology",
  "270": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Ca' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "271": "SELECT T1.bond_id FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_1_8' AND ((T2.element = 'cl' AND T3.element = 'c') OR (T2.element = 'c' AND T3.element = 'cl'))\t----- bird -----\ttoxicology",
  "272": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.label = '-' AND T2.bond_type = '#' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
  "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
  "274": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
  "275": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 WHERE T1.bond_type = ' = '\t----- bird -----\ttoxicology",
  "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "277": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR005_16_26' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR005_16_26'\t----- bird -----\ttoxicology",
  "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
  "279": "SELECT T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
  "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
  "281": "SELECT T1.element ,  COUNT(*) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id  =  T2.molecule_id WHERE T2.label  =  '+' AND SUBSTR(T1.atom_id, 7, 1)  =  '4' AND T1.element IS NOT NULL GROUP BY T1.element\t----- bird -----\ttoxicology",
  "282": "SELECT SUM(CASE WHEN T1.element = 'h' THEN 1.0 ELSE 0.0 END) / COUNT(T1.element), T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' GROUP BY T2.label;\t----- bird -----\ttoxicology",
  "283": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
  "284": "SELECT DISTINCT T2.bond_type FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
  "285": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
  "286": "SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100.0 / (SELECT COUNT(T2.molecule_id) FROM molecule AS T2) FROM bond AS T1 WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
  "287": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 WHERE T1.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
  "288": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
  "289": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id = 'TR151'\t----- bird -----\ttoxicology",
  "290": "SELECT T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR151' AND T2.element IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te', 'p');\t----- bird -----\ttoxicology",
  "291": "SELECT count(T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+'\t----- bird -----\ttoxicology",
  "292": "SELECT T1.atom_id FROM atom AS T1 WHERE T1.element = 'c' AND substr(T1.molecule_id, 3, 3) > 10 AND substr(T1.molecule_id, 3, 3) < 50;\t----- bird -----\ttoxicology",
  "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "294": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.label = '+'\t----- bird -----\ttoxicology",
  "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
  "296": "SELECT T1.molecule_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR00_1_2' AND (T2.atom_id = 'TR00_1' OR T2.atom_id2 = 'TR00_1')\t----- bird -----\ttoxicology",
  "297": "SELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
  "298": "SELECT 100.0 * COUNT(DISTINCT T1.molecule_id) / (SELECT COUNT(molecule_id) FROM molecule) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'h'\t----- bird -----\ttoxicology",
  "299": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id = 'TR124';\t----- bird -----\ttoxicology",
  "300": "SELECT T1.atom_id FROM atom AS T1 WHERE T1.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
  "301": "SELECT T1.bond_type FROM bond AS T1 WHERE T1.bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
  "302": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_2_4' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
  "303": "SELECT COUNT(T2.bond_id), T1.label FROM molecule AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id AND T2.bond_type = '=' WHERE T1.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
  "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
  "305": "SELECT T1.bond_id ,  T2.atom_id ,  T2.atom_id2 FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id  =  T2.bond_id WHERE T1.bond_type  =  '-'\t----- bird -----\ttoxicology",
  "306": "SELECT DISTINCT T1.molecule_id ,  T2.element FROM bond AS T1 JOIN atom AS T2 ON T1.molecule_id  =  T2.molecule_id WHERE T1.bond_type  =  '#'\t----- bird -----\ttoxicology",
  "307": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3' UNION SELECT T3.element FROM connected AS T1 JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
  "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T2.element = 'cl' OR T3.element = 'cl';\t----- bird -----\ttoxicology",
  "309": "SELECT T1.atom_id, (SELECT COUNT(DISTINCT T3.bond_type) FROM bond AS T3 JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = 'TR346') FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR346';\t----- bird -----\ttoxicology",
  "310": "SELECT COUNT(DISTINCT T1.molecule_id), COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id ELSE NULL END) FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' ;\t----- bird -----\ttoxicology",
  "311": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 WHERE NOT EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'S') AND NOT EXISTS (SELECT 1 FROM bond AS T3 WHERE T3.molecule_id = T1.molecule_id AND T3.bond_type = '=')\t----- bird -----\ttoxicology",
  "312": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id  =  T2.molecule_id WHERE T2.bond_id  =  'TR001_2_4'\t----- bird -----\ttoxicology",
  "313": "SELECT count(atom_id) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
  "314": "SELECT count(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
  "315": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
  "316": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
  "317": "SELECT CAST(SUM(CASE WHEN T2.molecule_id IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.molecule_id) FROM molecule AS T1 LEFT JOIN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'Cl') AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
  "318": "SELECT T1.molecule_id FROM bond AS T1 WHERE T1.bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
  "319": "SELECT count(DISTINCT T2.element) FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
  "320": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2') OR (T1.atom_id = 'TR000_2' AND T1.atom_id2 = 'TR000_1');\t----- bird -----\ttoxicology",
  "321": "SELECT T1.molecule_id FROM atom AS T1 WHERE T1.atom_id IN ('TR000_2', 'TR000_4') GROUP BY T1.molecule_id HAVING COUNT(T1.atom_id) = 2;\t----- bird -----\ttoxicology",
  "322": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
  "323": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
  "324": "SELECT CAST(COUNT(T1.atom_id) AS REAL) * 100.0 / (SELECT COUNT(T4.atom_id) FROM atom AS T4) FROM (SELECT T2.atom_id FROM connected AS T2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' UNION SELECT T2.atom_id2 FROM connected AS T2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-') AS T1;\t----- bird -----\ttoxicology",
  "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n';\t----- bird -----\ttoxicology",
  "326": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'S' AND T3.bond_type = '=' AND T1.molecule_id = T3.molecule_id;\t----- bird -----\ttoxicology",
  "327": "SELECT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING count(T2.atom_id) > 5\t----- bird -----\ttoxicology",
  "328": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = 'TR024' AND T3.bond_type = '=' AND T1.element IS NOT NULL;\t----- bird -----\ttoxicology",
  "329": "SELECT T1.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
  "330": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN (SELECT DISTINCT T3.molecule_id FROM atom AS T2 INNER JOIN connected AS T4 ON T2.atom_id = T4.atom_id INNER JOIN bond AS T3 ON T4.bond_id = T3.bond_id WHERE T2.element = 'h' AND T3.bond_type = '#') AS T_Sub ON T1.molecule_id = T_Sub.molecule_id;\t----- bird -----\ttoxicology",
  "331": "SELECT count(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
  "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 WHERE T1.bond_type = '-' AND T1.molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
  "333": "SELECT count(T2.atom_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id  =  T2.molecule_id WHERE T1.label  =  'TR008' AND T2.element  =  'c'\t----- bird -----\ttoxicology",
  "334": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
  "335": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.bond_type = '=' AND (T3.element = 'o' OR T4.element = 'o');\t----- bird -----\ttoxicology",
  "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "337": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR016' UNION SELECT T2.bond_type FROM bond AS T2 WHERE T2.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
  "338": "SELECT DISTINCT T2.atom_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id JOIN connected AS T4 ON T2.atom_id = T4.atom_id OR T2.atom_id = T4.atom_id2 JOIN bond AS T3 ON T4.bond_id = T3.bond_id WHERE T1.label = 'TR012' AND T2.element = 'c' AND T3.bond_type = ' = ';\t----- bird -----\ttoxicology",
  "339": "SELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
  "340": "SELECT name FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "341": "SELECT T1.name FROM cards AS T1 WHERE T1.borderColor = 'borderless' AND (T1.cardKingdomFoilId IS NULL OR T1.cardKingdomId IS NULL);\t----- bird -----\tcard_games",
  "342": "SELECT T1.name FROM cards AS T1 WHERE T1.faceConvertedManaCost IS NOT NULL ORDER BY T1.faceConvertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
  "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100 AND edhrecRank IS NOT NULL;\t----- bird -----\tcard_games",
  "344": "SELECT T1.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator';\t----- bird -----\tcard_games",
  "345": "SELECT T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
  "346": "SELECT T1.id ,  T1.artist FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'Commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
  "347": "SELECT T2.text ,  T1.hasContentWarning FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1;\t----- bird -----\tcard_games",
  "348": "SELECT T2.text FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
  "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
  "350": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29';\t----- bird -----\tcard_games",
  "351": "SELECT DISTINCT T1.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
  "352": "SELECT CAST(COUNT(DISTINCT T1.uuid) AS REAL) * 100.0 / (SELECT COUNT(T2.uuid) FROM cards AS T2) FROM foreign_data AS T1 WHERE T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
  "353": "SELECT T1.name ,  T1.totalSetSize FROM sets AS T1 JOIN set_translations AS T2 ON T1.code  =  T2.setCode WHERE T2.language  =  'Italian'\t----- bird -----\tcard_games",
  "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
  "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
  "356": "SELECT count(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
  "357": "SELECT T1.promoTypes FROM cards AS T1 WHERE T1.name = 'Duress';\t----- bird -----\tcard_games",
  "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
  "359": "SELECT T1.originalType FROM cards AS T1 WHERE T1.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "360": "SELECT DISTINCT T2.language FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
  "361": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0;\t----- bird -----\tcard_games",
  "362": "SELECT T2.text FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn';\t----- bird -----\tcard_games",
  "363": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.isStarter = 1 AND T2.status = 'Restricted';\t----- bird -----\tcard_games",
  "364": "SELECT T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
  "365": "SELECT T1.type FROM cards AS T1 WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
  "366": "SELECT T2.format FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
  "367": "SELECT DISTINCT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian' AND T1.artist IS NOT NULL;\t----- bird -----\tcard_games",
  "368": "SELECT CAST(SUM(CASE WHEN T1.borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1;\t----- bird -----\tcard_games",
  "369": "SELECT count(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1;\t----- bird -----\tcard_games",
  "370": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian';\t----- bird -----\tcard_games",
  "371": "SELECT CAST(SUM(CASE WHEN T2.uuid IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.id) FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid AND T2.language = 'French' WHERE T1.isStorySpotlight = 1;\t----- bird -----\tcard_games",
  "372": "SELECT count(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
  "373": "SELECT T1.name FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
  "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
  "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
  "376": "SELECT DISTINCT T1.layout FROM cards AS T1 WHERE T1.keywords LIKE '%flying%';\t----- bird -----\tcard_games",
  "377": "SELECT count(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel';\t----- bird -----\tcard_games",
  "378": "SELECT T1.id FROM cards AS T1 WHERE T1.hasFoil = 1 AND T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
  "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
  "381": "SELECT DISTINCT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.artist IS NOT NULL;\t----- bird -----\tcard_games",
  "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "383": "SELECT count(*) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white';\t----- bird -----\tcard_games",
  "384": "SELECT T1.uuid, T2.language FROM legalities AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'Legacy';\t----- bird -----\tcard_games",
  "385": "SELECT T2.text FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
  "386": "SELECT COUNT(DISTINCT T1.uuid), T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "387": "SELECT T1.name, T1.colors FROM cards AS T1 WHERE T1.setCode = 'OGW';\t----- bird -----\tcard_games",
  "388": "SELECT T2.name, T2.language FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
  "389": "SELECT T1.name, T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
  "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
  "391": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B';\t----- bird -----\tcard_games",
  "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' AND T2.date IS NOT NULL ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
  "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
  "394": "SELECT count(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1';\t----- bird -----\tcard_games",
  "396": "SELECT count(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
  "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
  "398": "SELECT SUM(T1.convertedManaCost) FROM cards AS T1 WHERE T1.artist = 'Rob Alexander' AND T1.convertedManaCost IS NOT NULL;\t----- bird -----\tcard_games",
  "399": "SELECT DISTINCT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.availability LIKE '%arena%'\t----- bird -----\tcard_games",
  "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
  "401": "SELECT CAST(SUM(CASE WHEN T1.hand = '+3' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.id) FROM cards AS T1 WHERE T1.frameEffects = 'legendary';\t----- bird -----\tcard_games",
  "402": "SELECT CAST(SUM(CASE WHEN T1.isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) FROM cards AS T1 WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
  "403": "SELECT CAST((SELECT COUNT(DISTINCT T2.uuid) FROM foreign_data AS T2 WHERE T2.language = 'Spanish') AS REAL) * 100.0 / (SELECT COUNT(T1.id) FROM cards AS T1);\t----- bird -----\tcard_games",
  "404": "SELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
  "405": "SELECT count(T1.id) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
  "406": "SELECT DISTINCT T1.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Creature%' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "407": "SELECT DISTINCT T1.subtypes ,  T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
  "408": "SELECT count(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
  "409": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'Premodern' AND T2.status = 'Legal' AND T3.text = 'This is a triggered mana ability' AND T1.side IS NULL;\t----- bird -----\tcard_games",
  "410": "SELECT T1.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T1.availability = 'paper' AND T2.format = 'pauper' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "411": "SELECT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
  "412": "SELECT T2.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.borderColor = 'black' AND T1.layout = 'normal' AND T1.type LIKE '%Creature%' AND T2.language = 'French'\t----- bird -----\tcard_games",
  "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10';\t----- bird -----\tcard_games",
  "414": "SELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
  "415": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
  "416": "SELECT CAST(SUM(CASE WHEN EXISTS (SELECT 1 FROM foreign_data AS T2 WHERE T2.uuid = T1.uuid AND T2.language = 'French') THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.uuid) FROM cards AS T1 WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
  "417": "SELECT CAST(COUNT(CASE WHEN T2.type = 'expansion' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese';\t----- bird -----\tcard_games",
  "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
  "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
  "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
  "421": "SELECT T1.name FROM cards AS T1 WHERE (T1.power IS NULL OR T1.power = '*') AND T1.promoTypes LIKE '%arenaleague%' ORDER BY T1.name ASC LIMIT 3\t----- bird -----\tcard_games",
  "422": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.multiverseid = 149934\t----- bird -----\tcard_games",
  "423": "SELECT T1.id FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
  "424": "SELECT CAST(COUNT(*) FILTER (WHERE isTextless = 1 AND layout = 'normal') AS REAL) * 100.0 / COUNT(*) FILTER (WHERE isTextless = 1) FROM cards;\t----- bird -----\tcard_games",
  "425": "SELECT T1.number FROM cards AS T1 WHERE T1.side IS NULL AND T1.subtypes LIKE '%Angel%' AND T1.subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
  "426": "SELECT T1.name FROM sets AS T1 WHERE T1.mtgoCode IS NULL OR T1.mtgoCode = '' ORDER BY T1.name ASC LIMIT 3\t----- bird -----\tcard_games",
  "427": "SELECT DISTINCT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games",
  "428": "SELECT T1.name, T2.translation FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5;\t----- bird -----\tcard_games",
  "429": "SELECT T2.language ,  T1.type FROM sets AS T1 JOIN set_translations AS T2 ON T1.code  =  T2.setCode WHERE T1.id  =  206\t----- bird -----\tcard_games",
  "430": "SELECT T1.id, T1.name FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian' ORDER BY T1.name ASC LIMIT 2;\t----- bird -----\tcard_games",
  "431": "SELECT T1.id FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
  "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' AND T1.baseSetSize IS NOT NULL ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
  "433": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
  "434": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isForeignOnly = 1 AND T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '');\t----- bird -----\tcard_games",
  "435": "SELECT T1.id FROM cards AS T1 WHERE T1.borderColor = 'black';\t----- bird -----\tcard_games",
  "436": "SELECT COUNT(T1.id), GROUP_CONCAT(T1.id) FROM cards AS T1 WHERE T1.frameEffects = 'extendedart';\t----- bird -----\tcard_games",
  "437": "SELECT T1.name FROM cards AS T1 WHERE T1.borderColor = 'black' AND T1.isFullArt = 1 LIMIT 1;\t----- bird -----\tcard_games",
  "438": "SELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174;\t----- bird -----\tcard_games",
  "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
  "440": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
  "441": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
  "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
  "443": "SELECT T1.code FROM sets AS T1 WHERE T1.type = 'expansion'\t----- bird -----\tcard_games",
  "444": "SELECT T2.name ,  T2.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid  =  T2.uuid WHERE T1.watermark  =  'Boros'\t----- bird -----\tcard_games",
  "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie';\t----- bird -----\tcard_games",
  "446": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.id) FROM cards AS T1 WHERE T1.name = 'Abyssal Horror';\t----- bird -----\tcard_games",
  "447": "SELECT code FROM sets WHERE type = 'expansion commander';\t----- bird -----\tcard_games",
  "448": "SELECT T2.name, T1.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan';\t----- bird -----\tcard_games",
  "449": "SELECT T2.language, T1.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
  "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "451": "SELECT count(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%';\t----- bird -----\tcard_games",
  "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
  "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
  "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
  "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
  "457": "SELECT T1.purchaseUrls FROM cards AS T1 WHERE T1.promoTypes = 'bundle';\t----- bird -----\tcard_games",
  "458": "SELECT COUNT(DISTINCT T1.artist) FROM cards AS T1 WHERE T1.borderColor = 'black' AND T1.availability LIKE '%arena,mtgo%';\t----- bird -----\tcard_games",
  "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') AND convertedManaCost IS NOT NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
  "461": "SELECT T1.name FROM cards AS T1 WHERE T1.frameVersion = '2003' AND T1.convertedManaCost IS NOT NULL ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
  "462": "SELECT T2.translation FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
  "463": "SELECT COUNT(T2.id) FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
  "464": "SELECT T2.name FROM set_translations AS T1 JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T1.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "465": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean';\t----- bird -----\tcard_games",
  "466": "SELECT COUNT(T1.id) FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.artist = 'Adam Rex' AND T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "467": "SELECT T1.baseSetSize FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
  "468": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Eighth Edition' AND T1.language = 'Simplified Chinese';\t----- bird -----\tcard_games",
  "469": "SELECT T2.mtgoCode FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.mtgoCode IS NOT NULL LIMIT 1\t----- bird -----\tcard_games",
  "470": "SELECT T2.releaseDate FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
  "471": "SELECT T1.type FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
  "473": "SELECT T2.isForeignOnly FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie' AND T2.isForeignOnly = 1\t----- bird -----\tcard_games",
  "474": "SELECT count(DISTINCT T1.code) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10 AND T1.baseSetSize IS NOT NULL\t----- bird -----\tcard_games",
  "475": "SELECT count(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
  "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = ( SELECT MAX(T1_sub.convertedManaCost) FROM cards AS T1_sub INNER JOIN sets AS T2_sub ON T1_sub.setCode = T2_sub.code WHERE T2_sub.name = 'Coldsnap' AND T1_sub.convertedManaCost IS NOT NULL );\t----- bird -----\tcard_games",
  "477": "SELECT DISTINCT T1.artist FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
  "478": "SELECT T1.id FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.number = '4' AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
  "479": "SELECT COUNT(T1.id)\nFROM cards AS T1\nJOIN sets AS T2 ON T1.setCode = T2.code\nWHERE T2.name = 'Coldsnap'\n  AND T1.convertedManaCost IS NOT NULL\n  AND T1.convertedManaCost > 5\n  AND (T1.power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
  "480": "SELECT T1.flavorText FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "481": "SELECT DISTINCT T2.language FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
  "482": "SELECT T2.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German';\t----- bird -----\tcard_games",
  "483": "SELECT T4.text FROM sets AS T1 JOIN cards AS T2 ON T1.code = T2.setCode JOIN foreign_data AS T3 ON T2.uuid = T3.uuid JOIN rulings AS T4 ON T2.uuid = T4.uuid WHERE T1.name = 'Coldsnap' AND T3.language = 'Italian';\t----- bird -----\tcard_games",
  "484": "SELECT T2.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' AND T1.convertedManaCost = (SELECT MAX(T1_sub.convertedManaCost) FROM cards AS T1_sub JOIN sets AS T3_sub ON T1_sub.setCode = T3_sub.code WHERE T3_sub.name = 'Coldsnap' AND T1_sub.convertedManaCost IS NOT NULL);\t----- bird -----\tcard_games",
  "485": "SELECT T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
  "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
  "487": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId = T1.cardKingdomId AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
  "488": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
  "489": "SELECT T1.keyruneCode FROM sets AS T1 WHERE T1.code = 'PKHC'\t----- bird -----\tcard_games",
  "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
  "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
  "492": "SELECT T1.type FROM sets AS T1 WHERE T1.name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
  "493": "SELECT T1.parentCode FROM sets AS T1 WHERE T1.name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
  "494": "SELECT T2.text, T1.hasContentWarning FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
  "495": "SELECT T2.releaseDate FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation';\t----- bird -----\tcard_games",
  "496": "SELECT T1.baseSetSize FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
  "497": "SELECT T2.type FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Huitième édition';\t----- bird -----\tcard_games",
  "498": "SELECT T3.translation FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T2.setCode = T3.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T3.language = 'French';\t----- bird -----\tcard_games",
  "499": "SELECT count(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Salvat 2011';\t----- bird -----\tcard_games",
  "500": "SELECT T2.translation FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "501": "SELECT T1.name FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero''s Path' AND T1.convertedManaCost IS NOT NULL ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
  "502": "SELECT T1.releaseDate FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de frío'\t----- bird -----\tcard_games",
  "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
  "504": "SELECT COUNT(T1.id) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
  "505": "SELECT T2.translation FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
  "506": "SELECT SUM(T1.isNonFoilOnly = 1) * 100.0 / COUNT(T1.id) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "507": "SELECT CAST(SUM(T1.isOnlineOnly) AS REAL) * 100 / COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
  "508": "SELECT DISTINCT T1.availability FROM cards AS T1 WHERE T1.artist = 'Aleksi Briclot' AND T1.isTextless = 1;\t----- bird -----\tcard_games",
  "509": "SELECT id FROM sets WHERE baseSetSize IS NOT NULL ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
  "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL AND T1.convertedManaCost IS NOT NULL ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
  "511": "SELECT T1.frameEffects FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL GROUP BY T1.frameEffects ORDER BY count(*) DESC LIMIT 1\t----- bird -----\tcard_games",
  "512": "SELECT count(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
  "513": "SELECT id FROM sets WHERE type = 'commander' AND totalSetSize IS NOT NULL ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
  "514": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Duel' AND T2.status = 'Legal' AND T1.convertedManaCost IS NOT NULL ORDER BY T1.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
  "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T1.uuid = (SELECT T3.uuid FROM cards AS T3 WHERE T3.rarity = 'Mythic' AND T3.originalReleaseDate IS NOT NULL ORDER BY T3.originalReleaseDate ASC LIMIT 1);\t----- bird -----\tcard_games",
  "516": "SELECT COUNT(*) FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Baga' AND T2.language = 'French';\t----- bird -----\tcard_games",
  "517": "SELECT COUNT(T1.uuid) FROM cards AS T1 WHERE T1.name = 'Abundance' AND T1.rarity = 'rare' AND T1.types = 'Enchantment' AND EXISTS (SELECT 1 FROM legalities AS T2 WHERE T2.uuid = T1.uuid) AND NOT EXISTS (SELECT 1 FROM legalities AS T3 WHERE T3.uuid = T1.uuid AND T3.status != 'Legal');\t----- bird -----\tcard_games",
  "518": "SELECT T1.format ,  T2.name FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid  =  T2.uuid WHERE T1.status  =  'Banned' AND T1.format  =  (SELECT T3.format FROM legalities AS T3 WHERE T3.status  =  'Banned' GROUP BY T3.format ORDER BY count(*) DESC LIMIT 1) LIMIT 1\t----- bird -----\tcard_games",
  "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond';\t----- bird -----\tcard_games",
  "520": "SELECT T1.artist, T2.format FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = (SELECT artist FROM cards WHERE artist IS NOT NULL AND artist != '' GROUP BY artist ORDER BY COUNT(id) ASC LIMIT 1);\t----- bird -----\tcard_games",
  "521": "SELECT T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'\t----- bird -----\tcard_games",
  "522": "SELECT T1.name, T2.format FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned';\t----- bird -----\tcard_games",
  "523": "SELECT (SELECT AVG(count_per_year) FROM (SELECT COUNT(T1.id) AS count_per_year FROM sets AS T1 WHERE T1.releaseDate >= '2012-01-01' AND T1.releaseDate <= '2015-12-31' AND T1.releaseDate IS NOT NULL GROUP BY STRFTIME('%Y', T1.releaseDate))), (SELECT T2.language FROM set_translations AS T2 GROUP BY T2.language ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\tcard_games",
  "524": "SELECT DISTINCT T1.artist FROM cards AS T1 WHERE T1.borderColor = 'black' AND T1.availability = 'arena' AND T1.artist IS NOT NULL;\t----- bird -----\tcard_games",
  "525": "SELECT T1.uuid FROM legalities AS T1 WHERE T1.format = 'oldschool' AND T1.status IN ('banned', 'restricted');\t----- bird -----\tcard_games",
  "526": "SELECT count(*) FROM cards AS T1 WHERE T1.artist = 'Matthew D. Wilson' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
  "527": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' AND T2.date IS NOT NULL ORDER BY T2.date DESC\t----- bird -----\tcard_games",
  "528": "SELECT T1.name ,  T3.format FROM cards AS T1 JOIN sets AS T2 ON T1.setCode  =  T2.code JOIN legalities AS T3 ON T1.uuid  =  T3.uuid WHERE T2.name  =  'Hour of Devastation' AND T3.status  =  'Legal'\t----- bird -----\tcard_games",
  "529": "SELECT T1.name FROM sets AS T1 WHERE T1.code IN (SELECT T2.setCode FROM set_translations AS T2 WHERE T2.language = 'Korean') AND T1.code NOT IN (SELECT T3.setCode FROM set_translations AS T3 WHERE T3.language = 'Japanese');\t----- bird -----\tcard_games",
  "530": "SELECT T1.frameVersion, T1.name, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid AND T2.status = 'Banned' WHERE T1.artist = 'Allen Williams';\t----- bird -----\tcard_games",
  "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') AND Reputation IS NOT NULL ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "532": "SELECT T1.DisplayName FROM users AS T1 WHERE STRFTIME('%Y', T1.CreationDate) = '2014';\t----- bird -----\tcodebase_community",
  "533": "SELECT count(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
  "534": "SELECT DisplayName FROM users WHERE Views IS NOT NULL ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "535": "SELECT count(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
  "536": "SELECT count(*) FROM users WHERE Views > 10 AND Views IS NOT NULL AND CreationDate IS NOT NULL AND STRFTIME('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
  "537": "SELECT count(T1.Id) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "538": "SELECT T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
  "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
  "540": "SELECT T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ViewCount IS NOT NULL ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "541": "SELECT T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount IS NOT NULL ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "543": "SELECT T1.AnswerCount FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.AnswerCount IS NOT NULL ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "544": "SELECT T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
  "545": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL;\t----- bird -----\tcodebase_community",
  "546": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
  "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20;\t----- bird -----\tcodebase_community",
  "548": "SELECT T2.Location FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
  "549": "SELECT T2.Body FROM tags AS T1 JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
  "550": "SELECT T1.Body FROM posts AS T1 JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.Count IS NOT NULL ORDER BY T2.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "552": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "553": "SELECT COUNT(T1.Id) FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011';\t----- bird -----\tcodebase_community",
  "554": "SELECT T2.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.UserId IS NOT NULL GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "555": "SELECT AVG(T1.Score) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "556": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T1.Id) FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200 AND T1.Views IS NOT NULL;\t----- bird -----\tcodebase_community",
  "557": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20 AND T2.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
  "558": "SELECT count(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
  "559": "SELECT T1.CreationDate FROM votes AS T1 WHERE T1.CreationDate IS NOT NULL GROUP BY T1.CreationDate ORDER BY COUNT(T1.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "560": "SELECT COUNT(T1.Id) FROM badges AS T1 WHERE T1.Name = 'Revival';\t----- bird -----\tcodebase_community",
  "561": "SELECT T1.Title FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score IS NOT NULL ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "562": "SELECT T1.CommentCount FROM posts AS T1 WHERE T1.ViewCount = 1910;\t----- bird -----\tcodebase_community",
  "563": "SELECT T1.FavoriteCount FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 3025 AND T2.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
  "564": "SELECT T2.Text FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 AND T1.CommentCount = 1;\t----- bird -----\tcodebase_community",
  "565": "SELECT T2.ClosedDate IS NOT NULL FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18';\t----- bird -----\tcodebase_community",
  "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041;\t----- bird -----\tcodebase_community",
  "567": "SELECT count(T2.Id) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
  "568": "SELECT T2.DisplayName FROM votes AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
  "569": "SELECT count(T2.Id) FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
  "570": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
  "571": "SELECT CAST((SELECT count(Id) FROM posts WHERE OwnerUserId = 24) AS REAL) / (SELECT count(Id) FROM votes WHERE UserId = 24)\t----- bird -----\tcodebase_community",
  "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
  "573": "SELECT T1.Text FROM comments AS T1 WHERE T1.Score = 17;\t----- bird -----\tcodebase_community",
  "574": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
  "575": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
  "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
  "577": "SELECT T1.Text FROM comments AS T1 WHERE T1.UserDisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
  "578": "SELECT T2.DisplayName ,  T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
  "579": "SELECT T1.Text FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
  "580": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
  "581": "SELECT T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
  "582": "SELECT T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
  "583": "SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny' GROUP BY T1.WebsiteUrl;\t----- bird -----\tcodebase_community",
  "584": "SELECT T1.Text FROM comments AS T1 JOIN postHistory AS T2 ON T1.UserId = T2.UserId JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
  "585": "SELECT SUM(T2.BountyAmount) FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
  "586": "SELECT T3.DisplayName FROM votes AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id JOIN users AS T3 ON T1.UserId = T3.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
  "587": "SELECT (SELECT AVG(T1.ViewCount) FROM posts AS T1 WHERE T1.Tags LIKE '%<humor>%') ,  T2.Title ,  T2.Score ,  T3.Text FROM posts AS T2 JOIN comments AS T3 ON T2.Id  =  T3.PostId WHERE T2.Tags LIKE '%<humor>%'\t----- bird -----\tcodebase_community",
  "588": "SELECT count(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
  "589": "SELECT Id FROM users WHERE Reputation IS NOT NULL ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "590": "SELECT T1.Id FROM users AS T1 WHERE T1.Views IS NOT NULL ORDER BY T1.Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
  "591": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 WHERE T1.Name = 'Supporter' AND T1.Date IS NOT NULL AND STRFTIME('%Y', T1.Date) = '2011';\t----- bird -----\tcodebase_community",
  "592": "None\t----- bird -----\tcodebase_community",
  "593": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId JOIN badges AS T3 ON T1.Id = T3.UserId WHERE T1.Location = 'New York' AND T2.Name = 'Teacher' AND T3.Name = 'Supporter';\t----- bird -----\tcodebase_community",
  "594": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1;\t----- bird -----\tcodebase_community",
  "595": "SELECT T1.UserId FROM postHistory AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.UserId IS NOT NULL AND T1.PostId IS NOT NULL AND T2.Views IS NOT NULL AND T2.Views >= 1000 GROUP BY T1.UserId HAVING COUNT(T1.Id) = COUNT(DISTINCT T1.PostId);\t----- bird -----\tcodebase_community",
  "596": "SELECT T1.Name FROM badges AS T1 JOIN (SELECT UserId FROM comments WHERE UserId IS NOT NULL GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1) AS T2 ON T1.UserId = T2.UserId\t----- bird -----\tcodebase_community",
  "597": "SELECT count(DISTINCT T1.Id) FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher';\t----- bird -----\tcodebase_community",
  "598": "SELECT (CAST(SUM(CASE WHEN STRFTIME('%Y', T1.Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.Id)) - (CAST(SUM(CASE WHEN STRFTIME('%Y', T1.Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.Id)) FROM badges AS T1 WHERE T1.Name = 'Student';\t----- bird -----\tcodebase_community",
  "599": "SELECT ( SELECT group_concat(DISTINCT T1.PostHistoryTypeId) FROM postHistory AS T1 WHERE T1.PostId = 3720 ) AS PostHistoryTypeIds, ( SELECT count(DISTINCT T2.UserId) FROM comments AS T2 WHERE T2.PostId = 3720 AND T2.UserId IS NOT NULL ) AS UniqueCommenterCount;\t----- bird -----\tcodebase_community",
  "600": "SELECT T1.RelatedPostId, T2.ViewCount FROM postLinks AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.PostId = 61217;\t----- bird -----\tcodebase_community",
  "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395;\t----- bird -----\tcodebase_community",
  "602": "SELECT T1.Id, T1.OwnerUserId FROM posts AS T1 WHERE T1.Score > 60;\t----- bird -----\tcodebase_community",
  "603": "SELECT SUM(T1.FavoriteCount) FROM posts AS T1 WHERE T1.OwnerUserId = 686 AND STRFTIME('%Y', T1.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
  "604": "SELECT AVG(T1.UpVotes), AVG(T1.Age) FROM users AS T1 JOIN (SELECT OwnerUserId FROM posts WHERE OwnerUserId IS NOT NULL GROUP BY OwnerUserId HAVING count(*) > 10) AS T2 ON T1.Id = T2.OwnerUserId;\t----- bird -----\tcodebase_community",
  "605": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
  "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
  "607": "SELECT count(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
  "608": "SELECT T1.Text FROM comments AS T1 WHERE T1.CreationDate = '2010-07-19 19:25:47';\t----- bird -----\tcodebase_community",
  "609": "SELECT count(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
  "610": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users WHERE Reputation IS NOT NULL)\t----- bird -----\tcodebase_community",
  "611": "SELECT T2.Reputation FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
  "612": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
  "613": "SELECT T1.Date FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
  "614": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN T1.Name = 'Teacher' THEN T1.UserId END) / COUNT(DISTINCT T1.UserId) FROM badges AS T1\t----- bird -----\tcodebase_community",
  "615": "SELECT CAST(SUM(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T2.Id) FROM users AS T2 WHERE T2.Id IN ( SELECT T1.UserId FROM badges AS T1 WHERE T1.Name = 'Organizer' AND T1.UserId IS NOT NULL ) AND T2.Age IS NOT NULL\t----- bird -----\tcodebase_community",
  "616": "SELECT T1.Score FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreaionDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
  "617": "SELECT T1.Text FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreaionDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
  "618": "SELECT DISTINCT T1.Age FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria' AND T1.Age IS NOT NULL\t----- bird -----\tcodebase_community",
  "619": "SELECT COUNT(T2.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "620": "SELECT T2.Views FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
  "621": "SELECT T1.Name FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = ( SELECT Reputation FROM users WHERE Reputation IS NOT NULL ORDER BY Reputation ASC LIMIT 1 );\t----- bird -----\tcodebase_community",
  "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
  "623": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter' AND T1.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
  "624": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Id = 30;\t----- bird -----\tcodebase_community",
  "625": "SELECT count(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
  "626": "SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
  "627": "SELECT count(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "628": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Views IS NOT NULL ORDER BY T1.Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "629": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes;\t----- bird -----\tcodebase_community",
  "630": "SELECT DISTINCT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%<' || T2.TagName || '>%' INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'John Stauffer' AND T1.Tags IS NOT NULL;\t----- bird -----\tcodebase_community",
  "631": "SELECT count(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
  "632": "SELECT count(*) FROM votes AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
  "633": "SELECT T1.Id FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' AND T1.AnswerCount IS NOT NULL ORDER BY T1.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "634": "SELECT T1.Id FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') AND T1.ViewCount IS NOT NULL ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "635": "SELECT COUNT(T1.Id) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Matt Parker' AND T1.Id IN (SELECT PostId FROM votes GROUP BY PostId HAVING COUNT(Id) > 4);\t----- bird -----\tcodebase_community",
  "636": "SELECT COUNT(T3.Id) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId JOIN comments AS T3 ON T2.Id = T3.PostId WHERE T1.DisplayName = 'Neil McGuigan' AND T3.Score < 60;\t----- bird -----\tcodebase_community",
  "637": "SELECT DISTINCT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0 AND T1.Tags IS NOT NULL;\t----- bird -----\tcodebase_community",
  "638": "SELECT DISTINCT T1.DisplayName FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer';\t----- bird -----\tcodebase_community",
  "639": "SELECT CAST(SUM(CASE WHEN T1.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.Id) FROM posts AS T1 WHERE T1.OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
  "640": "SELECT SUM(CASE WHEN T2.DisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T2.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Mornington', 'Amos') AND T1.ViewCount IS NOT NULL\t----- bird -----\tcodebase_community",
  "641": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 WHERE T1.Name = 'Commentator' AND STRFTIME('%Y', T1.Date) = '2014';\t----- bird -----\tcodebase_community",
  "642": "SELECT COUNT(*) FROM posts AS T1 WHERE DATE(T1.CreaionDate) = '2010-07-21';\t----- bird -----\tcodebase_community",
  "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 WHERE T1.Views IS NOT NULL ORDER BY T1.Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "644": "SELECT T1.LastEditDate, T1.LastEditorUserId FROM posts AS T1 WHERE T1.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
  "645": "SELECT count(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
  "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60;\t----- bird -----\tcodebase_community",
  "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND STRFTIME('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
  "648": "SELECT T2.DisplayName, T2.WebsiteUrl FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150\t----- bird -----\tcodebase_community",
  "649": "SELECT COUNT(T2.Id), T1.LastEditDate FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY T1.Id;\t----- bird -----\tcodebase_community",
  "650": "SELECT T1.LastAccessDate ,  T1.Location FROM users AS T1 JOIN badges AS T2 ON T1.Id  =  T2.UserId WHERE T2.Name  =  'Outliers'\t----- bird -----\tcodebase_community",
  "651": "SELECT T3.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN posts AS T3 ON T2.RelatedPostId = T3.Id WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
  "652": "SELECT T1.Id AS PostId, NULL AS BadgeName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T1.CreaionDate) = '2013' AND T1.OwnerUserId IS NOT NULL AND T1.CreaionDate IS NOT NULL UNION ALL SELECT NULL AS PostId, T3.Name AS BadgeName FROM badges AS T3 INNER JOIN users AS T4 ON T3.UserId = T4.Id WHERE T4.DisplayName = 'Samuel' AND STRFTIME('%Y', T3.Date) = '2013' AND T3.UserId IS NOT NULL AND T3.Date IS NOT NULL;\t----- bird -----\tcodebase_community",
  "653": "SELECT T1.OwnerDisplayName FROM posts AS T1 WHERE T1.ViewCount IS NOT NULL ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "654": "SELECT T3.DisplayName ,  T3.Location FROM tags AS T1 JOIN posts AS T2 ON T1.ExcerptPostId  =  T2.Id JOIN users AS T3 ON T2.OwnerUserId  =  T3.Id WHERE T1.TagName  =  'hypothesis-testing'\t----- bird -----\tcodebase_community",
  "655": "SELECT T3.Title, T2.LinkTypeId FROM posts AS T1 JOIN postLinks AS T2 ON T1.Id = T2.PostId OR T1.Id = T2.RelatedPostId JOIN posts AS T3 ON (T3.Id = T2.PostId OR T3.Id = T2.RelatedPostId) AND T3.Id != T1.Id WHERE T1.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
  "656": "SELECT T3.DisplayName FROM posts AS T1 JOIN posts AS T2 ON T1.ParentId = T2.Id JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.ParentId IS NOT NULL AND T1.Score IS NOT NULL ORDER BY T1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount IS NOT NULL ORDER BY T1.BountyAmount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "658": "SELECT T1.Title FROM posts AS T1 WHERE T1.ViewCount IS NOT NULL ORDER BY T1.ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
  "659": "SELECT count(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
  "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount IS NOT NULL ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "661": "SELECT T1.Age FROM users AS T1 WHERE T1.Reputation IS NOT NULL AND T1.Age IS NOT NULL ORDER BY T1.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "662": "SELECT COUNT(DISTINCT T1.PostId) FROM votes AS T1 WHERE STRFTIME('%Y', T1.CreationDate) = '2011' AND T1.BountyAmount = 50 AND T1.CreationDate IS NOT NULL AND T1.BountyAmount IS NOT NULL;\t----- bird -----\tcodebase_community",
  "663": "SELECT T1.Id FROM users AS T1 WHERE T1.Age IS NOT NULL ORDER BY T1.Age ASC LIMIT 1;\t----- bird -----\tcodebase_community",
  "664": "SELECT T2.Score FROM posts AS T2 JOIN (SELECT TagName FROM tags WHERE Count IS NOT NULL ORDER BY Count DESC LIMIT 1) AS T1 ON T2.Tags LIKE '%<' || T1.TagName || '>%' WHERE T2.ViewCount IS NOT NULL ORDER BY T2.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "665": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12.0 FROM postLinks AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.AnswerCount <= 2 AND STRFTIME('%Y', T1.CreationDate) = '2010';\t----- bird -----\tcodebase_community",
  "666": "SELECT T2.Id FROM votes AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 AND T2.FavoriteCount IS NOT NULL ORDER BY T2.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "667": "SELECT T2.Title FROM postLinks AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate IS NOT NULL ORDER BY T1.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
  "668": "SELECT T2.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.UserId IS NOT NULL GROUP BY T1.UserId ORDER BY COUNT(T1.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "669": "SELECT T2.CreationDate FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl' AND T2.CreationDate IS NOT NULL ORDER BY T2.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
  "670": "SELECT T2.CreaionDate FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age IS NOT NULL AND T2.CreaionDate IS NOT NULL ORDER BY T1.Age ASC, T2.CreaionDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
  "671": "SELECT T1.DisplayName FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Autobiographer' AND T2.Date IS NOT NULL ORDER BY T2.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
  "672": "SELECT COUNT(T1.Id) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount IS NOT NULL GROUP BY T1.Id HAVING SUM(T2.FavoriteCount) >= 4;\t----- bird -----\tcodebase_community",
  "673": "SELECT AVG(T1.PostId) FROM votes AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age = (SELECT Age FROM users WHERE Age IS NOT NULL ORDER BY Age DESC LIMIT 1) AND T2.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
  "674": "SELECT DisplayName FROM users WHERE Reputation IS NOT NULL ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "675": "SELECT count(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
  "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "677": "SELECT count(T1.Id) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND strftime('%Y', T1.CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
  "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount IS NOT NULL ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "679": "SELECT Id ,  Title FROM posts WHERE Score IS NOT NULL ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "680": "SELECT AVG(T2.Score) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
  "681": "SELECT DISTINCT T1.DisplayName FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND STRFTIME('%Y', T2.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
  "682": "SELECT T1.Id, T1.OwnerDisplayName FROM posts AS T1 WHERE STRFTIME('%Y', T1.CreaionDate) = '2010' AND T1.FavoriteCount IS NOT NULL ORDER BY T1.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "683": "SELECT CAST(SUM(CASE WHEN T2.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreaionDate) = '2011' AND T1.CreaionDate IS NOT NULL;\t----- bird -----\tcodebase_community",
  "684": "SELECT SUM(CASE WHEN T1.Age >= 13 AND T1.Age <= 18 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.Age) FROM users AS T1;\t----- bird -----\tcodebase_community",
  "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
  "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount IS NOT NULL AND ViewCount > (SELECT AVG(ViewCount) FROM posts WHERE ViewCount IS NOT NULL);\t----- bird -----\tcodebase_community",
  "687": "SELECT T1.CommentCount FROM posts AS T1 WHERE T1.Score IS NOT NULL ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "688": "SELECT count(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
  "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183;\t----- bird -----\tcodebase_community",
  "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' AND T1.Date IS NOT NULL ORDER BY T1.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "691": "SELECT COUNT(T1.Id) FROM users AS T1 WHERE T1.Age BETWEEN 19 AND 65 AND T1.UpVotes > 5000;\t----- bird -----\tcodebase_community",
  "692": "SELECT julianday(T1.Date) - julianday(T2.CreationDate) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon' AND T1.Date IS NOT NULL AND T2.CreationDate IS NOT NULL;\t----- bird -----\tcodebase_community",
  "693": "SELECT COUNT(T1.Id), COUNT(T2.Id) FROM users AS T3 LEFT JOIN posts AS T1 ON T3.Id = T1.OwnerUserId LEFT JOIN comments AS T2 ON T3.Id = T2.UserId WHERE T3.CreationDate IS NOT NULL ORDER BY T3.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "694": "SELECT T2.Text ,  T2.UserDisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.Id  =  T2.PostId WHERE T1.Title  =  'Analysing wind data with R' AND T2.CreationDate IS NOT NULL ORDER BY T2.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "695": "SELECT count(DISTINCT T1.UserId) FROM badges AS T1 WHERE T1.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
  "696": "SELECT T1.Count FROM tags AS T1 WHERE T1.TagName = 'careers';\t----- bird -----\tcodebase_community",
  "697": "SELECT T1.Reputation, T1.Views FROM users AS T1 WHERE T1.DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
  "698": "SELECT CommentCount ,  AnswerCount FROM posts WHERE Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
  "699": "SELECT T1.CreationDate FROM users AS T1 WHERE T1.DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
  "700": "SELECT COUNT(DISTINCT T1.PostId) FROM votes AS T1 WHERE T1.BountyAmount >= 30;\t----- bird -----\tcodebase_community",
  "701": "SELECT CAST(SUM(CASE WHEN T1.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.Id) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Id = (SELECT Id FROM users WHERE Reputation IS NOT NULL ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
  "702": "SELECT count(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
  "703": "SELECT count(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
  "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
  "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
  "706": "SELECT T2.Text FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community",
  "707": "SELECT T2.Text FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 AND T1.ViewCount IS NOT NULL AND T2.Score IS NOT NULL ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
  "708": "SELECT DISTINCT T1.CreationDate, T1.Age FROM users AS T1 JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
  "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount IS NOT NULL AND T2.ViewCount < 5;\t----- bird -----\tcodebase_community",
  "710": "SELECT count(*) FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CommentCount = 1 AND T2.Score = 0;\t----- bird -----\tcodebase_community",
  "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40;\t----- bird -----\tcodebase_community",
  "712": "SELECT T1.Id, T2.Text FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
  "713": "SELECT T2.UpVotes FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
  "714": "SELECT T1.Text FROM comments AS T1 WHERE T1.UserDisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
  "715": "SELECT DISTINCT T2.DisplayName FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0 AND T1.Score IS NOT NULL AND T2.DownVotes IS NOT NULL;\t----- bird -----\tcodebase_community",
  "716": "SELECT CAST(COUNT(CASE WHEN T2.UpVotes = 0 THEN T1.Id ELSE NULL END) AS REAL) * 100 / COUNT(T1.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
  "717": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
  "718": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
  "719": "SELECT count(T1.id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
  "720": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING count(T2.power_id) > 15\t----- bird -----\tsuperhero",
  "721": "SELECT count(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue';\t----- bird -----\tsuperhero",
  "722": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
  "723": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN hero_power AS T3 ON T1.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility';\t----- bird -----\tsuperhero",
  "724": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond';\t----- bird -----\tsuperhero",
  "725": "SELECT count(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "726": "SELECT T1.full_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm IS NOT NULL ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
  "727": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
  "728": "SELECT count(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue';\t----- bird -----\tsuperhero",
  "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm IS NOT NULL\t----- bird -----\tsuperhero",
  "730": "SELECT CAST(COUNT(DISTINCT CASE WHEN T4.power_name = 'Super Strength' THEN T1.id END) AS REAL) * 100 / COUNT(DISTINCT T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id LEFT JOIN hero_power AS T3 ON T1.id = T3.hero_id LEFT JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "731": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
  "732": "SELECT T4.publisher_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "733": "SELECT count(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "734": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
  "735": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond';\t----- bird -----\tsuperhero",
  "736": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' AND T2.attribute_value IS NOT NULL ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "737": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
  "738": "SELECT count(T1.hero_id) FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50;\t----- bird -----\tsuperhero",
  "739": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
  "740": "SELECT count(T1.id) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN hero_attribute AS T3 ON T1.id = T3.hero_id JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100;\t----- bird -----\tsuperhero",
  "741": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY count(T2.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "742": "SELECT count(T1.id) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
  "743": "SELECT CAST(SUM(CASE WHEN T2.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100.0 / SUM(CASE WHEN T2.id IS NOT NULL THEN 1 ELSE 0 END) ,  SUM(CASE WHEN T2.alignment = 'Bad' AND T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 LEFT JOIN alignment AS T2 ON T1.alignment_id = T2.id LEFT JOIN publisher AS T3 ON T1.publisher_id = T3.id\t----- bird -----\tsuperhero",
  "744": "SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('Marvel Comics', 'DC Comics')\t----- bird -----\tsuperhero",
  "745": "SELECT T1.id FROM publisher AS T1 WHERE T1.publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
  "746": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1\t----- bird -----\tsuperhero",
  "747": "SELECT count(*) FROM superhero AS T1 WHERE T1.full_name IS NULL\t----- bird -----\tsuperhero",
  "748": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
  "749": "SELECT T1.power_name FROM superpower AS T1 JOIN hero_power AS T2 ON T1.id = T2.power_id JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
  "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 WHERE T1.gender_id = 2 AND T1.weight_kg IS NOT NULL;\t----- bird -----\tsuperhero",
  "751": "SELECT DISTINCT T4.power_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN hero_power AS T3 ON T1.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
  "752": "SELECT T1.superhero_name FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';\t----- bird -----\tsuperhero",
  "753": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm BETWEEN 170 AND 190 AND T1.eye_colour_id = 1;\t----- bird -----\tsuperhero",
  "754": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56;\t----- bird -----\tsuperhero",
  "755": "SELECT T1.full_name FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' AND T1.full_name IS NOT NULL LIMIT 5;\t----- bird -----\tsuperhero",
  "756": "SELECT count(T1.id) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad';\t----- bird -----\tsuperhero",
  "757": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
  "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'Human'\t----- bird -----\tsuperhero",
  "759": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg IS NOT NULL ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
  "760": "SELECT CAST(SUM(CASE WHEN T1.publisher_id = 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 WHERE T1.height_cm BETWEEN 150 AND 180 AND T1.height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
  "761": "SELECT T1.full_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero WHERE weight_kg IS NOT NULL) AND T1.weight_kg IS NOT NULL;\t----- bird -----\tsuperhero",
  "762": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T1.power_id ORDER BY COUNT(T1.hero_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "763": "SELECT T2.attribute_value FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
  "764": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1;\t----- bird -----\tsuperhero",
  "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth';\t----- bird -----\tsuperhero",
  "766": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value IS NOT NULL ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "767": "SELECT CAST(COUNT(T1.id) AS REAL) / SUM(T1.skin_colour_id = 1) FROM superhero AS T1;\t----- bird -----\tsuperhero",
  "768": "SELECT count(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
  "769": "SELECT T1.superhero_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN hero_attribute AS T3 ON T1.id = T3.hero_id JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T4.attribute_name = 'Durability' AND T3.attribute_value IS NOT NULL ORDER BY T3.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "770": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
  "771": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\t----- bird -----\tsuperhero",
  "772": "SELECT T4.colour ,  T5.colour ,  T6.colour FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id  =  T2.id JOIN publisher AS T3 ON T1.publisher_id  =  T3.id JOIN colour AS T4 ON T1.eye_colour_id  =  T4.id JOIN colour AS T5 ON T1.hair_colour_id  =  T5.id JOIN colour AS T6 ON T1.skin_colour_id  =  T6.id WHERE T2.gender  =  'Female' AND T3.publisher_name  =  'Dark Horse Comics'\t----- bird -----\tsuperhero",
  "773": "SELECT T1.superhero_name ,  T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id  =  T2.id WHERE T1.eye_colour_id  =  T1.hair_colour_id AND T1.hair_colour_id  =  T1.skin_colour_id\t----- bird -----\tsuperhero",
  "774": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
  "775": "SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id LEFT JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female';\t----- bird -----\tsuperhero",
  "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
  "777": "SELECT T2.gender FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
  "778": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
  "779": "SELECT count(T2.power_id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
  "780": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
  "781": "SELECT T1.height_cm FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber' AND T1.height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
  "782": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black';\t----- bird -----\tsuperhero",
  "783": "SELECT DISTINCT T3.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.colour = 'Gold';\t----- bird -----\tsuperhero",
  "784": "SELECT T1.full_name FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
  "785": "SELECT T1.superhero_name FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral';\t----- bird -----\tsuperhero",
  "786": "SELECT count(T1.hero_id) FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = (SELECT T1_inner.attribute_value FROM hero_attribute AS T1_inner JOIN attribute AS T2_inner ON T1_inner.attribute_id = T2_inner.id WHERE T2_inner.attribute_name = 'Strength' AND T1_inner.attribute_value IS NOT NULL ORDER BY T1_inner.attribute_value DESC LIMIT 1);\t----- bird -----\tsuperhero",
  "787": "SELECT T2.race, T3.alignment FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
  "788": "SELECT SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';\t----- bird -----\tsuperhero",
  "790": "SELECT (SELECT SUM(T1.weight_kg) FROM superhero AS T1 WHERE T1.full_name = 'Emil Blonsky') - (SELECT SUM(T2.weight_kg) FROM superhero AS T2 WHERE T2.full_name = 'Charles Chandler')\t----- bird -----\tsuperhero",
  "791": "SELECT AVG(T1.height_cm) FROM superhero AS T1\t----- bird -----\tsuperhero",
  "792": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
  "793": "SELECT count(*) FROM superhero AS T1 WHERE T1.race_id = 21 AND T1.gender_id = 1;\t----- bird -----\tsuperhero",
  "794": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value IS NOT NULL ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "795": "SELECT count(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
  "796": "SELECT T3.attribute_name ,  T2.attribute_value FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id  =  T2.hero_id JOIN attribute AS T3 ON T2.attribute_id  =  T3.id WHERE T1.superhero_name  =  '3-D Man'\t----- bird -----\tsuperhero",
  "797": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.eye_colour_id = 7 AND T1.hair_colour_id = 9\t----- bird -----\tsuperhero",
  "798": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
  "799": "SELECT count(*) FROM superhero AS T1 WHERE T1.publisher_id = 1;\t----- bird -----\tsuperhero",
  "800": "SELECT CAST(SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1;\t----- bird -----\tsuperhero",
  "801": "SELECT CAST(SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
  "802": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm IS NOT NULL ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
  "803": "SELECT T1.id FROM superpower AS T1 WHERE T1.power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
  "804": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.id = 294;\t----- bird -----\tsuperhero",
  "805": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0;\t----- bird -----\tsuperhero",
  "806": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
  "807": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
  "808": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.height_cm = 188 AND T1.weight_kg = 108\t----- bird -----\tsuperhero",
  "809": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;\t----- bird -----\tsuperhero",
  "810": "SELECT T3.race FROM hero_attribute AS T1 JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN race AS T3 ON T2.race_id = T3.id WHERE T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "811": "SELECT T2.alignment, T4.power_name FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id JOIN hero_power AS T3 ON T1.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
  "812": "SELECT T1.full_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
  "813": "SELECT AVG(T2.attribute_value) FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.alignment_id = 3;\t----- bird -----\tsuperhero",
  "814": "SELECT DISTINCT T3.colour FROM hero_attribute AS T1 JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN colour AS T3 ON T2.skin_colour_id = T3.id WHERE T1.attribute_value = 100;\t----- bird -----\tsuperhero",
  "815": "SELECT count(*) FROM superhero AS T1 WHERE T1.alignment_id = 1 AND T1.gender_id = 2;\t----- bird -----\tsuperhero",
  "816": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
  "817": "SELECT T4.race FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.gender = 'male' AND T3.colour = 'blue';\t----- bird -----\tsuperhero",
  "818": "SELECT CAST(SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 WHERE T1.alignment_id = 2;\t----- bird -----\tsuperhero",
  "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 WHERE (T1.weight_kg = 0 OR T1.weight_kg IS NULL);\t----- bird -----\tsuperhero",
  "820": "SELECT T2.attribute_value FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
  "821": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
  "822": "SELECT count(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad';\t----- bird -----\tsuperhero",
  "823": "SELECT count(*) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "824": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC;\t----- bird -----\tsuperhero",
  "825": "SELECT T4.gender FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T2.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
  "826": "SELECT T1.superhero_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' AND T1.weight_kg IS NOT NULL ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
  "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race <> 'Human' AND T1.height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
  "828": "SELECT count(T1.hero_id) FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100\t----- bird -----\tsuperhero",
  "829": "SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('DC Comics', 'Marvel Comics');\t----- bird -----\tsuperhero",
  "830": "SELECT T1.attribute_name FROM attribute AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' AND T2.attribute_value IS NOT NULL ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "831": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
  "832": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm IS NOT NULL ORDER BY T1.height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "833": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
  "834": "SELECT CAST(SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
  "835": "SELECT CAST(SUM(CASE WHEN T3.alignment = 'good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
  "836": "SELECT count(T1.id) FROM superhero AS T1 WHERE T1.full_name LIKE 'John %'\t----- bird -----\tsuperhero",
  "837": "SELECT T1.hero_id FROM hero_attribute AS T1 WHERE T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "838": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.superhero_name = 'Alien';\t----- bird -----\tsuperhero",
  "839": "SELECT T1.full_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T1.weight_kg IS NOT NULL AND T2.colour = 'Brown';\t----- bird -----\tsuperhero",
  "840": "SELECT T2.attribute_value FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
  "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
  "842": "SELECT avg(T1.height_cm) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'neutral'\t----- bird -----\tsuperhero",
  "843": "SELECT T1.id FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
  "844": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
  "845": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > ( SELECT 0.8 * AVG(T4.height_cm) FROM superhero AS T4 WHERE T4.height_cm IS NOT NULL ) AND T1.height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
  "846": "SELECT T1.driverRef FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 18 AND T2.q1 IS NOT NULL AND T2.q1 != '' ORDER BY T2.q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
  "847": "SELECT T2.surname FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.q2 IS NOT NULL ORDER BY T1.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
  "848": "SELECT DISTINCT T1.year FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai';\t----- bird -----\tformula_1",
  "849": "SELECT T1.url FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
  "850": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
  "851": "SELECT DISTINCT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId JOIN results AS T3 ON T2.raceId = T3.raceId JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T4.name = 'Renault';\t----- bird -----\tformula_1",
  "852": "SELECT COUNT(T1.raceId) FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('UK', 'Italy', 'Monaco', 'Spain', 'Germany', 'Belgium', 'Hungary', 'Austria', 'France', 'Portugal', 'Russia', 'Japan', 'China', 'Malaysia', 'Singapore', 'Bahrain', 'UAE', 'Turkey', 'India', 'Korea', 'Azerbaijan');\t----- bird -----\tformula_1",
  "853": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
  "854": "SELECT DISTINCT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
  "855": "SELECT T1.url FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
  "856": "SELECT T1.time FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
  "857": "SELECT T2.lat ,  T2.lng FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId  =  T2.circuitId WHERE T1.name  =  'Abu Dhabi Grand Prix' LIMIT 1\t----- bird -----\tformula_1",
  "858": "SELECT T1.nationality FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 24 AND T2.points = 1\t----- bird -----\tformula_1",
  "859": "SELECT T1.q1 FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 354 AND T2.forename = 'Bruno' AND T2.surname = 'Senna'\t----- bird -----\tformula_1",
  "860": "SELECT T2.nationality FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 355 AND T1.q2 = '0:01:40'\t----- bird -----\tformula_1",
  "861": "SELECT T1.number FROM qualifying AS T1 WHERE T1.raceId = 903 AND T1.q3 = '0:01:54';\t----- bird -----\tformula_1",
  "862": "SELECT COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2007 AND T2.name = 'Bahrain Grand Prix' AND T1.time IS NULL;\t----- bird -----\tformula_1",
  "863": "SELECT T2.url FROM races AS T1 JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
  "864": "SELECT COUNT(T2.driverId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '2015-11-29' AND T2.time IS NOT NULL;\t----- bird -----\tformula_1",
  "865": "SELECT T2.driverId FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 592 AND T1.time IS NOT NULL AND T2.dob IS NOT NULL ORDER BY T2.dob ASC LIMIT 1\t----- bird -----\tformula_1",
  "866": "SELECT T2.url FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27';\t----- bird -----\tformula_1",
  "867": "SELECT T2.nationality FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 AND T1.fastestLapSpeed IS NOT NULL ORDER BY CAST(T1.fastestLapSpeed AS REAL) DESC LIMIT 1\t----- bird -----\tformula_1",
  "868": "SELECT DISTINCT T2.lat, T2.lng FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
  "869": "SELECT T2.url FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 AND T1.points IS NOT NULL ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
  "870": "SELECT T1.q1 FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 345 AND T2.forename = 'Lucas' AND T2.surname = 'di Grassi'\t----- bird -----\tformula_1",
  "871": "SELECT T2.nationality FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 347 AND T1.q2 = '0:01:15'\t----- bird -----\tformula_1",
  "872": "SELECT T2.code FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '0:01:33'\t----- bird -----\tformula_1",
  "873": "SELECT T1.time FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 743 AND T2.forename = 'Bruce' AND T2.surname = 'McLaren'\t----- bird -----\tformula_1",
  "874": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2006 AND T3.name = 'San Marino Grand Prix' AND T2.position = 2;\t----- bird -----\tformula_1",
  "875": "SELECT T1.url FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
  "876": "SELECT COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
  "877": "SELECT T2.driverId FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL AND T2.dob IS NOT NULL ORDER BY T2.dob DESC LIMIT 1\t----- bird -----\tformula_1",
  "878": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "879": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed IS NOT NULL AND T1.fastestLapSpeed != '' ORDER BY CAST(T1.fastestLapSpeed AS REAL) DESC LIMIT 1\t----- bird -----\tformula_1",
  "880": "SELECT (MAX(CASE WHEN T1.raceId = 853 THEN CAST(T1.fastestLapSpeed AS REAL) ELSE NULL END) - MAX(CASE WHEN T1.raceId = 854 THEN CAST(T1.fastestLapSpeed AS REAL) ELSE NULL END)) * 100.0 / MAX(CASE WHEN T1.raceId = 853 THEN CAST(T1.fastestLapSpeed AS REAL) ELSE NULL END) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Paul' AND T2.surname = 'di Resta' AND T1.raceId IN (853, 854) AND T1.fastestLapSpeed IS NOT NULL;\t----- bird -----\tformula_1",
  "881": "SELECT CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.driverId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
  "882": "SELECT T1.year FROM races AS T1 WHERE T1.name = 'Singapore Grand Prix' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
  "883": "SELECT T1.name FROM races AS T1 WHERE T1.year = 2005 ORDER BY T1.name DESC\t----- bird -----\tformula_1",
  "884": "SELECT T1.name FROM races AS T1 WHERE STRFTIME('%Y-%m', T1.date) = (SELECT STRFTIME('%Y-%m', MIN(T2.date)) FROM races AS T2);\t----- bird -----\tformula_1",
  "885": "SELECT T1.name, T1.date FROM races AS T1 WHERE T1.year = 1999 ORDER BY T1.round DESC LIMIT 1\t----- bird -----\tformula_1",
  "886": "SELECT year FROM races GROUP BY year ORDER BY MAX(round) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "887": "SELECT T1.name FROM races AS T1 WHERE T1.year = 2017 AND T1.name NOT IN (SELECT T2.name FROM races AS T2 WHERE T2.year = 2000)\t----- bird -----\tformula_1",
  "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
  "889": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'British Grand Prix' AND T2.name = 'Brands Hatch' ORDER BY T1.year DESC LIMIT 1;\t----- bird -----\tformula_1",
  "890": "SELECT COUNT(DISTINCT T2.year) FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'British Grand Prix';\t----- bird -----\tformula_1",
  "891": "SELECT T3.forename, T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'Singapore Grand Prix' AND T1.year = 2010 AND T2.position IS NOT NULL ORDER BY T2.position ASC\t----- bird -----\tformula_1",
  "892": "SELECT T2.forename, T2.surname, SUM(T1.points) AS total_points FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "893": "SELECT T3.forename, T3.surname, T1.points FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2017 AND T2.name = 'Chinese Grand Prix' ORDER BY T1.positionOrder ASC LIMIT 3;\t----- bird -----\tformula_1",
  "894": "SELECT T1.time ,  T2.forename ,  T2.surname ,  T3.name FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId  =  T2.driverId JOIN races AS T3 ON T1.raceId  =  T3.raceId WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "895": "SELECT AVG(T3.milliseconds) FROM drivers AS T1 JOIN lapTimes AS T3 ON T1.driverId = T3.driverId JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Sebastian' AND T1.surname = 'Vettel' AND T2.year = 2009 AND T2.name = 'Chinese Grand Prix' AND T3.milliseconds IS NOT NULL;\t----- bird -----\tformula_1",
  "896": "SELECT CAST(SUM(CASE WHEN T1.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.raceId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' AND T3.year >= 2010;\t----- bird -----\tformula_1",
  "897": "SELECT T1.forename, T1.surname, T1.nationality, AVG(T2.points) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId, T1.forename, T1.surname, T1.nationality ORDER BY SUM(CASE WHEN T2.position = 1 THEN 1 ELSE 0 END) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "898": "SELECT 2022 - CAST(strftime('%Y', T1.dob) AS INTEGER) + 1, T1.forename, T1.surname FROM drivers AS T1 WHERE T1.nationality = 'Japanese' AND T1.dob IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
  "899": "SELECT T1.circuitId FROM races AS T1 WHERE T1.year >= 1990 AND T1.year <= 2000 GROUP BY T1.circuitId HAVING COUNT(T1.raceId) = 4;\t----- bird -----\tformula_1",
  "900": "SELECT T1.name ,  T1.location ,  T2.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId  =  T2.circuitId WHERE T1.country  =  'USA' AND T2.year  =  2006\t----- bird -----\tformula_1",
  "901": "SELECT T1.name ,  T2.name ,  T2.location FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId  =  T2.circuitId WHERE STRFTIME('%Y', T1.date) = '2005' AND STRFTIME('%m', T1.date) = '09'\t----- bird -----\tformula_1",
  "902": "SELECT DISTINCT T1.name FROM races AS T1 JOIN qualifying AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.position < 10 AND T2.position IS NOT NULL;\t----- bird -----\tformula_1",
  "903": "SELECT COUNT(T1.resultId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId JOIN circuits AS T4 ON T3.circuitId = T4.circuitId JOIN ( SELECT raceId, MAX(points) AS max_points_in_race FROM results WHERE points IS NOT NULL GROUP BY raceId ) AS T5 ON T1.raceId = T5.raceId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit' AND T1.points = T5.max_points_in_race AND T1.points > 0;\t----- bird -----\tformula_1",
  "904": "SELECT T3.name ,  T3.year FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId  =  T2.driverId JOIN races AS T3 ON T2.raceId  =  T3.raceId WHERE T1.forename  =  'Michael' AND T1.surname  =  'Schumacher' AND T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "905": "SELECT AVG(T1.points) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Eddie' AND T2.surname = 'Irvine' AND T3.year = 2000\t----- bird -----\tformula_1",
  "906": "SELECT T2.name ,  T1.points FROM results AS T1 JOIN races AS T2 ON T1.raceId  =  T2.raceId JOIN drivers AS T3 ON T1.driverId  =  T3.driverId WHERE T3.forename  =  'Lewis' AND T3.surname  =  'Hamilton' ORDER BY T2.date LIMIT 1\t----- bird -----\tformula_1",
  "907": "SELECT T1.name ,  T2.country FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId  =  T2.circuitId WHERE T1.year  =  2017 ORDER BY T1.date\t----- bird -----\tformula_1",
  "908": "SELECT T1.laps ,  T2.name ,  T2.year ,  T3.location FROM results AS T1 JOIN races AS T2 ON T1.raceId  =  T2.raceId JOIN circuits AS T3 ON T2.circuitId  =  T3.circuitId ORDER BY T1.laps DESC LIMIT 1\t----- bird -----\tformula_1",
  "909": "SELECT CAST(COUNT(CASE WHEN T2.country = 'Germany' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix';\t----- bird -----\tformula_1",
  "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
  "911": "SELECT T1.name FROM circuits AS T1 WHERE T1.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') AND T1.lat IS NOT NULL ORDER BY T1.lat DESC LIMIT 1\t----- bird -----\tformula_1",
  "912": "SELECT T1.circuitRef FROM circuits AS T1 WHERE T1.name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
  "913": "SELECT country FROM circuits WHERE alt IS NOT NULL ORDER BY alt DESC LIMIT 1\t----- bird -----\tformula_1",
  "914": "SELECT count(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
  "915": "SELECT T1.nationality FROM drivers AS T1 WHERE T1.dob IS NOT NULL ORDER BY T1.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
  "916": "SELECT T1.surname FROM drivers AS T1 WHERE T1.nationality = 'Italian'\t----- bird -----\tformula_1",
  "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
  "918": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "919": "SELECT T2.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
  "920": "SELECT DISTINCT T1.year FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
  "921": "SELECT T1.url FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
  "922": "SELECT T1.time FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
  "923": "SELECT count(T1.raceId) FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
  "924": "SELECT T1.date FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
  "925": "SELECT T1.url FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
  "926": "SELECT T1.fastestLapTime FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLapTime IS NOT NULL AND T1.fastestLapTime != '' ORDER BY T1.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
  "927": "SELECT T2.forename, T2.surname FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed IS NOT NULL AND T1.fastestLapSpeed != '' ORDER BY CAST(T1.fastestLapSpeed AS REAL) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "928": "SELECT T3.driverRef FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
  "929": "SELECT DISTINCT T3.name FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "930": "SELECT T3.name FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.position IS NOT NULL ORDER BY T2.position ASC LIMIT 1\t----- bird -----\tformula_1",
  "931": "SELECT T1.fastestLapSpeed FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix' AND T1.fastestLapSpeed IS NOT NULL ORDER BY T1.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
  "932": "SELECT DISTINCT T3.year FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "933": "SELECT T1.positionOrder FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "934": "SELECT T3.forename, T3.surname FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.grid = 4\t----- bird -----\tformula_1",
  "935": "SELECT count(T2.driverId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.time IS NOT NULL\t----- bird -----\tformula_1",
  "936": "SELECT T1.fastestLapTime FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
  "937": "SELECT T2.time FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.positionOrder = 2\t----- bird -----\tformula_1",
  "938": "SELECT T3.forename, T3.surname, T3.url FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.position = 1;\t----- bird -----\tformula_1",
  "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'American' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
  "940": "SELECT COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
  "941": "SELECT SUM(T1.points) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "942": "SELECT AVG(CAST(substr(T2.fastestLapTime, 1, 2) AS REAL) * 60 + CAST(substr(T2.fastestLapTime, 4, 2) AS REAL) + CAST(substr(T2.fastestLapTime, 7, 3) AS REAL) / 1000.0) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
  "943": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 END) AS REAL) / COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
  "944": "WITH SpecificRace AS ( SELECT T1.raceId FROM races AS T1 WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' ), ChampionTime AS ( SELECT T2.milliseconds AS champ_ms FROM results AS T2 JOIN SpecificRace ON T2.raceId = SpecificRace.raceId WHERE T2.positionOrder = 1 AND T2.milliseconds IS NOT NULL ), LastFinisherTime AS ( SELECT T3.milliseconds AS last_ms FROM results AS T3 JOIN SpecificRace ON T3.raceId = SpecificRace.raceId WHERE T3.milliseconds IS NOT NULL ORDER BY T3.milliseconds DESC LIMIT 1 ) SELECT ( (CAST(T5.last_ms AS REAL) - CAST(T4.champ_ms AS REAL)) / CAST(T5.last_ms AS REAL) ) * 100.0 AS percentage_faster FROM ChampionTime AS T4, LastFinisherTime AS T5;\t----- bird -----\tformula_1",
  "945": "SELECT count(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\t----- bird -----\tformula_1",
  "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
  "947": "SELECT count(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) > '1980';\t----- bird -----\tformula_1",
  "948": "SELECT AVG(T2.points) FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British';\t----- bird -----\tformula_1",
  "949": "SELECT T1.constructorId\nFROM constructors AS T1\nJOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId\nWHERE T2.points IS NOT NULL\nGROUP BY T1.constructorId\nORDER BY SUM(T2.points) DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "950": "SELECT T1.name FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0;\t----- bird -----\tformula_1",
  "951": "SELECT COUNT(*) FROM (SELECT T1.constructorId FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2)\t----- bird -----\tformula_1",
  "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1;\t----- bird -----\tformula_1",
  "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50;\t----- bird -----\tformula_1",
  "954": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.resultId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
  "955": "SELECT T2.year ,  AVG(T1.milliseconds / 1000.0) FROM results AS T1 JOIN races AS T2 ON T1.raceId  =  T2.raceId WHERE T1.position  =  1 AND T1.milliseconds IS NOT NULL GROUP BY T2.year\t----- bird -----\tformula_1",
  "956": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE CAST(strftime('%Y', T1.dob) AS INTEGER) > 1975 AND T2.position = 2;\t----- bird -----\tformula_1",
  "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italian' AND T2.time IS NULL;\t----- bird -----\tformula_1",
  "958": "SELECT T2.forename ,  T2.surname FROM results AS T1 JOIN drivers AS T2 ON T1.driverId  =  T2.driverId WHERE T1.fastestLapTime IS NOT NULL AND T1.fastestLapTime != '' ORDER BY T1.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
  "959": "SELECT T1.fastestLap FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT T3.driverId FROM driverStandings AS T3 WHERE T3.raceId = (SELECT T4.raceId FROM races AS T4 WHERE T4.year = 2009 ORDER BY T4.round DESC LIMIT 1) AND T3.position = 1) AND T2.year = 2009 AND T1.fastestLapTime IS NOT NULL AND T1.fastestLapTime != '' ORDER BY T1.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
  "960": "SELECT avg(T1.fastestLapSpeed) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
  "961": "SELECT T2.name, T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
  "962": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.dob IS NOT NULL AND strftime('%Y', T1.dob) < '1985' AND T2.laps IS NOT NULL AND T2.laps > 50 THEN T1.driverId ELSE NULL END) AS REAL) * 100.0 / COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
  "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.milliseconds < 120000 AND T2.milliseconds IS NOT NULL;\t----- bird -----\tformula_1",
  "964": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
  "965": "SELECT T1.raceId FROM races AS T1 WHERE T1.year = 2009\t----- bird -----\tformula_1",
  "966": "SELECT count(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
  "967": "WITH Top3Youngest AS ( SELECT T1.code, T1.nationality FROM drivers AS T1 WHERE T1.dob IS NOT NULL ORDER BY T1.dob DESC LIMIT 3 ) SELECT T2.code, (SELECT COUNT(*) FROM Top3Youngest WHERE nationality = 'Dutch') AS DutchCount FROM Top3Youngest AS T2;\t----- bird -----\tformula_1",
  "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
  "969": "SELECT count(*) FROM drivers WHERE nationality = 'Australian' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
  "970": "SELECT T1.driverId FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND CAST(strftime('%Y', T1.dob) AS INTEGER) BETWEEN 1980 AND 1990 AND T2.milliseconds IS NOT NULL GROUP BY T1.driverId ORDER BY MIN(T2.milliseconds) ASC LIMIT 3\t----- bird -----\tformula_1",
  "971": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob IS NOT NULL ORDER BY T1.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
  "972": "SELECT DISTINCT T1.driverId, T1.code FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL AND T2.fastestLapTime != ''\t----- bird -----\tformula_1",
  "973": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob IS NOT NULL AND STRFTIME('%Y', T1.dob) < '1982' AND T2.time IS NOT NULL GROUP BY T1.driverId ORDER BY MAX(T2.time) DESC LIMIT 10;\t----- bird -----\tformula_1",
  "974": "SELECT T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapTime IS NOT NULL AND T1.fastestLapTime != '' ORDER BY T1.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
  "975": "SELECT T2.year FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
  "976": "SELECT T1.driverId FROM lapTimes AS T1 WHERE T1.lap = 1 AND T1.milliseconds IS NOT NULL GROUP BY T1.driverId ORDER BY MIN(T1.milliseconds) ASC LIMIT 5;\t----- bird -----\tformula_1",
  "977": "SELECT count(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
  "978": "SELECT COUNT(T2.raceId), T1.location, T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Austria' GROUP BY T1.circuitId, T1.location, T1.lat, T1.lng;\t----- bird -----\tformula_1",
  "979": "SELECT T1.raceId FROM results AS T1 WHERE T1.time IS NOT NULL GROUP BY T1.raceId ORDER BY COUNT(T1.resultId) DESC LIMIT 1\t----- bird -----\tformula_1",
  "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL\t----- bird -----\tformula_1",
  "981": "SELECT T1.year, T1.name, T1.date, T1.time FROM races AS T1 JOIN qualifying AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) ORDER BY T1.date ASC, T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
  "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = 2;\t----- bird -----\tformula_1",
  "983": "SELECT T1.url FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' AND T2.points IS NOT NULL GROUP BY T1.constructorId ORDER BY SUM(T2.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "984": "SELECT T1.url FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.constructorId ORDER BY SUM(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
  "985": "SELECT T1.driverId FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
  "986": "SELECT T1.raceId ,  T1.milliseconds FROM lapTimes AS T1 WHERE T1.lap = 1 AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2006 AND T2.name = 'United States Grand Prix' AND T1.rank < 11 AND T1.rank IS NOT NULL AND T1.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
  "988": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId  =  T2.driverId WHERE T1.nationality  =  'German' AND CAST(strftime('%Y', T1.dob) AS INTEGER)  >  1980 AND CAST(strftime('%Y', T1.dob) AS INTEGER)  <  1985 AND T2.milliseconds IS NOT NULL AND T2.milliseconds  >  0 GROUP BY T1.driverId ORDER BY AVG(T2.milliseconds) ASC LIMIT 5\t----- bird -----\tformula_1",
  "989": "SELECT T3.forename, T3.surname, T2.time FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.name = 'Canadian Grand Prix' AND T2.position = 1\t----- bird -----\tformula_1",
  "990": "SELECT T3.constructorRef, T3.url FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T1.year = 2009 AND T1.name = 'Singapore Grand Prix' AND T2.position = 1;\t----- bird -----\tformula_1",
  "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob IS NOT NULL AND CAST(strftime('%Y', dob) AS INTEGER) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
  "992": "SELECT T1.forename, T1.surname, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob IS NOT NULL AND CAST(strftime('%Y', T1.dob) AS INTEGER) BETWEEN 1971 AND 1985 ORDER BY T1.dob DESC\t----- bird -----\tformula_1",
  "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\t----- bird -----\tformula_1",
  "994": "SELECT SUM(T2.points), T3.name, T3.nationality FROM races AS T1 JOIN constructorResults AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T1.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010 GROUP BY T3.constructorId ORDER BY SUM(T2.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "995": "SELECT AVG(T3.points) FROM drivers AS T1 JOIN results AS T3 ON T1.driverId = T3.driverId JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
  "996": "SELECT CAST(COUNT(T1.raceId) AS REAL) / COUNT(DISTINCT T1.year) FROM races AS T1 WHERE T1.date BETWEEN '2000-01-01' AND '2010-12-31'\t----- bird -----\tformula_1",
  "997": "SELECT T1.nationality FROM drivers AS T1 WHERE T1.nationality IS NOT NULL GROUP BY T1.nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
  "998": "SELECT count(T1.resultId) FROM results AS T1 WHERE T1.driverId = (SELECT T2.driverId FROM results AS T2 GROUP BY T2.driverId ORDER BY sum(T2.points) DESC LIMIT 1 OFFSET 90) AND T1.position = 1;\t----- bird -----\tformula_1",
  "999": "SELECT T2.name FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapTime IS NOT NULL AND T1.fastestLapTime != '' ORDER BY T1.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
  "1000": "SELECT T2.location, T2.country FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId ORDER BY T1.date DESC LIMIT 1;\t----- bird -----\tformula_1",
  "1001": "SELECT T4.forename, T4.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T2.year = 2008 AND T3.name = 'Marina Bay Street Circuit' AND T1.q3 IS NOT NULL AND T1.q3 != '' ORDER BY T1.q3 ASC LIMIT 1\t----- bird -----\tformula_1",
  "1002": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE dob IS NOT NULL ORDER BY dob DESC LIMIT 1) ORDER BY T3.date ASC LIMIT 1;\t----- bird -----\tformula_1",
  "1003": "SELECT COUNT(T1.resultId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = 3 GROUP BY T1.driverId ORDER BY COUNT(T1.resultId) DESC LIMIT 1\t----- bird -----\tformula_1",
  "1004": "SELECT T1.forename, T1.surname, COUNT(T2.resultId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1) AND T2.position = 1;\t----- bird -----\tformula_1",
  "1005": "SELECT T1.duration FROM pitStops AS T1 WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
  "1006": "SELECT T1.time FROM lapTimes AS T1 WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "1007": "SELECT T2.milliseconds FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
  "1008": "SELECT T1.lap FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "1009": "SELECT T3.forename ,  T3.surname ,  T1.duration FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId  =  T2.raceId JOIN drivers AS T3 ON T1.driverId  =  T3.driverId WHERE T2.year  =  2011 AND T2.name  =  'Australian Grand Prix'\t----- bird -----\tformula_1",
  "1010": "SELECT T1.time FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "1012": "SELECT T1.position FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.milliseconds = ( SELECT MIN(T3.milliseconds) FROM lapTimes AS T3 JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.forename = 'Lewis' AND T4.surname = 'Hamilton' AND T3.milliseconds IS NOT NULL ) AND T1.milliseconds IS NOT NULL AND T1.position IS NOT NULL;\t----- bird -----\tformula_1",
  "1013": "SELECT T1.time FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix' AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "1014": "SELECT T1.name ,  MIN(T3.time) FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId  =  T2.circuitId JOIN lapTimes AS T3 ON T2.raceId  =  T3.raceId WHERE T1.country  =  'Italy' AND T3.time IS NOT NULL GROUP BY T1.circuitId\t----- bird -----\tformula_1",
  "1015": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId JOIN lapTimes AS T3 ON T1.raceId = T3.raceId WHERE T2.name = 'Austrian Grand Prix' AND T3.milliseconds IS NOT NULL ORDER BY T3.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
  "1016": "WITH RecordLap AS ( SELECT T1.raceId, T1.driverId FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix' AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1 ) SELECT T4.duration FROM pitStops AS T4 INNER JOIN RecordLap ON T4.raceId = RecordLap.raceId AND T4.driverId = RecordLap.driverId WHERE T4.duration IS NOT NULL;\t----- bird -----\tformula_1",
  "1017": "SELECT DISTINCT T3.lat, T3.lng FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
  "1018": "SELECT AVG(T1.milliseconds) FROM pitStops AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.milliseconds IS NOT NULL;\t----- bird -----\tformula_1",
  "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' AND T1.milliseconds IS NOT NULL;\t----- bird -----\tformula_1",
  "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating IS NOT NULL ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1021": "SELECT player_name, height FROM Player WHERE height IS NOT NULL ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential IS NOT NULL ORDER BY potential ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1023": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T1.defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
  "1024": "SELECT DISTINCT T1.player_api_id\nFROM Player_Attributes AS T1\nWHERE T1.crossing IS NOT NULL\nORDER BY T1.crossing DESC\nLIMIT 5;\t----- bird -----\teuropean_football_2",
  "1025": "SELECT T2.name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T1.home_team_goal IS NOT NULL AND T1.away_team_goal IS NOT NULL GROUP BY T1.league_id ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1026": "SELECT T1.home_team_api_id FROM Match AS T1 WHERE T1.season = '2015/2016' AND T1.home_team_goal < T1.away_team_goal GROUP BY T1.home_team_api_id ORDER BY COUNT(T1.id) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1027": "SELECT T1.player_name\nFROM Player AS T1\nJOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.penalties IS NOT NULL\nGROUP BY T1.player_api_id\nORDER BY MAX(T2.penalties) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
  "1028": "SELECT T3.team_long_name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id JOIN Team AS T3 ON T1.away_team_api_id = T3.team_api_id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND T1.away_team_goal > T1.home_team_goal GROUP BY T1.away_team_api_id ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes WHERE buildUpPlaySpeed IS NOT NULL ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
  "1030": "SELECT T2.name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T1.home_team_goal = T1.away_team_goal GROUP BY T1.league_id ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1031": "SELECT DISTINCT strftime('%Y', 'now') - strftime('%Y', T1.birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date >= '2013-01-01 00:00:00' AND T2.date <= '2015-12-31 00:00:00' AND T1.birthday IS NOT NULL AND T2.sprint_speed IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1032": "SELECT T2.name, COUNT(T1.id) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1033": "SELECT AVG(T1.height) FROM Player AS T1 WHERE T1.birthday >= '1990-01-01 00:00:00' AND T1.birthday < '1996-01-01 00:00:00' AND T1.height IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1034": "SELECT DISTINCT T1.player_api_id FROM Player_Attributes AS T1 WHERE substr(T1.date, 1, 4) = '2010' AND T1.overall_rating = (SELECT MAX(T2.overall_rating) FROM Player_Attributes AS T2 WHERE substr(T2.date, 1, 4) = '2010' AND T2.overall_rating IS NOT NULL)\t----- bird -----\teuropean_football_2",
  "1035": "SELECT DISTINCT T1.team_fifa_api_id FROM Team_Attributes AS T1 WHERE T1.buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
  "1036": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE STRFTIME('%Y', T2.date) = '2012' AND T2.buildUpPlayPassing IS NOT NULL AND T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE STRFTIME('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL);\t----- bird -----\teuropean_football_2",
  "1037": "SELECT CAST(SUM(CASE WHEN T2.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.player_api_id) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' AND T1.birthday IS NOT NULL AND T2.preferred_foot IS NOT NULL\t----- bird -----\teuropean_football_2",
  "1038": "SELECT T1.name FROM (SELECT T2.name, SUM(T1.home_team_goal + T1.away_team_goal) AS total_goals FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.home_team_goal IS NOT NULL AND T1.away_team_goal IS NOT NULL GROUP BY T1.league_id ORDER BY total_goals DESC LIMIT 5) AS T1 ORDER BY T1.total_goals ASC\t----- bird -----\teuropean_football_2",
  "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
  "1040": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T1.height IS NOT NULL AND T2.heading_accuracy IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1041": "SELECT T2.team_long_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date <= '2014-01-31 00:00:00' AND T1.chanceCreationPassing IS NOT NULL AND T1.chanceCreationPassing < ( SELECT AVG(T3.chanceCreationPassing) FROM Team_Attributes AS T3 WHERE T3.buildUpPlayDribblingClass = 'Normal' AND T3.date >= '2014-01-01 00:00:00' AND T3.date <= '2014-01-31 00:00:00' AND T3.chanceCreationPassing IS NOT NULL ) ORDER BY T1.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
  "1042": "SELECT T2.name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2009/2010' AND T1.home_team_goal IS NOT NULL AND T1.away_team_goal IS NOT NULL GROUP BY T1.league_id HAVING AVG(T1.home_team_goal) > AVG(T1.away_team_goal);\t----- bird -----\teuropean_football_2",
  "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
  "1044": "SELECT T1.player_name FROM Player AS T1 WHERE substr(T1.birthday, 1, 4) = '1970' AND substr(T1.birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
  "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro' ORDER BY T1.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1046": "SELECT DISTINCT T1.buildUpPlayPositioningClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
  "1047": "SELECT T1.heading_accuracy FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francois Affolter' AND T1.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
  "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
  "1049": "SELECT COUNT(*) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League';\t----- bird -----\teuropean_football_2",
  "1050": "SELECT T2.preferred_foot FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday IS NOT NULL ORDER BY T1.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1051": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = ( SELECT T3.potential FROM Player_Attributes AS T3 WHERE T3.potential IS NOT NULL ORDER BY T3.potential DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
  "1052": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
  "1053": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
  "1054": "SELECT DISTINCT T2.defensive_work_rate FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
  "1055": "SELECT T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating IS NOT NULL ORDER BY T2.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1056": "SELECT T1.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
  "1057": "SELECT AVG(T1.home_team_goal) FROM Match AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2",
  "1058": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE (T1.height = (SELECT MAX(height) FROM Player) OR T1.height = (SELECT MIN(height) FROM Player)) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1059": "SELECT player_name FROM Player WHERE height > 180 AND height IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990' AND birthday IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam %' AND weight > 170;\t----- bird -----\teuropean_football_2",
  "1062": "SELECT DISTINCT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND STRFTIME('%Y', T1.date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2",
  "1063": "SELECT T1.potential FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran' ORDER BY T1.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1064": "SELECT DISTINCT T1.player_api_id FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
  "1065": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
  "1066": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
  "1067": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
  "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.date) BETWEEN '2010' AND '2015' AND T2.height > 170;\t----- bird -----\teuropean_football_2",
  "1069": "SELECT T1.player_name FROM Player AS T1 WHERE T1.height IS NOT NULL ORDER BY T1.height ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1070": "SELECT T2.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
  "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
  "1072": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
  "1073": "SELECT COUNT(T1.id) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Germany 1. Bundesliga' AND STRFTIME('%Y-%m', T1.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
  "1074": "SELECT DISTINCT T2.team_short_name FROM Match AS T1 JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
  "1075": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = 61 AND T2.balance = (SELECT balance FROM Player_Attributes WHERE balance IS NOT NULL ORDER BY balance DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
  "1076": "SELECT AVG(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control END) - AVG(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control END) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
  "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
  "1078": "SELECT T1.player_name FROM Player AS T1 WHERE T1.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1079": "SELECT T1.player_name FROM Player AS T1 WHERE T1.height IS NOT NULL ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1080": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 WHERE T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
  "1081": "SELECT T2.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
  "1082": "SELECT T1.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany';\t----- bird -----\teuropean_football_2",
  "1083": "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating IS NOT NULL ORDER BY T1.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1084": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T1.birthday) < '1986' AND T1.birthday IS NOT NULL AND T2.defensive_work_rate = 'high' AND T2.defensive_work_rate IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1085": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') AND T2.crossing IS NOT NULL ORDER BY T2.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1086": "SELECT T2.heading_accuracy FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk' ORDER BY T2.date DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70;\t----- bird -----\teuropean_football_2",
  "1088": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
  "1089": "SELECT COUNT(T1.id) FROM Match AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium';\t----- bird -----\teuropean_football_2",
  "1090": "SELECT T2.long_passing FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday IS NOT NULL AND T2.long_passing IS NOT NULL ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1091": "SELECT COUNT(*) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND STRFTIME('%Y', T1.date) = '2009' AND STRFTIME('%m', T1.date) = '04';\t----- bird -----\teuropean_football_2",
  "1092": "SELECT T2.name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T1.league_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T2.birthday) < '1986' AND T2.birthday IS NOT NULL AND T1.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1094": "WITH ArielRating AS (\n    SELECT T1.overall_rating\n    FROM Player_Attributes AS T1\n    JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\n    WHERE T2.player_name = 'Ariel Borysiuk' AND T1.overall_rating IS NOT NULL\n    ORDER BY T1.date DESC\n    LIMIT 1\n),\nPaulinRating AS (\n    SELECT T1.overall_rating\n    FROM Player_Attributes AS T1\n    JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\n    WHERE T2.player_name = 'Paulin Puel' AND T1.overall_rating IS NOT NULL\n    ORDER BY T1.date DESC\n    LIMIT 1\n)\nSELECT\n    (CAST(AR.overall_rating AS REAL) - PR.overall_rating) * 100.0 / PR.overall_rating\nFROM ArielRating AS AR, PaulinRating AS PR;\t----- bird -----\teuropean_football_2",
  "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
  "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
  "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
  "1098": "SELECT T2.chanceCreationPassing, T2.chanceCreationPassingClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax' AND T2.chanceCreationPassing IS NOT NULL ORDER BY T2.chanceCreationPassing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1099": "SELECT T2.preferred_foot FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
  "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
  "1101": "SELECT AVG(T1.away_team_goal) FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id JOIN Country AS T3 ON T1.country_id = T3.id WHERE T2.team_long_name = 'Parma' AND T3.name = 'Italy'\t----- bird -----\teuropean_football_2",
  "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date LIKE '2016-06-23%' AND T2.birthday IS NOT NULL ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1103": "SELECT T1.overall_rating FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
  "1104": "SELECT T2.potential FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
  "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01 00:00:00';\t----- bird -----\teuropean_football_2",
  "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
  "1107": "SELECT T2.date FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' AND T2.crossing IS NOT NULL ORDER BY T2.crossing DESC, T2.date ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1108": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Willem II' AND T1.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
  "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
  "1110": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
  "1111": "SELECT T1.chanceCreationPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
  "1112": "SELECT T1.chanceCreationCrossingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hull City' AND T1.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
  "1113": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
  "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00' AND T1.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1115": "WITH PlayerRatings AS ( SELECT T1.player_name, T2.overall_rating FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Landon Donovan', 'Jordan Bowery') AND SUBSTR(T2.date, 1, 10) = '2013-07-12' AND T2.overall_rating IS NOT NULL ) SELECT (MAX(CASE WHEN T1_rating.player_name = 'Landon Donovan' THEN T1_rating.overall_rating END) * 1.0 - MAX(CASE WHEN T1_rating.player_name = 'Jordan Bowery' THEN T1_rating.overall_rating END) * 1.0) * 100.0 / MAX(CASE WHEN T1_rating.player_name = 'Landon Donovan' THEN T1_rating.overall_rating END) FROM PlayerRatings AS T1_rating;\t----- bird -----\teuropean_football_2",
  "1116": "SELECT player_name FROM Player WHERE height IS NOT NULL ORDER BY height DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
  "1117": "SELECT player_api_id FROM Player WHERE weight IS NOT NULL ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1118": "SELECT T1.player_name FROM Player AS T1 WHERE T1.birthday IS NOT NULL AND (CAST(strftime('%Y', 'now') - strftime('%Y', T1.birthday) AS INTEGER) - CASE WHEN strftime('%m%d', 'now') < strftime('%m%d', T1.birthday) THEN 1 ELSE 0 END) >= 35\t----- bird -----\teuropean_football_2",
  "1119": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 WHERE (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Aaron Lennon') IN (T1.home_player_1, T1.home_player_2, T1.home_player_3, T1.home_player_4, T1.home_player_5, T1.home_player_6, T1.home_player_7, T1.home_player_8, T1.home_player_9, T1.home_player_10, T1.home_player_11);\t----- bird -----\teuropean_football_2",
  "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 WHERE T1.away_player_1 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_2 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_3 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_4 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_5 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_6 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_7 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_8 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_9 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_10 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira') OR T1.away_player_11 IN (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
  "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 WHERE EXISTS ( SELECT 1 FROM Player AS T2 WHERE ( T2.player_api_id = T1.home_player_1 OR T2.player_api_id = T1.home_player_2 OR T2.player_api_id = T1.home_player_3 OR T2.player_api_id = T1.home_player_4 OR T2.player_api_id = T1.home_player_5 OR T2.player_api_id = T1.home_player_6 OR T2.player_api_id = T1.home_player_7 OR T2.player_api_id = T1.home_player_8 OR T2.player_api_id = T1.home_player_9 OR T2.player_api_id = T1.home_player_10 OR T2.player_api_id = T1.home_player_11 ) AND T2.birthday IS NOT NULL AND (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T2.birthday) AS INTEGER) - (strftime('%m%d', 'now') < strftime('%m%d', T2.birthday))) <= 30 );\t----- bird -----\teuropean_football_2",
  "1122": "SELECT T2.player_name FROM (SELECT player_api_id, MAX(overall_rating) AS max_rating FROM Player_Attributes WHERE overall_rating IS NOT NULL GROUP BY player_api_id) AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.max_rating DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1123": "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT potential FROM Player_Attributes WHERE potential IS NOT NULL ORDER BY potential DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
  "1124": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high' AND T2.attacking_work_rate IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1125": "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = 1 AND T1.finishing IS NOT NULL AND T2.birthday IS NOT NULL ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1126": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Match AS T2 ON T1.player_api_id IN (T2.home_player_1, T2.home_player_2, T2.home_player_3, T2.home_player_4, T2.home_player_5, T2.home_player_6, T2.home_player_7, T2.home_player_8, T2.home_player_9, T2.home_player_10, T2.home_player_11, T2.away_player_1, T2.away_player_2, T2.away_player_3, T2.away_player_4, T2.away_player_5, T2.away_player_6, T2.away_player_7, T2.away_player_8, T2.away_player_9, T2.away_player_10, T2.away_player_11) JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Belgium';\t----- bird -----\teuropean_football_2",
  "1127": "SELECT DISTINCT T3.name FROM Player_Attributes AS T1 JOIN Match AS T2 ON T1.player_api_id = T2.home_player_1 OR T1.player_api_id = T2.home_player_2 OR T1.player_api_id = T2.home_player_3 OR T1.player_api_id = T2.home_player_4 OR T1.player_api_id = T2.home_player_5 OR T1.player_api_id = T2.home_player_6 OR T1.player_api_id = T2.home_player_7 OR T1.player_api_id = T2.home_player_8 OR T1.player_api_id = T2.home_player_9 OR T1.player_api_id = T2.home_player_10 OR T1.player_api_id = T2.home_player_11 OR T1.player_api_id = T2.away_player_1 OR T1.player_api_id = T2.away_player_2 OR T1.player_api_id = T2.away_player_3 OR T1.player_api_id = T2.away_player_4 OR T1.player_api_id = T2.away_player_5 OR T1.player_api_id = T2.away_player_6 OR T1.player_api_id = T2.away_player_7 OR T1.player_api_id = T2.away_player_8 OR T1.player_api_id = T2.away_player_9 OR T1.player_api_id = T2.away_player_10 OR T1.player_api_id = T2.away_player_11 JOIN Country AS T3 ON T2.country_id = T3.id WHERE T1.vision >= 90 AND T1.vision IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1128": "WITH PlayerCountries AS (\n    SELECT T1.country_id, T1.home_player_1 AS player_api_id FROM Match AS T1 WHERE T1.home_player_1 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_2 AS player_api_id FROM Match AS T1 WHERE T1.home_player_2 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_3 AS player_api_id FROM Match AS T1 WHERE T1.home_player_3 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_4 AS player_api_id FROM Match AS T1 WHERE T1.home_player_4 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_5 AS player_api_id FROM Match AS T1 WHERE T1.home_player_5 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_6 AS player_api_id FROM Match AS T1 WHERE T1.home_player_6 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_7 AS player_api_id FROM Match AS T1 WHERE T1.home_player_7 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_8 AS player_api_id FROM Match AS T1 WHERE T1.home_player_8 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_9 AS player_api_id FROM Match AS T1 WHERE T1.home_player_9 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_10 AS player_api_id FROM Match AS T1 WHERE T1.home_player_10 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.home_player_11 AS player_api_id FROM Match AS T1 WHERE T1.home_player_11 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_1 AS player_api_id FROM Match AS T1 WHERE T1.away_player_1 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_2 AS player_api_id FROM Match AS T1 WHERE T1.away_player_2 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_3 AS player_api_id FROM Match AS T1 WHERE T1.away_player_3 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_4 AS player_api_id FROM Match AS T1 WHERE T1.away_player_4 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_5 AS player_api_id FROM Match AS T1 WHERE T1.away_player_5 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_6 AS player_api_id FROM Match AS T1 WHERE T1.away_player_6 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_7 AS player_api_id FROM Match AS T1 WHERE T1.away_player_7 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_8 AS player_api_id FROM Match AS T1 WHERE T1.away_player_8 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_9 AS player_api_id FROM Match AS T1 WHERE T1.away_player_9 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_10 AS player_api_id FROM Match AS T1 WHERE T1.away_player_10 IS NOT NULL\n    UNION\n    SELECT T1.country_id, T1.away_player_11 AS player_api_id FROM Match AS T1 WHERE T1.away_player_11 IS NOT NULL\n),\nCountryAvgWeight AS (\n    SELECT\n        T1.country_id,\n        AVG(T2.weight) AS avg_weight\n    FROM PlayerCountries AS T1\n    JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\n    WHERE T2.weight IS NOT NULL\n    GROUP BY T1.country_id\n)\nSELECT\n    T3.name\nFROM CountryAvgWeight AS T1\nJOIN Country AS T3 ON T1.country_id = T3.id\nORDER BY T1.avg_weight DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "1129": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
  "1130": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
  "1131": "SELECT AVG(T3.height)\nFROM (\n    SELECT DISTINCT T1.player_api_id\n    FROM (\n        SELECT home_player_1 as player_api_id FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_2 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_3 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_4 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_5 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_6 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_7 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_8 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_9 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_10 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT home_player_11 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_1 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_2 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_3 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_4 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_5 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_6 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_7 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_8 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_9 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_10 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') UNION\n        SELECT away_player_11 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy')\n    ) AS T1\n    WHERE T1.player_api_id IS NOT NULL\n) AS T2\nJOIN Player AS T3 ON T2.player_api_id = T3.player_api_id\nWHERE T3.height IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1132": "SELECT player_name FROM Player WHERE height > 180 AND height IS NOT NULL ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
  "1133": "SELECT COUNT(T1.id) FROM Player AS T1 WHERE T1.player_name LIKE 'Aaron%' AND T1.birthday > '1990';\t----- bird -----\teuropean_football_2",
  "1134": "SELECT T1.jumping - T2.jumping FROM Player_Attributes AS T1, Player_Attributes AS T2 WHERE T1.id = 6 AND T2.id = 23\t----- bird -----\teuropean_football_2",
  "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' AND potential IS NOT NULL ORDER BY potential ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
  "1136": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 WHERE T1.crossing = (SELECT MAX(T2.crossing) FROM Player_Attributes AS T2 WHERE T2.crossing IS NOT NULL) AND T1.preferred_foot = 'left' AND T1.preferred_foot IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1137": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.strength > 80 AND T1.stamina > 80 THEN T1.player_api_id ELSE NULL END) AS REAL) * 100.0 / COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1;\t----- bird -----\teuropean_football_2",
  "1138": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
  "1139": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.date LIKE '2008-09-24%' AND T2.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
  "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin' ORDER BY T1.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1141": "SELECT DISTINCT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
  "1142": "SELECT COUNT(T1.id) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Italian Serie A' AND T1.season = '2015/2016';\t----- bird -----\teuropean_football_2",
  "1143": "SELECT T1.home_team_goal FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie' AND T1.home_team_goal IS NOT NULL ORDER BY T1.home_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1144": "SELECT T2.finishing, T2.curve FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight IS NOT NULL ORDER BY T1.weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1145": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T1.league_id ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1146": "SELECT T2.team_long_name FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal IS NOT NULL ORDER BY T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1147": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating IS NOT NULL ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "1148": "SELECT COUNT(DISTINCT T1.player_api_id) * 100.0 / (SELECT COUNT(player_api_id) FROM Player) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height < 180 AND T2.overall_rating > 70 AND T1.height IS NOT NULL AND T2.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
  "1149": "SELECT CASE WHEN SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) THEN 'More in-patient' WHEN SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) < SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) THEN 'More out-patient' ELSE 'Equal number' END ,  (CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) - SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END)) * 100.0 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission IN ('+', '-');\t----- bird -----\tthrombosis_prediction",
  "1150": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND T1.Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1151": "SELECT SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.Birthday IS NOT NULL AND STRFTIME('%Y', T1.Birthday) BETWEEN '1930' AND '1940'\t----- bird -----\tthrombosis_prediction",
  "1152": "SELECT CAST(COUNT(CASE WHEN T1.Admission = '-' THEN T1.ID END) AS REAL) / COUNT(CASE WHEN T1.Admission = '+' THEN T1.ID END) FROM Patient AS T1 WHERE T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
  "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609\t----- bird -----\tthrombosis_prediction",
  "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109;\t----- bird -----\tthrombosis_prediction",
  "1155": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500 AND T2.LDH IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1156": "SELECT DISTINCT T1.ID ,  strftime('%Y', 'now') - strftime('%Y', T1.Birthday) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
  "1157": "SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
  "1158": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250 AND T2.`T-CHO` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1159": "SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5 AND T2.ALB IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1160": "SELECT CAST(COUNT(DISTINCT T1.ID) AS REAL) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP IS NOT NULL AND (T2.TP < 6.0 OR T2.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
  "1161": "SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND strftime('%Y', 'now') - strftime('%Y', T1.Birthday) >= 50 AND T1.Birthday IS NOT NULL AND T2.`aCL IgG` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1162": "SELECT count(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
  "1163": "SELECT CAST(strftime('%Y', T1.\"First Date\") AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) FROM Patient AS T1 WHERE T1.Birthday IS NOT NULL AND T1.\"First Date\" IS NOT NULL ORDER BY CAST(strftime('%Y', T1.\"First Date\") AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1164": "SELECT count(DISTINCT T2.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.SEX = 'F' AND STRFTIME('%Y', T1.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
  "1165": "SELECT MAX(CAST(strftime('%Y', T1.Birthday) AS INTEGER)) - MIN(CAST(strftime('%Y', T1.Birthday) AS INTEGER)) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND T1.Birthday IS NOT NULL AND T2.TG IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday IS NOT NULL ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1167": "SELECT CAST(COUNT(DISTINCT T1.ID) AS REAL) / 12 FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1998-01-01' AND '1998-12-31' AND T2.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1168": "SELECT T2.Date, strftime('%Y', T1.\"First Date\") - strftime('%Y', T1.Birthday) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T1.Birthday IS NOT NULL AND T1.\"First Date\" IS NOT NULL ORDER BY T1.Birthday ASC, T2.Date DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1169": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END), 0) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA IS NOT NULL AND T1.SEX IN ('M', 'F');\t----- bird -----\tthrombosis_prediction",
  "1170": "SELECT COUNT(*) FROM (SELECT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"First Date\" IS NOT NULL AND T2.\"Examination Date\" IS NOT NULL GROUP BY T1.ID HAVING CAST(strftime('%Y', MIN(T2.\"Examination Date\")) AS INTEGER) - CAST(strftime('%Y', T1.\"First Date\") AS INTEGER) >= 1);\t----- bird -----\tthrombosis_prediction",
  "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND date(T1.Birthday, '+18 years') > T2.`Examination Date` AND T1.Birthday IS NOT NULL AND T2.`Examination Date` IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.\"T-BIL\" > 2.0\t----- bird -----\tthrombosis_prediction",
  "1173": "SELECT T1.Diagnosis FROM Examination AS T1 WHERE T1.\"Examination Date\" BETWEEN '1985-01-01' AND '1995-12-31' AND T1.Diagnosis IS NOT NULL GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1174": "SELECT AVG(CAST(strftime('%Y', '1991-10-01') AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER)) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1991-10-01' AND '1991-10-30' AND T2.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1175": "SELECT CAST(strftime('%Y', T2.'Examination Date') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) ,  T2.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.HGB IS NOT NULL AND T1.Birthday IS NOT NULL AND T2.'Examination Date' IS NOT NULL ORDER BY T3.HGB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1176": "SELECT T1.ANA FROM Examination AS T1 WHERE T1.ID = 3605340 AND T1.`Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
  "1177": "SELECT T1.`T-CHO` FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04' AND T1.`T-CHO` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1178": "SELECT T1.SEX FROM Patient AS T1 WHERE T1.Diagnosis = 'AORTITIS' AND T1.`First Date` IS NOT NULL ORDER BY T1.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1179": "SELECT T2.\"aCL IgM\" FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.\"Examination Date\" = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
  "1180": "SELECT T2.SEX FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT = 9 AND T1.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
  "1181": "SELECT CAST(strftime('%Y', T1.Date) AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date = '1991-10-21' AND T1.UA = 8.4 AND T2.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1182": "SELECT COUNT(T2.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND STRFTIME('%Y', T2.Date) = '1995'\t----- bird -----\tthrombosis_prediction",
  "1183": "SELECT T2.Diagnosis FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` = '1997-01-27' AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
  "1184": "SELECT T1.Symptoms FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.\"Examination Date\" = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
  "1185": "SELECT SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18' AND (T2.Date LIKE '1981-11-%' OR T2.Date LIKE '1981-12-%') AND T2.`T-CHO` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1186": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T2.\"Examination Date\" >= '1997-01-01' AND T2.\"Examination Date\" <= '1997-12-31'\t----- bird -----\tthrombosis_prediction",
  "1187": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE T1.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T1.GPT > 30 AND T1.ALB < 4 AND T1.GPT IS NOT NULL AND T1.ALB IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1188": "SELECT T1.ID FROM Patient AS T1 WHERE T1.SEX = 'F' AND T1.Admission = '+' AND STRFTIME('%Y', T1.Birthday) = '1964'\t----- bird -----\tthrombosis_prediction",
  "1189": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 WHERE T1.Thrombosis = 2 AND T1.\"ANA Pattern\" = 'S' AND T1.\"aCL IgM\" > (SELECT 1.2 * AVG(T2.\"aCL IgM\") FROM Examination AS T2 WHERE T2.\"aCL IgM\" IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
  "1190": "SELECT CAST(SUM(CASE WHEN T1.`U-PRO` IS NOT NULL AND CAST(T1.`U-PRO` AS REAL) > 0 AND CAST(T1.`U-PRO` AS REAL) < 30 AND T1.UA IS NOT NULL AND T1.UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100.0 / SUM(CASE WHEN T1.`U-PRO` IS NOT NULL AND CAST(T1.`U-PRO` AS REAL) > 0 AND CAST(T1.`U-PRO` AS REAL) < 30 THEN 1 ELSE 0 END) FROM Laboratory AS T1\t----- bird -----\tthrombosis_prediction",
  "1191": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.\"First Date\" IS NOT NULL AND STRFTIME('%Y', T1.\"First Date\") = '1981';\t----- bird -----\tthrombosis_prediction",
  "1192": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
  "1193": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND T2.`ANA Pattern` != 'p' AND T1.SEX IS NOT NULL AND T1.Birthday IS NOT NULL AND T2.`ANA Pattern` IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1194": "SELECT DISTINCT T1.SEX FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
  "1195": "SELECT AVG(T2.ALB) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Diagnosis = 'SLE' AND T2.PLT > 400 AND T2.ALB IS NOT NULL AND T2.PLT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' AND Symptoms IS NOT NULL GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
  "1198": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
  "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE STRFTIME('%Y', T1.Date) = '1997' AND T1.TP IS NOT NULL AND (T1.TP <= 6 OR T1.TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
  "1200": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' AND T1.Diagnosis LIKE '%SLE%' THEN T1.ID END) AS REAL) * 100.0 / COUNT(DISTINCT CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' THEN T1.ID END) FROM Examination AS T1;\t----- bird -----\tthrombosis_prediction",
  "1201": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 WHERE STRFTIME('%Y', T1.Birthday) = '1980' AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
  "1202": "SELECT count(*) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Diagnosis = 'BEHCET' AND T2.Admission = '-' AND STRFTIME('%Y', T1.`Examination Date`) BETWEEN '1995' AND '1997'\t----- bird -----\tthrombosis_prediction",
  "1203": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5 AND T2.WBC IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1204": "SELECT julianday(T2.`Examination Date`) - julianday(T1.`First Date`) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 821298\t----- bird -----\tthrombosis_prediction",
  "1205": "SELECT T2.UA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266 AND T2.UA IS NOT NULL AND ((T1.SEX = 'M' AND T2.UA > 8.0) OR (T1.SEX = 'F' AND T2.UA > 6.5));\t----- bird -----\tthrombosis_prediction",
  "1206": "SELECT T1.Date FROM Laboratory AS T1 WHERE T1.ID = 48473 AND T1.GOT >= 60 AND T1.GOT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1207": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T2.GOT IS NOT NULL AND STRFTIME('%Y', T2.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
  "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60 AND T2.GPT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1209": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 AND T2.GPT IS NOT NULL AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
  "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
  "1211": "SELECT DISTINCT T1.ID, CAST(strftime('%Y', 'now') - strftime('%Y', T1.Birthday) AS INTEGER) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 600 AND T2.LDH <= 800 AND T1.Birthday IS NOT NULL AND T2.LDH IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1212": "SELECT DISTINCT T1.Admission FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T2.ALP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1213": "SELECT T1.ID, T2.ALP < 300 FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1214": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0 AND T2.TP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1215": "SELECT T2.TP - 8.5 FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5 AND T2.TP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1216": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Birthday IS NOT NULL AND T2.ALB IS NOT NULL AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
  "1217": "SELECT T1.ID, CASE WHEN T2.ALB BETWEEN 3.5 AND 5.5 THEN 'Within normal range' ELSE 'Outside normal range' END FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1982' AND T2.ALB IS NOT NULL AND T1.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1218": "SELECT CAST(COUNT(DISTINCT T1.ID) AS REAL) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 AND T2.UA IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1219": "SELECT AVG(T2.UA) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = T1.ID) AND T1.SEX IS NOT NULL AND T2.UA IS NOT NULL AND ((T1.SEX = 'M' AND T2.UA < 8.0) OR (T1.SEX = 'F' AND T2.UA < 6.5))\t----- bird -----\tthrombosis_prediction",
  "1220": "SELECT DISTINCT T1.ID ,  T1.SEX ,  T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
  "1221": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30 AND T2.UN IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5 AND T2.CRE IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1223": "None\t----- bird -----\tthrombosis_prediction",
  "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.\"T-BIL\" IS NOT NULL ORDER BY T1.\"T-BIL\" DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1225": "SELECT T2.SEX ,  GROUP_CONCAT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID  =  T2.ID WHERE T1.`T-BIL`  >=  2.0 AND T1.`T-BIL` IS NOT NULL GROUP BY T2.SEX\t----- bird -----\tthrombosis_prediction",
  "1226": "SELECT T1.ID ,  T2.`T-CHO` FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID  =  T2.ID WHERE T1.Birthday IS NOT NULL AND T2.`T-CHO` IS NOT NULL ORDER BY T2.`T-CHO` DESC, T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1227": "SELECT AVG(CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER)) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250 AND T1.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1228": "SELECT DISTINCT T1.ID, T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300 AND T2.TG IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1229": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG >= 200 AND T1.TG IS NOT NULL AND T2.Birthday IS NOT NULL AND (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER)) > 50\t----- bird -----\tthrombosis_prediction",
  "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK IS NOT NULL AND T2.CPK < 250;\t----- bird -----\tthrombosis_prediction",
  "1231": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND CAST(strftime('%Y', T1.Birthday) AS INTEGER) BETWEEN 1936 AND 1956 AND T2.CPK >= 250 AND T1.Birthday IS NOT NULL AND T2.CPK IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1232": "SELECT DISTINCT T1.ID ,  T1.SEX ,  CAST(strftime('%Y', 'now') - strftime('%Y', T1.Birthday) AS INTEGER) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID  =  T2.ID WHERE T2.GLU  >=  180 AND T2.`T-CHO`  <  250 AND T1.Birthday IS NOT NULL AND T2.GLU IS NOT NULL AND T2.`T-CHO` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T2.GLU IS NOT NULL AND STRFTIME('%Y', T1.Description) >= '1991'\t----- bird -----\tthrombosis_prediction",
  "1234": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.WBC <= 3.5 OR T2.WBC >= 9.0) AND T2.WBC IS NOT NULL AND T1.Birthday IS NOT NULL ORDER BY T1.SEX ASC, T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
  "1235": "SELECT DISTINCT T1.Diagnosis, T1.ID, CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) AS Age FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5 AND T2.RBC IS NOT NULL AND T1.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1236": "SELECT T1.Admission FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday IS NOT NULL AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50 AND T2.RBC IS NOT NULL AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) GROUP BY T1.ID\t----- bird -----\tthrombosis_prediction",
  "1237": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10 AND T2.HGB IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1239": "SELECT T1.ID, CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) AS Age FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 AND T2.HCT IS NOT NULL AND T1.Birthday IS NOT NULL GROUP BY T1.ID HAVING COUNT(T2.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
  "1240": "SELECT AVG(T1.HCT) FROM Laboratory AS T1 WHERE T1.Date LIKE '1991%' AND T1.HCT < 29\t----- bird -----\tthrombosis_prediction",
  "1241": "SELECT COUNT(DISTINCT CASE WHEN T1.PLT < 100 THEN T1.ID END), COUNT(DISTINCT CASE WHEN T1.PLT < 100 THEN T1.ID END) - COUNT(DISTINCT CASE WHEN T1.PLT > 400 THEN T1.ID END) FROM Laboratory AS T1 WHERE T1.PLT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1242": "SELECT DISTINCT T1.ID FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Date) = '1984' AND T1.PLT BETWEEN 100 AND 400 AND strftime('%Y', T1.Date) - strftime('%Y', T2.Birthday) < 50 AND T2.Birthday IS NOT NULL AND T1.PLT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1243": "SELECT SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1.0 ELSE 0 END) * 100 / SUM(CASE WHEN T2.PT >= 14 THEN 1.0 ELSE 0 END) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', 'now') - strftime('%Y', T1.Birthday) > 55 AND T1.Birthday IS NOT NULL AND T1.SEX IS NOT NULL AND T2.PT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1244": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(strftime('%Y', T1.\"First Date\") AS INTEGER) > 1992 AND T1.\"First Date\" IS NOT NULL AND T2.PT < 14 AND T2.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1245": "SELECT COUNT(*) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID AND T1.\"Examination Date\" = T2.Date WHERE T1.\"Examination Date\" > '1997-01-01' AND T2.APTT >= 45\t----- bird -----\tthrombosis_prediction",
  "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T2.Thrombosis = 3;\t----- bird -----\tthrombosis_prediction",
  "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND T2.WBC IS NOT NULL AND (T2.FG <= 150 OR T2.FG >= 450) AND T2.FG IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG < 150 OR T2.FG > 450)\t----- bird -----\tthrombosis_prediction",
  "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(T2.`U-PRO` AS REAL) >= 30\t----- bird -----\tthrombosis_prediction",
  "1250": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.\"U-PRO\" IS NOT NULL AND CAST(T2.\"U-PRO\" AS REAL) > 0 AND CAST(T2.\"U-PRO\" AS REAL) < 30\t----- bird -----\tthrombosis_prediction",
  "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG < 900 AND T1.Symptoms = 'abortion' AND T2.IGG IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL AND T1.IGG IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1253": "SELECT T2.Diagnosis FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGA IS NOT NULL AND T1.IGA BETWEEN 80 AND 500 ORDER BY T1.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.'First Date' >= '1990-01-01' AND T2.IGA BETWEEN 80 AND 500\t----- bird -----\tthrombosis_prediction",
  "1255": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM IS NOT NULL AND (T2.IGM < 40 OR T2.IGM > 400) AND T1.Diagnosis IS NOT NULL GROUP BY T1.Diagnosis ORDER BY COUNT(DISTINCT T1.ID) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Description IS NULL AND (T2.CRP = '+' OR T2.CRP = '-' OR CAST(T2.CRP AS REAL) < 1.0)\t----- bird -----\tthrombosis_prediction",
  "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRP IS NOT NULL AND T1.CRP NOT IN ('+-', '-') AND CAST(T1.CRP AS REAL) >= 1.0 AND T2.Birthday IS NOT NULL AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', T2.Birthday))) < 18\t----- bird -----\tthrombosis_prediction",
  "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.KCT = '+' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
  "1259": "SELECT DISTINCT T2.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Birthday > '1995-01-01' AND T3.RA IN ('-', '+-') AND T1.Birthday IS NOT NULL AND T3.RA IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1260": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER) > 60 AND T1.Birthday IS NOT NULL AND CAST(T2.RF AS REAL) < 20 AND T2.RF IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE CAST(T1.RF AS REAL) < 20 AND T1.RF IS NOT NULL AND T2.Thrombosis = 0 AND T2.Thrombosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
  "1263": "SELECT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.HCT <= 29 OR T2.HCT >= 52) AND T2.HCT IS NOT NULL AND T1.`aCL IgA` IS NOT NULL ORDER BY T1.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.C4 > 10 AND T2.C4 IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('-', '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
  "1266": "SELECT T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IS NOT NULL AND T2.RNP NOT IN ('-', '+-') AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1267": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SM IN ('-', '+-') AND T2.Thrombosis = 1\t----- bird -----\tthrombosis_prediction",
  "1268": "SELECT T1.ID FROM Patient AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.ID FROM Laboratory AS T2 WHERE T2.SM IS NOT NULL AND T2.SM NOT IN ('-', '+-')) AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
  "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` >= '1997-01-01' AND T2.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
  "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.SEX = 'M' AND T2.Symptoms = 'vertigo' AND T3.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
  "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND T1.\"First Date\" IS NOT NULL AND CAST(strftime('%Y', T1.\"First Date\") AS INTEGER) < 1990;\t----- bird -----\tthrombosis_prediction",
  "1272": "SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IS NOT NULL AND T2.SSA NOT IN ('-', '+-') AND T1.\"First Date\" IS NOT NULL ORDER BY T1.\"First Date\" ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.SSB IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
  "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('-', '+-') AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1275": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
  "1276": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8 AND T1.DNA IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1277": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"DNA-II\" < 8 AND T2.\"DNA-II\" IS NOT NULL AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
  "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.\"DNA-II\" >= 8 AND T2.\"DNA-II\" IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1279": "SELECT CAST( ( SELECT COUNT (DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis = 'SLE' ) AS REAL ) * 100.0 / ( SELECT COUNT (DISTINCT ID) FROM Laboratory WHERE GOT >= 60 )\t----- bird -----\tthrombosis_prediction",
  "1280": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60 AND T2.GOT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1281": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1282": "SELECT T2.Birthday FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT IS NOT NULL AND T1.GPT < 60 ORDER BY T1.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
  "1283": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60 AND T2.GOT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1284": "SELECT T2.`First Date` FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH < 500 AND T1.LDH IS NOT NULL ORDER BY T1.LDH DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1285": "SELECT T1.Date FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = (SELECT ID FROM Patient ORDER BY `First Date` DESC LIMIT 1) AND T1.LDH >= 500 AND T1.LDH IS NOT NULL ORDER BY T1.Date DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1286": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+' AND T2.ALP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300 AND T2.ALP IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1288": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0 AND T2.TP IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
  "1290": "SELECT T1.Date FROM Laboratory AS T1 WHERE T1.ALB IS NOT NULL AND T1.ALB > 3.5 AND T1.ALB < 5.5 ORDER BY T1.ALB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB IS NOT NULL AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP IS NOT NULL AND T2.TP >= 6.0 AND T2.TP <= 8.5\t----- bird -----\tthrombosis_prediction",
  "1292": "SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Examination AS T3 JOIN (SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.50 AND T2.UA IS NOT NULL ORDER BY T2.UA DESC LIMIT 1) AS T4 ON T3.ID = T4.ID\t----- bird -----\tthrombosis_prediction",
  "1293": "SELECT T1.ANA FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T2.CRE IS NOT NULL AND T1.ANA IS NOT NULL ORDER BY T1.ANA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1294": "SELECT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T2.CRE IS NOT NULL AND T1.`aCL IgA` IS NOT NULL ORDER BY T1.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-BIL\" >= 2.0 AND T1.\"ANA Pattern\" LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
  "1296": "SELECT T2.ANA FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` < 2.0 AND T1.`T-BIL` IS NOT NULL ORDER BY T1.`T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"T-CHO\" >= 250 AND T1.\"T-CHO\" IS NOT NULL AND T2.KCT = '-' AND T2.KCT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1298": "SELECT count(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"T-CHO\" < 250 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
  "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG IS NOT NULL AND T1.TG < 200 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1300": "SELECT T2.Diagnosis FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T1.TG IS NOT NULL ORDER BY T1.TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1301": "SELECT DISTINCT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK < 250 AND T2.CPK IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND T1.CPK IS NOT NULL AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
  "1303": "SELECT T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180 AND T2.GLU IS NOT NULL AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T2.GLU IS NOT NULL AND T1.Thrombosis = 0 AND T1.Thrombosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC >= 3.5 AND T2.WBC <= 9.0 AND T2.WBC IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1306": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
  "1307": "SELECT DISTINCT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.RBC IS NOT NULL AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
  "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1309": "SELECT T2.PLT FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T2.PLT > 100 AND T2.PLT < 400 AND T2.PLT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1310": "SELECT AVG(T2.PT) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14 AND T2.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
  "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis IN (1, 2) AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
  "1312": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
  "1313": "SELECT count(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
  "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design';\t----- bird -----\tstudent_club",
  "1315": "SELECT count(T2.link_to_member) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id  =  T2.link_to_event WHERE T1.event_name  =  'Women''s Soccer'\t----- bird -----\tstudent_club",
  "1316": "SELECT T1.phone FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1317": "SELECT COUNT(T3.member_id) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer' AND T3.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
  "1318": "SELECT T1.event_id FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1319": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1320": "SELECT T3.event_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean'\t----- bird -----\tstudent_club",
  "1321": "SELECT COUNT(*) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Student_Club' AND T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND STRFTIME('%Y', T1.event_date) = '2019'\t----- bird -----\tstudent_club",
  "1322": "SELECT count(T1.event_id) FROM event AS T1 WHERE T1.type = 'Meeting' AND T1.event_id IN (SELECT T2.link_to_event FROM attendance AS T2 GROUP BY T2.link_to_event HAVING count(T2.link_to_member) > 10)\t----- bird -----\tstudent_club",
  "1323": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING count(T2.link_to_member) > 20;\t----- bird -----\tstudent_club",
  "1324": "SELECT CAST(COUNT(T2.link_to_member) AS REAL) / COUNT(DISTINCT T1.event_id) FROM event AS T1 LEFT JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' AND STRFTIME('%Y', T1.event_date) = '2020'\t----- bird -----\tstudent_club",
  "1325": "SELECT T1.expense_description FROM expense AS T1 WHERE T1.cost IS NOT NULL ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1326": "SELECT count(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
  "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
  "1328": "SELECT T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
  "1329": "SELECT T2.county FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
  "1330": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
  "1331": "SELECT SUM(T2.amount) FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
  "1332": "SELECT sum(T1.spent) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event  =  T2.event_id WHERE T1.category  =  'Food' AND T2.event_name  =  'September Meeting'\t----- bird -----\tstudent_club",
  "1333": "SELECT T2.city, T2.state FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
  "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
  "1335": "SELECT SUM(T1.spent) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
  "1336": "SELECT DISTINCT T2.department FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
  "1337": "SELECT SUM(T1.amount) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
  "1338": "SELECT DISTINCT T1.approved FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
  "1339": "SELECT AVG(T1.cost) FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (strftime('%m', T1.expense_date) = '09' OR strftime('%m', T1.expense_date) = '10')\t----- bird -----\tstudent_club",
  "1340": "SELECT SUM(CASE WHEN SUBSTR(T2.event_date, 1, 4) = '2019' THEN T1.spent ELSE 0 END) - SUM(CASE WHEN SUBSTR(T2.event_date, 1, 4) = '2020' THEN T1.spent ELSE 0 END) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE SUBSTR(T2.event_date, 1, 4) IN ('2019', '2020') AND T1.spent IS NOT NULL;\t----- bird -----\tstudent_club",
  "1341": "SELECT T1.location FROM event AS T1 WHERE T1.event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
  "1342": "SELECT T1.cost FROM expense AS T1 WHERE T1.expense_description = 'Posters' AND T1.expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
  "1343": "SELECT T1.remaining FROM budget AS T1 WHERE T1.category = 'Food' AND T1.amount IS NOT NULL ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1344": "SELECT T1.notes FROM income AS T1 WHERE T1.source = 'Fundraising' AND T1.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
  "1345": "SELECT count(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
  "1346": "SELECT T1.phone FROM member AS T1 WHERE T1.first_name = 'Carlo' AND T1.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
  "1347": "SELECT T2.county FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
  "1348": "SELECT COUNT(T1.budget_id) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0;\t----- bird -----\tstudent_club",
  "1349": "SELECT SUM(T1.amount) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
  "1350": "SELECT T2.event_status FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
  "1351": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason';\t----- bird -----\tstudent_club",
  "1352": "SELECT count(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
  "1353": "SELECT T2.type FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson';\t----- bird -----\tstudent_club",
  "1354": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison';\t----- bird -----\tstudent_club",
  "1356": "SELECT T2.department FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President';\t----- bird -----\tstudent_club",
  "1357": "SELECT T1.date_received FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
  "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' AND T1.date_received IS NOT NULL ORDER BY T1.date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
  "1359": "SELECT CAST(SUM(T1.amount) FILTER (WHERE T2.event_name = 'Yearly Kickoff') AS REAL) / SUM(T1.amount) FILTER (WHERE T2.event_name = 'October Meeting') FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement';\t----- bird -----\tstudent_club",
  "1360": "SELECT SUM(CASE WHEN T1.category = 'Parking' THEN T1.amount ELSE 0 END) * 100.0 / SUM(T1.amount) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
  "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
  "1362": "SELECT count(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
  "1363": "SELECT DISTINCT T1.department FROM major AS T1 WHERE T1.college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
  "1364": "SELECT T2.city, T2.county, T2.state FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
  "1365": "SELECT T1.expense_description FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining IS NOT NULL ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
  "1366": "SELECT T3.member_id FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
  "1367": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college IS NOT NULL GROUP BY T2.college ORDER BY COUNT(T1.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1368": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
  "1369": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount IS NOT NULL ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1370": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
  "1371": "SELECT count(*) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1372": "SELECT T1.date_received FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
  "1373": "SELECT count(*) FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland';\t----- bird -----\tstudent_club",
  "1374": "SELECT count(T1.link_to_event) FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
  "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
  "1376": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.amount IS NOT NULL AND T2.amount > 0 AND T2.spent IS NOT NULL ORDER BY (CAST(T2.spent AS REAL) / T2.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1377": "SELECT count(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
  "1378": "SELECT T1.spent FROM budget AS T1 WHERE T1.spent IS NOT NULL ORDER BY T1.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
  "1380": "SELECT SUM(T1.spent) FROM budget AS T1 WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
  "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
  "1382": "SELECT T1.member_id FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id JOIN attendance AS T3 ON T1.member_id = T3.link_to_member JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
  "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina';\t----- bird -----\tstudent_club",
  "1384": "SELECT SUM(T1.amount) FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
  "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40\t----- bird -----\tstudent_club",
  "1386": "SELECT SUM(T1.cost) FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
  "1387": "SELECT DISTINCT T4.first_name, T4.last_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget JOIN member AS T4 ON T3.link_to_member = T4.member_id WHERE T1.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
  "1388": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount IS NOT NULL ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1389": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost IS NOT NULL GROUP BY T1.event_id ORDER BY SUM(T3.cost) ASC LIMIT 1;\t----- bird -----\tstudent_club",
  "1390": "SELECT SUM(CASE WHEN T3.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) * 100.0 / SUM(T1.cost) FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
  "1391": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.major_name = 'Physics' THEN 1 ELSE 0 END) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
  "1392": "SELECT T1.source FROM income AS T1 WHERE T1.date_received BETWEEN '2019-09-01' AND '2019-09-30' AND T1.amount IS NOT NULL GROUP BY T1.source ORDER BY SUM(T1.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary';\t----- bird -----\tstudent_club",
  "1394": "SELECT count(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
  "1395": "SELECT count(T2.link_to_member) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id  =  T2.link_to_event WHERE T1.event_name  =  'Community Theater' AND STRFTIME('%Y', T1.event_date)  =  '2019'\t----- bird -----\tstudent_club",
  "1396": "SELECT COUNT(T2.link_to_event), T3.major_name FROM member AS T1 LEFT JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Luisa' AND T1.last_name = 'Guidi';\t----- bird -----\tstudent_club",
  "1397": "SELECT AVG(T1.spent) FROM budget AS T1 WHERE T1.category = 'Food' AND T1.event_status = 'Closed';\t----- bird -----\tstudent_club",
  "1398": "SELECT T2.event_name FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T1.spent IS NOT NULL ORDER BY T1.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1399": "SELECT T1.member_id FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1400": "SELECT SUM(T1.type = 'Community Service') * 100.0 / COUNT(T1.event_id) FROM event AS T1 WHERE STRFTIME('%Y', T1.event_date) = '2019';\t----- bird -----\tstudent_club",
  "1401": "SELECT T1.cost FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
  "1402": "SELECT t_shirt_size FROM member WHERE t_shirt_size IS NOT NULL GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
  "1404": "SELECT T3.expense_description ,  SUM(T3.cost) FROM event AS T1 JOIN budget AS T2 ON T1.event_id  =  T2.link_to_event JOIN expense AS T3 ON T2.budget_id  =  T3.link_to_budget WHERE T1.event_name  =  'October Meeting' AND T3.approved  =  'Yes' AND T3.cost IS NOT NULL GROUP BY T3.expense_description\t----- bird -----\tstudent_club",
  "1405": "SELECT T2.amount, T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC\t----- bird -----\tstudent_club",
  "1406": "SELECT budget_id FROM budget WHERE category = 'Food' AND amount IS NOT NULL ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1407": "SELECT T1.budget_id FROM budget AS T1 WHERE T1.category = 'Advertising' AND T1.amount IS NOT NULL ORDER BY T1.amount DESC LIMIT 3\t----- bird -----\tstudent_club",
  "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
  "1409": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
  "1410": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name;\t----- bird -----\tstudent_club",
  "1411": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
  "1412": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
  "1413": "SELECT DISTINCT T2.zip FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50 AND T1.cost IS NOT NULL AND T2.zip IS NOT NULL\t----- bird -----\tstudent_club",
  "1414": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen';\t----- bird -----\tstudent_club",
  "1415": "SELECT DISTINCT T1.position FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
  "1416": "SELECT count(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
  "1417": "SELECT DISTINCT T1.type FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30 AND T2.remaining IS NOT NULL\t----- bird -----\tstudent_club",
  "1418": "SELECT DISTINCT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
  "1419": "SELECT T1.type FROM event AS T1 WHERE T1.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
  "1420": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
  "1421": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 LEFT JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
  "1422": "SELECT DISTINCT T1.type FROM event AS T1 WHERE T1.location = 'MU 215';\t----- bird -----\tstudent_club",
  "1423": "SELECT count(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
  "1424": "SELECT count(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
  "1425": "SELECT count(T1.major_id) FROM major AS T1 WHERE T1.department = 'School of Applied Sciences, Technology and Education' AND T1.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
  "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
  "1427": "SELECT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
  "1428": "SELECT T3.city, T3.state FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
  "1429": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id  =  T2.link_to_event JOIN member AS T3 ON T2.link_to_member  =  T3.member_id WHERE T1.location  =  '900 E. Washington St.' AND T1.type  =  'Social' AND T3.position  =  'Vice President'\t----- bird -----\tstudent_club",
  "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
  "1431": "SELECT T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id  =  T2.link_to_member JOIN event AS T3 ON T2.link_to_event  =  T3.event_id WHERE T1.position  =  'Member' AND T3.event_name  =  'Women''s Soccer'\t----- bird -----\tstudent_club",
  "1432": "SELECT CAST(SUM(CASE WHEN T2.link_to_member IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.member_id) FROM member AS T1 LEFT JOIN income AS T2 ON T1.member_id = T2.link_to_member AND T2.amount = 50 AND T2.source = 'Student_Club' WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member';\t----- bird -----\tstudent_club",
  "1433": "None\t----- bird -----\tstudent_club",
  "1434": "SELECT T1.zip_code FROM zip_code AS T1 WHERE T1.type = 'PO Box' AND T1.county = 'San Juan Municipio' AND T1.state = 'Puerto Rico'\t----- bird -----\tstudent_club",
  "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
  "1436": "SELECT DISTINCT T2.link_to_event FROM expense AS T1 JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.cost > 50;\t----- bird -----\tstudent_club",
  "1437": "SELECT T1.link_to_member ,  T2.link_to_event FROM expense AS T1 JOIN attendance AS T2 ON T1.link_to_member  =  T2.link_to_member WHERE T1.approved  =  'true' AND T1.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
  "1438": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
  "1439": "SELECT T1.phone FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
  "1440": "SELECT T1.email FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > 20 AND T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
  "1441": "SELECT count(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
  "1442": "SELECT CAST(SUM(CASE WHEN T3.min_remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.event_id) FROM (SELECT T1.event_id, MIN(T2.remaining) AS min_remaining FROM event AS T1 LEFT JOIN budget AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id) AS T3\t----- bird -----\tstudent_club",
  "1443": "SELECT T1.event_id, T1.location, T1.status FROM event AS T1 WHERE T1.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
  "1444": "SELECT T1.expense_description FROM expense AS T1 GROUP BY T1.expense_description HAVING AVG(T1.cost) > 50\t----- bird -----\tstudent_club",
  "1445": "SELECT T1.first_name, T1.last_name FROM member AS T1 WHERE T1.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
  "1446": "SELECT SUM(T1.type = 'PO Box') * 100.0 / COUNT(*) FROM zip_code AS T1\t----- bird -----\tstudent_club",
  "1447": "SELECT T1.event_name ,  T1.location FROM event AS T1 JOIN budget AS T2 ON T1.event_id  =  T2.link_to_event WHERE T2.remaining  >  0\t----- bird -----\tstudent_club",
  "1448": "SELECT T3.event_name ,  T3.event_date FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget  =  T2.budget_id JOIN event AS T3 ON T2.link_to_event  =  T3.event_id WHERE T1.expense_description  =  'Pizza' AND T1.cost  >  50 AND T1.cost  <  100\t----- bird -----\tstudent_club",
  "1449": "SELECT DISTINCT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE T3.cost > 100\t----- bird -----\tstudent_club",
  "1450": "SELECT DISTINCT T4.city, T4.county FROM income AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN zip_code AS T4 ON T3.location = T4.zip_code GROUP BY T3.event_id HAVING count(T1.income_id) > 40\t----- bird -----\tstudent_club",
  "1451": "SELECT T1.member_id FROM member AS T1 JOIN expense AS T2 ON T1.member_id  =  T2.link_to_member JOIN budget AS T3 ON T2.link_to_budget  =  T3.budget_id JOIN event AS T4 ON T3.link_to_event  =  T4.event_id WHERE T2.cost IS NOT NULL GROUP BY T1.member_id HAVING count(DISTINCT T4.event_id)  >  1 ORDER BY sum(T2.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1452": "SELECT AVG(T2.cost) FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position != 'Member'\t----- bird -----\tstudent_club",
  "1453": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' AND T3.cost IS NOT NULL GROUP BY T1.event_id HAVING SUM(T3.cost) < ( SELECT sum(T3_sub.cost) * 1.0 / count(DISTINCT T1_sub.event_id) FROM event AS T1_sub JOIN budget AS T2_sub ON T1_sub.event_id = T2_sub.link_to_event JOIN expense AS T3_sub ON T2_sub.budget_id = T3_sub.link_to_budget WHERE T2_sub.category = 'Parking' AND T3_sub.cost IS NOT NULL );\t----- bird -----\tstudent_club",
  "1454": "SELECT CASE WHEN T2.cnt = 0 THEN 0.0 ELSE CAST(SUM(T1.cost) AS REAL) * 100.0 / T2.cnt END FROM expense AS T1 JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id JOIN event AS T4 ON T3.link_to_event = T4.event_id JOIN (SELECT count(*) AS cnt FROM event WHERE type = 'Game') AS T2 WHERE T4.type = 'Game'\t----- bird -----\tstudent_club",
  "1455": "SELECT T1.link_to_budget FROM expense AS T1 WHERE T1.expense_description = 'Water, chips, cookies' AND T1.cost IS NOT NULL ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
  "1456": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost IS NOT NULL GROUP BY T1.member_id ORDER BY SUM(T2.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
  "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost IS NOT NULL GROUP BY T1.member_id HAVING MIN(T2.cost) > (SELECT AVG(T3.cost) FROM expense AS T3 WHERE T3.cost IS NOT NULL);\t----- bird -----\tstudent_club",
  "1458": "SELECT CAST(SUM(CASE WHEN T2.state = 'Maine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) - CAST(SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code\t----- bird -----\tstudent_club",
  "1459": "SELECT T2.major_name ,  T2.department FROM member AS T1 JOIN major AS T2 ON T1.link_to_major  =  T2.major_id WHERE T1.first_name  =  'Garrett' AND T1.last_name  =  'Gerke'\t----- bird -----\tstudent_club",
  "1460": "SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
  "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
  "1462": "SELECT T1.category ,  T1.amount FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event  =  T2.event_id WHERE T2.event_name  =  'January Speaker'\t----- bird -----\tstudent_club",
  "1463": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id  =  T2.link_to_event WHERE T2.category  =  'Food'\t----- bird -----\tstudent_club",
  "1464": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
  "1465": "SELECT T2.category FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters';\t----- bird -----\tstudent_club",
  "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
  "1467": "SELECT SUM(T1.spent), T2.event_name FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts' GROUP BY T2.event_name\t----- bird -----\tstudent_club",
  "1468": "SELECT T2.city FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke';\t----- bird -----\tstudent_club",
  "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T1.zip = 28092\t----- bird -----\tstudent_club",
  "1470": "SELECT COUNT(DISTINCT T1.GasStationID) FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Country = 'CZE' AND T3.Description = 'Premium';\t----- bird -----\tdebit_card_specializing",
  "1471": "SELECT CAST(COUNT(CASE WHEN T1.Currency = 'EUR' THEN T1.CustomerID END) AS REAL) / COUNT(CASE WHEN T1.Currency = 'CZK' THEN T1.CustomerID END) FROM customers AS T1;\t----- bird -----\tdebit_card_specializing",
  "1472": "SELECT T1.CustomerID FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201201' AND '201212' AND T1.Consumption IS NOT NULL GROUP BY T1.CustomerID ORDER BY SUM(T1.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1473": "SELECT AVG(T2.Consumption) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
  "1474": "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' AND T2.Consumption IS NOT NULL GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1475": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'KAM' AND T1.CustomerID IN (SELECT T2.CustomerID FROM yearmonth AS T2 WHERE T2.Date BETWEEN '201201' AND '201212' GROUP BY T2.CustomerID HAVING SUM(T2.Consumption) < 30000)\t----- bird -----\tdebit_card_specializing",
  "1476": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption WHEN T1.Currency = 'EUR' THEN -T2.Consumption ELSE 0 END) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency IN ('CZK', 'EUR') AND T2.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
  "1477": "SELECT substr(T1.Date, 1, 4) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption IS NOT NULL GROUP BY substr(T1.Date, 1, 4) ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1478": "SELECT T1.Segment FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Consumption IS NOT NULL AND T1.Segment IS NOT NULL GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1479": "SELECT SUBSTR(T1.Date, 1, 4) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Consumption IS NOT NULL GROUP BY SUBSTR(T1.Date, 1, 4) ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1480": "SELECT substr(T1.Date, 6, 2) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND substr(T1.Date, 1, 4) = '2013' GROUP BY substr(T1.Date, 6, 2) ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1481": "WITH CustomerTotalConsumption AS ( SELECT T1.Segment, SUM(T2.Consumption) AS TotalConsumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201301' AND '201312' AND T1.Segment IN ('SME', 'LAM', 'KAM') AND T2.Consumption IS NOT NULL GROUP BY T1.CustomerID, T1.Segment ), MinSegmentConsumption AS ( SELECT Segment, MIN(TotalConsumption) AS MinConsumption FROM CustomerTotalConsumption GROUP BY Segment ) SELECT MIN(CASE WHEN T3.Segment = 'SME' THEN T3.MinConsumption END) - MIN(CASE WHEN T3.Segment = 'LAM' THEN T3.MinConsumption END), MIN(CASE WHEN T3.Segment = 'LAM' THEN T3.MinConsumption END) - MIN(CASE WHEN T3.Segment = 'KAM' THEN T3.MinConsumption END), MIN(CASE WHEN T3.Segment = 'KAM' THEN T3.MinConsumption END) - MIN(CASE WHEN T3.Segment = 'SME' THEN T3.MinConsumption END) FROM MinSegmentConsumption AS T3;\t----- bird -----\tdebit_card_specializing",
  "1482": "None\t----- bird -----\tdebit_card_specializing",
  "1483": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 WHERE T1.CustomerID = 6 AND T1.Date >= '201308' AND T1.Date <= '201311'\t----- bird -----\tdebit_card_specializing",
  "1484": "SELECT SUM(CASE WHEN T1.Country = 'Czech Republic' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Country = 'Slovakia' THEN 1 ELSE 0 END) FROM gasstations AS T1 WHERE T1.Segment = 'discount' AND T1.Country IN ('Czech Republic', 'Slovakia');\t----- bird -----\tdebit_card_specializing",
  "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304')\t----- bird -----\tdebit_card_specializing",
  "1486": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) FROM customers AS T1 WHERE T1.Segment = 'SME' AND T1.Currency IN ('CZK', 'EUR')\t----- bird -----\tdebit_card_specializing",
  "1487": "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'Euro' AND T2.Date = '201310' AND T2.Consumption IS NOT NULL ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1488": "SELECT T1.CustomerID, SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption IS NOT NULL GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1489": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date = '201305';\t----- bird -----\tdebit_card_specializing",
  "1490": "SELECT CAST( (SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Consumption > 46.73 AND T2.Consumption IS NOT NULL) AS REAL ) * 100 / (SELECT COUNT(T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'LAM') AS Percentage\t----- bird -----\tdebit_card_specializing",
  "1491": "SELECT T1.Country, COUNT(T1.GasStationID) FROM gasstations AS T1 WHERE T1.Segment = 'value for money' AND T1.Country IS NOT NULL GROUP BY T1.Country ORDER BY COUNT(T1.GasStationID) DESC\t----- bird -----\tdebit_card_specializing",
  "1492": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
  "1493": "SELECT CAST(COUNT(CASE WHEN T1.Consumption > 528.3 THEN T1.CustomerID END) AS REAL) * 100.0 / COUNT(T1.CustomerID) FROM yearmonth AS T1 WHERE T1.Date = '201202';\t----- bird -----\tdebit_card_specializing",
  "1494": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.GasStationID) FROM gasstations AS T1 WHERE T1.Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
  "1495": "SELECT T1.CustomerID FROM yearmonth AS T1 WHERE T1.Date = '201309' AND T1.Consumption IS NOT NULL ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1496": "SELECT T2.Segment FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201309' AND T1.Consumption IS NOT NULL AND T2.Segment IS NOT NULL GROUP BY T2.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1497": "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' AND T2.Consumption IS NOT NULL ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1498": "SELECT T1.Consumption FROM yearmonth AS T1 WHERE SUBSTR(T1.Date, 1, 4) = '2012' AND T1.Consumption IS NOT NULL ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1499": "SELECT T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' AND T2.Consumption IS NOT NULL ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1500": "SELECT DISTINCT T2.Description FROM transactions_1k AS T1 JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE STRFTIME('%Y%m', T1.Date) = '201309'\t----- bird -----\tdebit_card_specializing",
  "1501": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE SUBSTR(T1.Date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
  "1502": "SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
  "1503": "SELECT DISTINCT T2.Description FROM transactions_1k AS T1 JOIN products AS T2 ON T1.ProductID = T2.ProductID JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
  "1504": "SELECT avg(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
  "1505": "SELECT count(DISTINCT T1.CustomerID) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
  "1506": "SELECT DISTINCT T3.Description FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11 AND T1.Time IS NOT NULL\t----- bird -----\tdebit_card_specializing",
  "1508": "SELECT count(*) FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
  "1509": "SELECT count(T1.TransactionID) FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012/01/01'\t----- bird -----\tdebit_card_specializing",
  "1510": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "1511": "SELECT AVG(T2.Price) FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' AND T2.Price IS NOT NULL\t----- bird -----\tdebit_card_specializing",
  "1512": "SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price IS NOT NULL GROUP BY T1.CustomerID ORDER BY SUM(T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1513": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Time IS NOT NULL ORDER BY T1.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1514": "SELECT T1.Currency FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
  "1515": "SELECT T2.Segment FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
  "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Date = '2012-08-26' AND T1.Time < '13:00:00' AND T1.Time IS NOT NULL\t----- bird -----\tdebit_card_specializing",
  "1517": "SELECT T1.Segment FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T2.Date ASC, T2.TransactionID ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1518": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
  "1519": "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
  "1520": "SELECT T1.Date ,  T1.Consumption FROM yearmonth AS T1 WHERE T1.CustomerID  =  (SELECT CustomerID FROM transactions_1k WHERE Date  =  '2012-08-24' AND Price  =  124.05) AND T1.Date  =  '2012-01'\t----- bird -----\tdebit_card_specializing",
  "1521": "SELECT COUNT(*) FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time >= '08:00:00' AND T1.Time <= '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
  "1522": "SELECT T2.Currency FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17\t----- bird -----\tdebit_card_specializing",
  "1523": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467 AND T2.Country IS NOT NULL\t----- bird -----\tdebit_card_specializing",
  "1524": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4\t----- bird -----\tdebit_card_specializing",
  "1525": "SELECT CAST(COUNT(DISTINCT CASE WHEN T2.Currency = 'EUR' THEN T1.CustomerID END) AS REAL) * 100.0 / COUNT(DISTINCT T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
  "1526": "SELECT (SUM(CASE WHEN SUBSTR(T2.Date, 1, 4) = '2012' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(T2.Date, 1, 4) = '2013' THEN T2.Consumption ELSE 0 END)) * 1.0 / SUM(CASE WHEN SUBSTR(T2.Date, 1, 4) = '2012' THEN T2.Consumption ELSE 0 END) FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 LIMIT 1) AND SUBSTR(T2.Date, 1, 4) IN ('2012', '2013') AND T2.Consumption IS NOT NULL\t----- bird -----\tdebit_card_specializing",
  "1527": "SELECT T1.GasStationID FROM transactions_1k AS T1 WHERE T1.Price IS NOT NULL GROUP BY T1.GasStationID ORDER BY SUM(T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1528": "SELECT CAST(COUNT(CASE WHEN T1.Segment = 'premium' THEN T1.GasStationID END) AS REAL) * 100 / COUNT(T1.GasStationID) FROM gasstations AS T1 WHERE T1.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
  "1529": "SELECT (SELECT SUM(T1.Amount) FROM transactions_1k AS T1 WHERE T1.CustomerID = 38508), (SELECT SUM(T2.Amount) FROM transactions_1k AS T2 WHERE T2.CustomerID = 38508 AND STRFTIME('%Y%m', T2.Date) = '201201')\t----- bird -----\tdebit_card_specializing",
  "1530": "SELECT T2.Description FROM transactions_1k AS T1 JOIN products AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Description ORDER BY SUM(T1.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
  "1531": "SELECT T1.CustomerID ,  AVG(CAST(T1.Price AS REAL) / T1.Amount) ,  T2.Currency FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID  =  T2.CustomerID WHERE T1.Price IS NOT NULL AND T1.Amount IS NOT NULL AND T1.Amount != 0 GROUP BY T1.CustomerID ORDER BY SUM(T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1532": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 AND T1.Price IS NOT NULL ORDER BY T1.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "1533": "SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.Date LIKE '201208%' AND T2.CustomerID IN (SELECT DISTINCT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.ProductID = 5 AND T1.Price IS NOT NULL AND T1.Amount IS NOT NULL AND T1.Amount != 0 AND (T1.Price / T1.Amount) > 29.00)\t----- bird -----\tdebit_card_specializing"
}