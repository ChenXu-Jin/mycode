[
    {
        "node_type": "keyword_extraction",
        "keywords": [
            "adults",
            "obtained",
            "badge Supporter",
            "Supporter",
            "Name of badge",
            "Age BETWEEN 19 AND 65"
        ],
        "status": "success"
    },
    {
        "node_type": "schema_filter",
        "tentative_schema": {
            "badges": [
                "Id",
                "UserId",
                "Name",
                "Date"
            ],
            "comments": [
                "Id",
                "PostId",
                "Score",
                "Text",
                "CreationDate",
                "UserId",
                "UserDisplayName"
            ],
            "postHistory": [
                "Id",
                "PostHistoryTypeId",
                "PostId",
                "RevisionGUID",
                "CreationDate",
                "UserId",
                "Text",
                "Comment",
                "UserDisplayName"
            ],
            "postLinks": [
                "Id",
                "CreationDate",
                "PostId",
                "RelatedPostId",
                "LinkTypeId"
            ],
            "posts": [
                "Id",
                "PostTypeId",
                "AcceptedAnswerId",
                "CreaionDate",
                "Score",
                "ViewCount",
                "Body",
                "OwnerUserId",
                "LasActivityDate",
                "Title",
                "Tags",
                "AnswerCount",
                "CommentCount",
                "FavoriteCount",
                "LastEditorUserId",
                "LastEditDate",
                "CommunityOwnedDate",
                "ParentId",
                "ClosedDate",
                "OwnerDisplayName",
                "LastEditorDisplayName"
            ],
            "tags": [
                "Id",
                "TagName",
                "Count",
                "ExcerptPostId",
                "WikiPostId"
            ],
            "users": [
                "Id",
                "Reputation",
                "CreationDate",
                "DisplayName",
                "LastAccessDate",
                "WebsiteUrl",
                "Location",
                "AboutMe",
                "Views",
                "UpVotes",
                "DownVotes",
                "AccountId",
                "Age",
                "ProfileImageUrl"
            ],
            "votes": [
                "Id",
                "PostId",
                "VoteTypeId",
                "CreationDate",
                "UserId",
                "BountyAmount"
            ]
        },
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "users": [
                "id",
                "age"
            ],
            "badges": [
                "userid",
                "name"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "sql_generation",
        "chain_of_thought_reasoning": "To find out how many adults obtained the badge with the name 'Supporter', I first need to identify which tables contain the relevant information. The 'badges' table holds the badge details, and the 'users' table contains the age information. To get the count of users who obtained the badge 'Supporter' and are between the age of 19 and 65, I need to join the 'badges' table with the 'users' table on the UserId column. I will then filter to include only those users where Age is between 19 and 65 and the badge Name equals 'Supporter'. Finally, I will use the COUNT function to get the number of such users. The relevant tables involved are: badges for badge details and users for age information. The query must follow the guidelines to include only relevant columns, count the users, and ensure proper filtering is applied.",
        "SQL": "SELECT COUNT(U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;",
        "status": "success"
    },
    {
        "node_type": "self_reflexion",
        "SQL": "SELECT COUNT(U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;",
        "status": "success"
    },
    {
        "node_type": "evaluation",
        "sql_generation": {
            "result": 1,
            "error": "--",
            "Question": "How many adults who obtained the badge Supporter?",
            "Evidence": "Supporter is the Name of badge; adult refers to Age BETWEEN 19 AND 65",
            "pred_sql": "SELECT COUNT(U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;",
            "gold_sql": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Supporter' AND T1.Age BETWEEN 19 AND 65"
        },
        "self_reflexion": {
            "result": 1,
            "error": "--",
            "Question": "How many adults who obtained the badge Supporter?",
            "Evidence": "Supporter is the Name of badge; adult refers to Age BETWEEN 19 AND 65",
            "pred_sql": "SELECT COUNT(U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;",
            "gold_sql": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Supporter' AND T1.Age BETWEEN 19 AND 65"
        },
        "status": "success"
    }
]