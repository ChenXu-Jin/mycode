{
    "1438": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO';",
    "484": "SELECT FD.name FROM cards AS C JOIN sets AS S ON C.setCode = S.code JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE S.name = 'Coldsnap' AND FD.language = 'Italian' ORDER BY C.convertedManaCost DESC LIMIT 1;",
    "1511": "SELECT AVG(T1.Price) FROM transactions_1k T1 JOIN customers T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'euro';",
    "1479": "SELECT SUBSTR(T2.Date, 1, 4) AS Year, SUM(T2.Consumption) AS TotalConsumption FROM yearmonth T2 JOIN customers T1 ON T2.CustomerID = T1.CustomerID WHERE T1.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;",
    "956": "SELECT T1.forename, T1.surname FROM drivers T1 INNER JOIN driverStandings T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) > '1975' AND T2.position = 2;",
    "1182": "SELECT COUNT(T2.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND strftime('%Y', T2.Date) = '1995';",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero T1 JOIN gender T2 ON T1.gender_id = T2.id JOIN publisher T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics';",
    "158": "SELECT T1.district_id FROM account T1 JOIN `order` T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333",
    "529": "SELECT T1.name FROM sets T1 JOIN set_translations T2 ON T1.code = T2.setCode AND T2.language = 'Korean' LEFT JOIN set_translations T3 ON T1.code = T3.setCode AND T3.language = 'Japanese' WHERE T3.language IS NULL;",
    "288": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1' AND T2.label = '+';",
    "1366": "SELECT T1.link_to_member FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting';",
    "1343": "SELECT remaining FROM budget AS T1 WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food');",
    "760": "SELECT (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13) * 100.0 / COUNT(*) AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180;",
    "1293": "SELECT T1.ANA FROM Examination T1 INNER JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 ORDER BY T1.ANA DESC LIMIT 1",
    "347": "SELECT T1.id, T3.text, T1.hasContentWarning FROM cards AS T1 JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T1.artist = 'Stephen Daniel';",
    "1082": "SELECT L.name FROM League AS L JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany';",
    "593": "SELECT COUNT(DISTINCT U.Id) FROM users U JOIN badges B ON U.Id = B.UserId WHERE U.Location = 'New York' AND B.Name IN ('Supporter', 'Teachers') GROUP BY U.Id HAVING COUNT(DISTINCT B.Name) = 2;",
    "1453": "SELECT T1.event_name FROM event T1 INNER JOIN expense T2 ON T1.event_id = T2.link_to_budget WHERE T2.cost < (SELECT AVG(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Parking'))",
    "520": "WITH ArtistCounts AS (SELECT artist, COUNT(id) AS card_count FROM cards GROUP BY artist), MinArtist AS (SELECT artist FROM ArtistCounts WHERE card_count = (SELECT MIN(card_count) FROM ArtistCounts)) SELECT T2.format FROM legalities T2 JOIN cards T1 ON T1.uuid = T2.uuid JOIN MinArtist MA ON T1.artist = MA.artist;",
    "623": "SELECT COUNT(T1.Id) FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 65;",
    "1158": "SELECT T1.ID FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250;",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';",
    "1268": "SELECT DISTINCT T1.ID FROM Laboratory T1 JOIN Patient T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') ORDER BY T2.Birthday ASC LIMIT 3;",
    "1533": "SELECT T2.CustomerID, T2.Consumption FROM transactions_1k T1 JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND (T1.Price / T1.Amount) > 29.00 AND T2.Date >= '2012-08-01' AND T2.Date < '2012-09-01';",
    "600": "WITH RelatedPosts AS ( SELECT T2.Id, T2.ViewCount FROM postLinks AS T1 JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217 ) SELECT 61217 AS Id, (SELECT ViewCount FROM posts WHERE Id = 61217) AS ViewCount UNION ALL SELECT Id, ViewCount FROM RelatedPosts;",
    "470": "SELECT S.releaseDate FROM cards AS C JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Ancestor''s Chosen';",
    "690": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1;",
    "847": "SELECT D.surname FROM qualifying Q INNER JOIN drivers D ON Q.driverId = D.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);",
    "362": "SELECT T3.text FROM rulings T3 JOIN cards T1 ON T1.uuid = T3.uuid WHERE T1.name = 'Condemn'",
    "1195": "SELECT AVG(T2.ALB) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T2.ALB IS NOT NULL AND T2.PLT IS NOT NULL;",
    "1291": "SELECT COUNT(*) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP BETWEEN 6.0 AND 8.5;",
    "353": "SELECT T1.code, T1.totalSetSize FROM sets T1 JOIN set_translations T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';",
    "1272": "SELECT T1.ID FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1;",
    "1472": "WITH MinConsumption AS (\n    SELECT T1.CustomerID, MIN(T1.Consumption) AS MinCons \n    FROM yearmonth AS T1 \n    JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \n    WHERE T1.Date BETWEEN '201201' AND '201212' AND T2.Segment = 'LAM' \n    GROUP BY T1.CustomerID\n) \nSELECT CustomerID FROM MinConsumption WHERE MinCons = (SELECT MIN(MinCons) FROM MinConsumption);",
    "423": "SELECT DISTINCT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;",
    "40": "SELECT T1.Phone FROM schools T1 JOIN satscores T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1;",
    "291": "SELECT COUNT(*) FROM molecule AS T1 WHERE T1.label = '+';",
    "307": "SELECT DISTINCT T3.element FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR000_2_3' UNION SELECT DISTINCT T3.element FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR000_2_3';",
    "1003": "WITH AccidentCounts AS ( SELECT driverId, COUNT(*) AS accidents FROM results AS T1 WHERE T1.raceId = (SELECT T2.raceId FROM races AS T2 WHERE T2.name = 'Canadian Grand Prix') AND T1.statusId = 3 GROUP BY driverId ), MaxAccidentDriver AS ( SELECT driverId FROM AccidentCounts ORDER BY accidents DESC LIMIT 1 ) SELECT accidents FROM AccidentCounts WHERE driverId = (SELECT driverId FROM MaxAccidentDriver);",
    "864": "SELECT COUNT(DISTINCT resultId) FROM results T1 INNER JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.time IS NOT NULL;",
    "939": "SELECT COUNT(DISTINCT D.driverId) FROM races R JOIN results Res ON R.raceId = Res.raceId JOIN drivers D ON Res.driverId = D.driverId WHERE R.year = 2008 AND R.name = 'Australian Grand Prix' AND D.nationality = 'USA';",
    "479": "SELECT COUNT(*) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL);",
    "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'",
    "1063": "SELECT T1.potential FROM Player_Attributes T1 JOIN Player T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran' AND T1.potential IS NOT NULL",
    "1104": "SELECT T2.potential FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00'",
    "1098": "SELECT T2.team_api_id, T1.chanceCreationPassing, T1.chanceCreationPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Ajax' ORDER BY T1.chanceCreationPassing DESC LIMIT 1;",
    "111": "SELECT COUNT(*) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND strftime('%Y', T1.date) = '1996';",
    "97": "SELECT DISTINCT T1.client_id FROM client T1 INNER JOIN disp T2 ON T1.client_id = T2.client_id INNER JOIN trans T3 ON T2.account_id = T3.account_id WHERE T3.operation = 'POPLATEK PO OBRATU' AND T2.type = 'Disponent'",
    "631": "SELECT COUNT(T1.Id) FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo';",
    "549": "SELECT P.Body FROM tags T JOIN posts P ON T.ExcerptPostId = P.Id WHERE T.TagName = 'bayesian'",
    "758": "SELECT T3.colour FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'human';",
    "21": "SELECT COUNT(*) FROM frpm T1 WHERE T1.`County Name` = 'Los Angeles' AND T1.`Free Meal Count (K-12)` > 500 AND T1.`FRPM Count (K-12)` < 700;",
    "657": "SELECT U.DisplayName, U.WebsiteUrl FROM votes V JOIN users U ON V.UserId = U.Id WHERE V.VoteTypeId = 8 AND V.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)",
    "1467": "SELECT T1.event_name, SUM(T2.spent) AS total_spent FROM budget T2 JOIN event T1 ON T2.link_to_event = T1.event_id WHERE T2.category = 'Speaker Gifts' GROUP BY T1.event_name",
    "35": "WITH MinEnrollment AS (SELECT T2.CDSCode, MIN(T2.`Enrollment (K-12)`) AS MinEnroll FROM frpm AS T2 WHERE T2.`Charter School (Y/N)` = 1 GROUP BY T2.CDSCode) SELECT T1.AdmEmail1 FROM schools AS T1 JOIN MinEnrollment AS ME ON T1.CDSCode = ME.CDSCode WHERE ME.MinEnroll = (SELECT MIN(MinEnroll) FROM MinEnrollment) LIMIT 1;",
    "130": "SELECT COUNT(T1.account_id) FROM account AS T1 LEFT JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = (SELECT district_id FROM district WHERE A3 = 'South Bohemia') AND T2.account_id IS NULL;",
    "1415": "SELECT T1.position FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business';",
    "1217": "SELECT P.ID, CASE WHEN L.ALB BETWEEN 3.5 AND 5.5 THEN 'Within normal range' ELSE 'Out of normal range' END AS Albumin_Status FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982';",
    "1430": "SELECT T2.last_name, T2.position FROM expense T1 JOIN member T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'",
    "240": "SELECT T1.element FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004';",
    "1319": "SELECT MA.college FROM member M JOIN major MA ON M.link_to_major = MA.major_id WHERE M.position = 'Vice President'",
    "1247": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.WBC BETWEEN 3.5 AND 9.0 AND (L.FG <= 150 OR L.FG >= 450);",
    "1161": "SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50;",
    "575": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.`DNA-II` >= 8 AND T1.Admission = '+' AND T2.`DNA-II` IS NOT NULL;",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 7 AND hair_colour_id = 9;",
    "448": "SELECT T2.name, T1.type FROM cards T1 INNER JOIN foreign_data T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'",
    "9": "SELECT COUNT(*) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.Charter = 1;",
    "338": "SELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T4.molecule_id = 'TR012' AND T1.element = 'C' AND T3.bond_type = 'double';",
    "81": "SELECT S.City, S.School, F.`Low Grade` FROM schools AS S JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.State = 'CA' ORDER BY S.Latitude ASC LIMIT 1",
    "1447": "SELECT T1.event_name, T1.location FROM event T1 JOIN budget T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0",
    "98": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date LIKE '1997%' AND T1.status = 'approved' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount ASC LIMIT 1",
    "510": "SELECT artist FROM cards WHERE convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE side IS NULL) AND side IS NULL;",
    "812": "SELECT T1.full_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;",
    "766": "SELECT T2.full_name FROM hero_attribute T1 JOIN attribute T3 ON T1.attribute_id = T3.id JOIN superhero T2 ON T1.hero_id = T2.id WHERE T3.attribute_name = 'strength' AND T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value DESC LIMIT 1;",
    "176": "SELECT SUM(L.amount) AS total_debt, CASE WHEN SUM(COALESCE(T.amount, 0)) >= SUM(L.amount) THEN 'Paid Off' WHEN SUM(COALESCE(T.amount, 0)) < 0.5 * SUM(L.amount) THEN 'Behind' ELSE 'On Track' END AS payment_status FROM client AS C JOIN disp AS D ON C.client_id = D.client_id JOIN account AS A ON D.account_id = A.account_id JOIN loan AS L ON A.account_id = L.account_id LEFT JOIN trans AS T ON A.account_id = T.account_id WHERE C.client_id = 992;",
    "309": "WITH bond_counts AS ( SELECT T2.molecule_id, COUNT(DISTINCT T2.bond_type) AS bond_type_count FROM bond T2 JOIN molecule T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'TR346' GROUP BY T2.molecule_id ) SELECT T1.atom_id, BC.bond_type_count FROM atom T1 JOIN molecule T3 ON T1.molecule_id = T3.molecule_id JOIN bond_counts BC ON T3.molecule_id = BC.molecule_id WHERE T3.label = 'TR346';",
    "860": "SELECT T2.nationality FROM qualifying T1 JOIN drivers T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 355 AND T1.q2 = '0:01:40'",
    "257": "SELECT DISTINCT C.atom_id2 FROM atom AS A JOIN connected AS C ON A.atom_id = C.atom_id WHERE A.element = 'sulfur';",
    "515": "SELECT T1.originalReleaseDate, T2.format FROM cards T1 JOIN legalities T2 ON T1.uuid = T2.uuid WHERE T1.uuid = (SELECT T3.uuid FROM cards T3 WHERE T3.rarity = 'mythic' ORDER BY T3.originalReleaseDate ASC LIMIT 1) AND T2.status = 'legal';",
    "937": "SELECT T2.time FROM races T1 JOIN results T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.position = 2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59;",
    "619": "SELECT COUNT(U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;",
    "286": "SELECT (CAST(COUNT(DISTINCT CASE WHEN T2.bond_type = '#' THEN T2.molecule_id END) AS FLOAT) / COUNT(DISTINCT C.molecule_id)) * 100 AS percent_triple_bond FROM molecule AS C LEFT JOIN bond AS T2 ON C.molecule_id = T2.molecule_id;",
    "613": "SELECT T1.Date FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'",
    "1124": "SELECT P.player_api_id, P.player_name FROM Player_Attributes AS T1 JOIN Player AS P ON T1.player_api_id = P.player_api_id WHERE T1.attacking_work_rate = 'high';",
    "541": "SELECT U.DisplayName FROM posts P JOIN users U ON P.OwnerUserId = U.Id ORDER BY P.FavoriteCount DESC LIMIT 1",
    "1085": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY T2.crossing DESC LIMIT 1;",
    "656": "WITH MaxScorePost AS (SELECT * FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1) SELECT T2.OwnerDisplayName FROM MaxScorePost T1 JOIN posts T2 ON T1.ParentId = T2.Id;",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70;",
    "303": "SELECT COUNT(T2.bond_id) AS double_bond_count, CASE WHEN T1.label = '+' THEN 1 ELSE 0 END AS is_carcinogenic FROM molecule AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR006' AND T2.bond_type = 'double';",
    "1349": "SELECT SUM(T2.amount) FROM event T1 JOIN budget T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Speaker';",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';",
    "1224": "SELECT T1.\"T-BIL\", T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory WHERE \"T-BIL\" IS NOT NULL) AND T1.\"T-BIL\" IS NOT NULL;",
    "1032": "SELECT L.name, COUNT(M.id) AS matches_played FROM Match M JOIN League L ON M.league_id = L.id GROUP BY M.league_id ORDER BY matches_played DESC LIMIT 1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(driverId) DESC LIMIT 1;",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050';",
    "1368": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'",
    "538": "SELECT T1.Title FROM posts T1 INNER JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';",
    "1213": "SELECT P.ID FROM Patient P LEFT JOIN Laboratory L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01' AND (L.ALP < 300 OR L.ALP IS NULL);",
    "729": "SELECT AVG(T1.height_cm) FROM superhero T1 JOIN publisher T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm IS NOT NULL;",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'",
    "139": "SELECT COUNT(T1.card_id) FROM card T1 JOIN disp T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'disponent';",
    "25": "SELECT T1.School, T1.FundingType FROM schools T1 INNER JOIN satscores T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Riverside' AND T2.AvgScrMath IS NOT NULL GROUP BY T1.CDSCode HAVING AVG(T2.AvgScrMath) > 400;",
    "1411": "SELECT T2.expense_description FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison';",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' AND dob IS NOT NULL ORDER BY dob ASC LIMIT 1",
    "231": "SELECT T2.bond_type, T1.label FROM bond AS T2 JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T2.molecule_id = 'TR018' GROUP BY T2.bond_type, T1.label ORDER BY COUNT(T2.bond_type) DESC LIMIT 1",
    "350": "SELECT DISTINCT T2.language FROM cards T1 JOIN foreign_data T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29';",
    "726": "SELECT T1.full_name FROM superhero T1 JOIN publisher T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm IS NOT NULL ORDER BY T1.height_cm DESC LIMIT 1;",
    "287": "SELECT (100.0 * SUM(bond_type = ' = ') / NULLIF(COUNT(bond_id), 0)) AS percent FROM bond WHERE molecule_id = 'TR047';",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY strftime('%Y', date))",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';",
    "483": "SELECT R.text FROM rulings R JOIN cards C ON R.uuid = C.uuid JOIN sets S ON C.setCode = S.code WHERE S.name = 'Coldsnap' AND EXISTS (SELECT 1 FROM foreign_data F WHERE F.uuid = C.uuid AND F.language = 'Italian');",
    "882": "SELECT MIN(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE location = 'Singapore')",
    "402": "SELECT id, (100.0 * COUNT(CASE WHEN isTextless = 0 THEN 1 END) / COUNT(*)) AS percentage FROM cards WHERE isStorySpotlight = 1 GROUP BY id;",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;",
    "720": "SELECT T1.full_name FROM superhero T1 JOIN hero_power T2 ON T1.id = T2.hero_id GROUP BY T1.id, T1.full_name HAVING COUNT(T2.power_id) > 15",
    "1454": "SELECT (SUM(T2.cost) / NULLIF(SUM(T3.amount), 0)) * 100 AS percentage FROM event AS T1 JOIN budget AS T3 ON T1.event_id = T3.link_to_event JOIN expense AS T2 ON T2.link_to_budget = T3.budget_id WHERE T1.type = 'Game' AND T2.cost IS NOT NULL;",
    "1527": "SELECT T2.GasStationID, SUM(T1.Price * T1.Amount) AS Revenue FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T2.GasStationID ORDER BY Revenue DESC LIMIT 1",
    "1040": "SELECT T1.player_name, AVG(T2.heading_accuracy) AS avg_heading_accuracy FROM Player T1 JOIN Player_Attributes T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10;",
    "1266": "SELECT P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RNP NOT IN ('-', '+-') ORDER BY P.Birthday DESC LIMIT 1;",
    "93": "SELECT COUNT(*) FROM client C JOIN district D ON C.district_id = D.district_id WHERE C.gender = 'M' AND D.A3 = 'North Bohemia' GROUP BY C.client_id HAVING AVG(D.A11) > 8000;",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';",
    "732": "WITH MinSpeedSuperhero AS ( SELECT s.id FROM superhero s JOIN hero_attribute ha ON ha.hero_id = s.id WHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND ha.attribute_value IS NOT NULL ORDER BY ha.attribute_value ASC LIMIT 1 ) SELECT pub.publisher_name FROM MinSpeedSuperhero mss JOIN superhero s ON mss.id = s.id JOIN publisher pub ON s.publisher_id = pub.id;",
    "1485": "SELECT COALESCE((SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304'), 0) - COALESCE((SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304'), 0) AS ConsumptionDifference;",
    "337": "SELECT T1.element, T2.bond_type FROM molecule AS T0 JOIN atom AS T1 ON T0.molecule_id = T1.molecule_id JOIN connected AS T3 ON T1.atom_id = T3.atom_id JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T0.molecule_id = 'TR016';",
    "778": "SELECT T1.superhero_name FROM superhero T1 JOIN hero_power T2 ON T1.id = T2.hero_id JOIN superpower T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'",
    "387": "SELECT T1.colors FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'OGW';",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1"
}